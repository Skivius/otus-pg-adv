---
apiVersion: v1
kind: Namespace
metadata:
  name: stackgres

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: sgbackupconfigs.stackgres.io
spec:
  group: stackgres.io
  scope: Namespaced
  names:
    kind: SGBackupConfig
    listKind: SGBackupConfigList
    plural: sgbackupconfigs
    singular: sgbackupconfig
    shortNames:
      - sgbac
  versions:
    - name: v1
      served: true
      storage: true
      additionalPrinterColumns:
      - name: type
        type: string
        jsonPath: .spec.storage.type
      - name: compression
        type: string
        jsonPath: .spec.baseBackups.compression
      - name: retention
        type: string
        jsonPath: .spec.baseBackups.retention
      - name: schedule
        type: string
        jsonPath: .spec.baseBackups.cronSchedule
      schema:
        openAPIV3Schema:
          type: object
          required: ["metadata", "spec"]
          properties:
            metadata:
              type: object
              properties:
                name:
                  type: string
                  description: |
                    Name of the Backup Configuration. StackGres supports [Continuous Archiving](https://www.postgresql.org/docs/current/continuous-archiving.html)-based backups which are performed automatically, helping achieve near-zero data loss in case of recovery from a backup. An SGBackupConfig contains the necessary configuration to perform these automatic backups and may be referenced by zero or more SGClusters, and if so it would be referenced by its name. Following [Kubernetes naming conventions](https://github.com/kubernetes/community/blob/master/contributors/design-proposals/architecture/identifiers.md), it must be an rfc1035/rfc1123 subdomain, that is, up to 253 characters consisting of one or more lowercase labels separated by `.`. Where each label is an alphanumeric (a-z, and 0-9) string, with a maximum length of 63 characters, with the `-` character allowed anywhere except the first or last character.

                    The name must be unique across all backup configurations in the same namespace.
            spec:
              type: object
              properties:
                baseBackups:
                  type: object
                  description: |
                    Back backups configuration.
                  properties:
                    cronSchedule:
                      type: string
                      description: |
                        Continuous Archiving backups are composed of periodic *base backups* and all the WAL segments produced in between those base backups. This parameter specifies at what time and with what frequency to start performing a new base backup.

                        Use cron syntax (`m h dom mon dow`) for this parameter, i.e., 5 values separated by spaces:
                        *  `m`: minute, 0 to 59.
                        *  `h`: hour, 0 to 23.
                        *  `dom`: day of month, 1 to 31 (recommended not to set it higher than 28).
                        *  `mon`: month, 1 to 12.
                        *  `dow`: day of week, 0 to 7 (0 and 7 both represent Sunday).

                        Also ranges of values (`start-end`), the symbol `*` (meaning `first-last`) or even `*/N`, where `N` is a number, meaning ""every `N`, may be used. All times are UTC. It is recommended to avoid 00:00 as base backup time, to avoid overlapping with any other external operations happening at this time.

                        If not set, full backups are performed everyday at 05:00 UTC.
                    retention:
                      type: integer
                      minimum: 1
                      description: |
                        Define the number of backups with managed lifecycle to keep, in a sliding window.

                        Consequently, the time range covered by backups is `periodicity*retention`, where `periodicity` is the separation between backups as specified by the `cronSchedule` property.

                        WAL files before the oldest backup with managed lifecycle will also be removed. So that, when retention is applied, the oldest WAL available will be `periodicity*retention` old.

                        Default is 5.
                    compression:
                      type: string
                      description: |
                        Specifies the backup compression algorithm. Possible options are: lz4, lzma, brotli. The default method is `lz4`. LZ4 is the fastest method, but compression ratio is the worst. LZMA is way slower, but it compresses backups about 6 times better than LZ4. Brotli is a good trade-off between speed and compression ratio, being about 3 times better than LZ4.
                      enum: ["lz4", "lzma", "brotli"]
                    performance:
                      type: object
                      properties:
                        maxNetworkBandwitdh:
                          type: integer
                          description: |
                            **Deprecated**: use instead maxNetworkBandwidth.

                            Maximum storage upload bandwidth used when storing a backup. In bytes (per second).
                        maxDiskBandwitdh:
                          type: integer
                          description: |
                            **Deprecated**: use instead maxDiskBandwidth.

                            Maximum disk read I/O when performing a backup. In bytes (per second).
                        maxNetworkBandwidth:
                          type: integer
                          description: |
                            Maximum storage upload bandwidth used when storing a backup. In bytes (per second).
                        maxDiskBandwidth:
                          type: integer
                          description: |
                            Maximum disk read I/O when performing a backup. In bytes (per second).
                        uploadDiskConcurrency:
                          type: integer
                          minimum: 1
                          description: |
                            Backup storage may use several concurrent streams to store the data. This parameter configures the number of parallel streams to use. By default, it's set to 1 (use one stream).
                storage:
                  type: object
                  description: |
                    Backup storage configuration.
                  properties:
                    type:
                      type: string
                      enum: ["s3", "s3Compatible", "gcs", "azureBlob"]
                      description: |
                        Determine the type of object storage used for storing the base backups and WAL segments.
                        Possible values:
                        *  `s3`: Amazon Web Services S3 (Simple Storage Service).
                        *  `s3Compatible`: non-AWS services that implement a compatibility API with AWS S3.
                        *  `gcs`: Google Cloud Storage.
                        *  `azureBlob`: Microsoft Azure Blob Storage.
                    s3:
                      type: object
                      description: |
                        Amazon Web Services S3 configuration.
                      properties:
                        bucket:
                          type: string
                          pattern: '^((s3|https?)://)?[^/]+(/[^/]*)*$'
                          description: |
                            AWS S3 bucket name.
                        path:
                          type: string
                          pattern: '^(/[^/]*)*$'
                          description: |
                            Optional path within the S3 bucket. Note that StackGres generates in any case a folder per StackGres cluster, using the `SGCluster.metadata.name`.
                        region:
                          type: string
                          description: |
                            The AWS S3 region. The Region may be detected using s3:GetBucketLocation, but if you wish to avoid giving permissions to this API call or forbid it from the applicable IAM policy, you must then specify this property.
                        storageClass:
                          type: string
                          description: |
                            The [Amazon S3 Storage Class](https://aws.amazon.com/s3/storage-classes/) to use for the backup object storage. By default, the `STANDARD` storage class is used. Other supported values include `STANDARD_IA` for Infrequent Access and `REDUCED_REDUNDANCY`.
                        awsCredentials:
                          type: object
                          description: |
                            The credentials to access AWS S3 for writing and reading.
                          properties:
                            secretKeySelectors:
                              type: object
                              description: |
                                Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core)(s) to reference the Secrets that contain the information about the `awsCredentials`. Note that you may use the same or different Secrets for the `accessKeyId` and the `secretAccessKey`. In the former case, the `keys` that identify each must be, obviously, different.
                              properties:
                                accessKeyId:
                                  type: object
                                  description: |
                                    AWS [access key ID](https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys). For example, `AKIAIOSFODNN7EXAMPLE`.
                                  properties:
                                    key:
                                      type: string
                                      description: |
                                        The key of the secret to select from. Must be a valid secret key.
                                    name:
                                      type: string
                                      description: |
                                        Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                  required: ["key", "name"]
                                secretAccessKey:
                                  type: object
                                  description: |
                                    AWS [secret access key](https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys). For example, `wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY`.
                                  properties:
                                    key:
                                      type: string
                                      description: |
                                        The key of the secret to select from. Must be a valid secret key.
                                    name:
                                      type: string
                                      description: |
                                        Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                  required: ["key", "name"]
                              required: ["accessKeyId", "secretAccessKey"]
                          required: ["secretKeySelectors"]
                      required: ["bucket", "awsCredentials"]
                    s3Compatible:
                      type: object
                      description: "AWS S3-Compatible API configuration"
                      properties:
                        bucket:
                          type: string
                          pattern: '^((s3|https?)://)?[^/]+(/[^/]*)*$'
                          description: |
                            Bucket name.
                        path:
                          type: string
                          pattern: '^(/[^/]*)*$'
                          description: |
                            Optional path within the S3 bucket. Note that StackGres generates in any case a folder per StackGres cluster, using the `SGCluster.metadata.name`.
                        enablePathStyleAddressing:
                          type: boolean
                          description: |
                            Enable path-style addressing (i.e. `http://s3.amazonaws.com/BUCKET/KEY`) when connecting to an S3-compatible service that lacks support for sub-domain style bucket URLs (i.e. `http://BUCKET.s3.amazonaws.com/KEY`).

                            Defaults to false.
                        endpoint:
                          type: string
                          description: |
                            Overrides the default url to connect to an S3-compatible service.
                            For example: `http://s3-like-service:9000`.
                        region:
                          type: string
                          description: |
                            The AWS S3 region. The Region may be detected using s3:GetBucketLocation, but if you wish to avoid giving permissions to this API call or forbid it from the applicable IAM policy, you must then specify this property.
                        storageClass:
                          type: string
                          description: |
                            The [Amazon S3 Storage Class](https://aws.amazon.com/s3/storage-classes/) to use for the backup object storage. By default, the `STANDARD` storage class is used. Other supported values include `STANDARD_IA` for Infrequent Access and `REDUCED_REDUNDANCY`.
                        awsCredentials:
                          type: object
                          description: |
                            The credentials to access AWS S3 for writing and reading.
                          properties:
                            secretKeySelectors:
                              type: object
                              description: |
                                Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core)(s) to reference the Secret(s) that contain the information about the `awsCredentials`. Note that you may use the same or different Secrets for the `accessKeyId` and the `secretAccessKey`. In the former case, the `keys` that identify each must be, obviously, different.
                              properties:
                                accessKeyId:
                                  type: object
                                  description: |
                                    AWS [access key ID](https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys). For example, `AKIAIOSFODNN7EXAMPLE`.
                                  properties:
                                    key:
                                      type: string
                                      description: |
                                        The key of the secret to select from. Must be a valid secret key.
                                    name:
                                      type: string
                                      description: |
                                        Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                  required: ["key", "name"]
                                secretAccessKey:
                                  type: object
                                  description: |
                                    AWS [secret access key](https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys). For example, `wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY`.
                                  properties:
                                    key:
                                      type: string
                                      description: |
                                        The key of the secret to select from. Must be a valid secret key.
                                    name:
                                      type: string
                                      description: |
                                        Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                  required: ["key", "name"]
                              required: ["accessKeyId", "secretAccessKey"]
                          required: ["secretKeySelectors"]
                      required: ["bucket", "awsCredentials"]
                    gcs:
                      type: object
                      description: |
                        Google Cloud Storage configuration.
                      properties:
                        bucket:
                          type: string
                          pattern: "^(gs://)?[^/]+(/[^/]*)*$"
                          description: |
                            GCS bucket name.
                        path:
                          type: string
                          pattern: "^(/[^/]*)*$"
                          description: |
                            Optional path within the GCS bucket. Note that StackGres generates in any case a folder per StackGres cluster, using the `SGCluster.metadata.name`.
                        gcpCredentials:
                          type: object
                          description: |
                            The credentials to access GCS for writing and reading.
                          properties:
                            fetchCredentialsFromMetadataService:
                              type: boolean
                              description: |
                                If true, the credentials will be fetched from the GCE/GKE metadata service and the field `secretKeySelectors` have to be set to null or omitted.

                                This is useful when running StackGres inside a GKE cluster using [Workload Identity](https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity).
                            secretKeySelectors:
                              type: object
                              description: |
                                A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) to reference the Secrets that contain the information about the Service Account to access GCS.
                              properties:
                                serviceAccountJSON:
                                  type: object
                                  description: |
                                    A service account key from GCP. In JSON format, as downloaded from the GCP Console.
                                  properties:
                                    key:
                                      type: string
                                      description: |
                                        The key of the secret to select from. Must be a valid secret key.
                                    name:
                                      type: string
                                      description: |
                                        Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                  required: ["key", "name"]
                              required: ["serviceAccountJSON"]
                      required: ["bucket", "gcpCredentials"]
                    azureBlob:
                      type: object
                      description: |
                        Azure Blob Storage configuration.
                      properties:
                        bucket:
                          type: string
                          pattern: "^(azure://)?[^/]+(/[^/]*)*$"
                          description: |
                            Azure Blob Storage bucket name.
                        path:
                          type: string
                          pattern: "^(/[^/]*)*$"
                          description: |
                            Optional path within the Azure Blob bucket. Note that StackGres generates in any case a folder per StackGres cluster, using the `SGCluster.metadata.name`.
                        azureCredentials:
                          type: object
                          description: |
                            The credentials to access Azure Blob Storage for writing and reading.
                          properties:
                            secretKeySelectors:
                              type: object
                              description: |
                                Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core)(s) to reference the Secret(s) that contain the information about the `azureCredentials`. . Note that you may use the same or different Secrets for the `storageAccount` and the `accessKey`. In the former case, the `keys` that identify each must be, obviously, different.
                              properties:
                                storageAccount:
                                  type: object
                                  description: |
                                    The [Storage Account](https://docs.microsoft.com/en-us/azure/storage/common/storage-account-overview?toc=/azure/storage/blobs/toc.json) that contains the Blob bucket to be used.
                                  properties:
                                    key:
                                      type: string
                                      description: |
                                        The key of the secret to select from. Must be a valid secret key.
                                    name:
                                      type: string
                                      description: |
                                        Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                  required: ["key", "name"]
                                accessKey:
                                  type: object
                                  description: |
                                    The [storage account access key](https://docs.microsoft.com/en-us/azure/storage/common/storage-account-keys-manage?tabs=azure-portal).
                                  properties:
                                    key:
                                      type: string
                                      description: |
                                        The key of the secret to select from. Must be a valid secret key.
                                    name:
                                      type: string
                                      description: |
                                        Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                  required: ["key", "name"]
                              required: ["storageAccount", "accessKey"]
                      required: ["bucket", "azureCredentials"]
                  required: ["type"]
              required: ["storage"]

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: sgbackups.stackgres.io
spec:
  group: stackgres.io
  scope: Namespaced
  names:
    kind: SGBackup
    listKind: SGBackupList
    plural: sgbackups
    singular: sgbackup
    shortNames:
      - sgbkp
  versions:
    - name: v1
      served: true
      storage: true
      additionalPrinterColumns:
      - name: cluster
        type: string
        jsonPath: .spec.sgCluster
      - name: managed
        type: string
        jsonPath: .status.process.managedLifecycle
      - name: status
        type: string
        jsonPath: .status.process.status
      - name: pg-version
        type: string
        jsonPath: .status.backupInformation.postgresVersion
        priority: 1
      - name: compressed-size
        type: integer
        format: byte
        jsonPath: .status.backupInformation.size.compressed
        priority: 1
      - name: timeline
        type: string
        jsonPath: .status.backupInformation.timeline
        priority: 1
      schema:
        openAPIV3Schema:
          type: object
          required: [metadata, spec]
          description: |
            A manual or automatically generated backup of an SGCluster configured with an SGBackupConfig.

            When a SGBackup is created a Job will perform a full backup of the database and update the status of the SGBackup
             with the all the information required to restore it and some stats (or a failure message in case something unexpected
             happened).
            After an SGBackup is created the same Job performs a reconciliation of the backups by applying the retention window
             that has been configured in the SGBackupConfig and removing the backups with managed lifecycle and the WAL files older
             than the ones that fit in the retention window. The reconciliation also removes backups (excluding WAL files) that do
             not belongs to any SGBackup. If the target storage of the SGBackupConfig is changed deletion of an SGBackup backups
             with managed lifecycle and the WAL files older than the ones that fit in the retention window and of backups that do
             not belongs to any SGBackup will not be performed anymore on the previous storage, only on the new target storage.
          properties:
            metadata:
              type: object
              properties:
                name:
                  type: string
                  maxLength: 56
                  pattern: "^[a-z]([-a-z0-9]*[a-z0-9])?$"
                  description: |
                    Name of the backup. Following [Kubernetes naming conventions](https://github.com/kubernetes/community/blob/master/contributors/design-proposals/architecture/identifiers.md), it must be an rfc1035/rfc1123 subdomain, that is, up to 253 characters consisting of one or more lowercase labels separated by `.`. Where each label is an alphanumeric (a-z, and 0-9) string, with a maximum length of 63 characters, with the `-` character allowed anywhere except the first or last character.

                    The name must be unique across all StackGres backups in the same namespace."
            spec:
              type: object
              properties:
                sgCluster:
                  type: string
                  description: |
                    The name of the `SGCluster` from which this backup is/will be taken.

                    If this is a copy of an existing completed backup in a different namespace
                     the value must be prefixed with the namespace of the source backup and a
                     dot `.` (e.g. `<cluster namespace>.<cluster name>`) or have the same value
                     if the source backup is also a copy.
                managedLifecycle:
                  type: boolean
                  description: |
                    Indicate if this backup is permanent and should not be removed by the automated
                     retention policy. Default is `false`.
            status:
              type: object
              properties:
                internalName:
                  type: string
                  description: |
                    The name of the backup.
                backupPath:
                  type: string
                  description: |
                    The path were the backup is stored.
                process:
                  type: object
                  properties:
                    status:
                      type: string
                      description: |
                        Status of the backup.
                    failure:
                      type: string
                      description: |
                        If the status is `failed` this field will contain a message indicating the failure reason.
                    jobPod:
                      type: string
                      description: |
                        Name of the pod assigned to the backup. StackGres utilizes internally a locking mechanism based on the pod name of the job that creates the backup.
                    managedLifecycle:
                      type: boolean
                      description: |
                        Status (may be transient) until converging to `spec.managedLifecycle`.
                    timing:
                      type: object
                      properties:
                        start:
                          type: string
                          # format: date-time
                          description: |
                            Start time of backup.
                        end:
                          type: string
                          # format: date-time
                          description: |
                            End time of backup.
                        stored:
                          type: string
                          # format: date-time
                          description: |
                            Time at which the backup is safely stored in the object storage.
                backupInformation:
                  type: object
                  properties:
                    hostname:
                      type: string
                      description: |
                        Hostname of the instance where the backup is taken from.
                    sourcePod:
                      type: string
                      description: |
                        Pod where the backup is taken from.
                    systemIdentifier:
                      type: string
                      description: |
                        Postgres *system identifier* of the cluster this backup is taken from.
                    postgresVersion:
                      type: string
                      description: |
                        Postgres version of the server where the backup is taken from.
                    pgData:
                      type: string
                      description: |
                        Data directory where the backup is taken from.
                    size:
                      type: object
                      properties:
                        uncompressed:
                          type: integer
                          format: int64
                          description: |
                            Size (in bytes) of the uncompressed backup.
                        compressed:
                          type: integer
                          format: int64
                          description: |
                            Size (in bytes) of the compressed backup.
                    lsn:
                      type: object
                      properties:
                        start:
                          type: string
                          description: |
                            LSN of when the backup started.
                        end:
                          type: string
                          description: |
                            LSN of when the backup finished.
                    startWalFile:
                      type: string
                      description: |
                        WAL segment file name when the backup was started.
                    timeline:
                      type: string
                      description: |
                        Backup timeline.
                    controlData:
                      type: object
                      description: |
                        An object containing data from the output of pg_controldata on the backup.
                      properties:
                        pg_control version number:
                          type: string
                        Catalog version number:
                          type: string
                        Database system identifier:
                          type: string
                        Database cluster state:
                          type: string
                        pg_control last modified:
                          type: string
                        Latest checkpoint location:
                          type: string
                        Latest checkpoint's REDO location:
                          type: string
                        Latest checkpoint's REDO WAL file:
                          type: string
                        Latest checkpoint's TimeLineID:
                          type: string
                        Latest checkpoint's PrevTimeLineID:
                          type: string
                        Latest checkpoint's full_page_writes:
                          type: string
                        Latest checkpoint's NextXID:
                          type: string
                        Latest checkpoint's NextOID:
                          type: string
                        Latest checkpoint's NextMultiXactId:
                          type: string
                        Latest checkpoint's NextMultiOffset:
                          type: string
                        Latest checkpoint's oldestXID:
                          type: string
                        Latest checkpoint's oldestXID's DB:
                          type: string
                        Latest checkpoint's oldestActiveXID:
                          type: string
                        Latest checkpoint's oldestMultiXid:
                          type: string
                        Latest checkpoint's oldestMulti's DB:
                          type: string
                        "Latest checkpoint's oldestCommitTsXid":
                          type: string
                        "Latest checkpoint's newestCommitTsXid":
                          type: string
                        Time of latest checkpoint:
                          type: string
                        Fake LSN counter for unlogged rels:
                          type: string
                        Minimum recovery ending location:
                          type: string
                        Min recovery ending loc's timeline:
                          type: string
                        Backup start location:
                          type: string
                        Backup end location:
                          type: string
                        End-of-backup record required:
                          type: string
                        wal_level setting:
                          type: string
                        wal_log_hints setting:
                          type: string
                        max_connections setting:
                          type: string
                        max_worker_processes setting:
                          type: string
                        max_wal_senders setting:
                          type: string
                        max_prepared_xacts setting:
                          type: string
                        max_locks_per_xact setting:
                          type: string
                        track_commit_timestamp setting:
                          type: string
                        Maximum data alignment:
                          type: string
                        Database block size:
                          type: string
                        Blocks per segment of large relation:
                          type: string
                        WAL block size:
                          type: string
                        Bytes per WAL segment:
                          type: string
                        Maximum length of identifiers:
                          type: string
                        Maximum columns in an index:
                          type: string
                        Maximum size of a TOAST chunk:
                          type: string
                        Size of a large-object chunk:
                          type: string
                        Date/time type storage:
                          type: string
                        Float4 argument passing:
                          type: string
                        Float8 argument passing:
                          type: string
                        Data page checksum version:
                          type: string
                        Mock authentication nonce:
                          type: string
                sgBackupConfig:
                  type: object
                  description: The name of the backup configuration used to perform this backup.
                  properties:
                    baseBackups:
                      type: object
                      description: |
                        Back backups configuration.
                      properties:
                        cronSchedule:
                          type: string
                          description: |
                            Continuous Archiving backups are composed of periodic *base backups* and all the WAL segments produced in between those base backups. This parameter specifies at what time and with what frequency to start performing a new base backup.

                            Use cron syntax (`m h dom mon dow`) for this parameter, i.e., 5 values separated by spaces:
                            *  `m`: minute, 0 to 59
                            *  `h`: hour, 0 to 23
                            *  `dom`: day of month, 1 to 31 (recommended not to set it higher than 28)
                            *  `mon`: month, 1 to 12
                            *  `dow`: day of week, 0 to 7 (0 and 7 both represent Sunday)

                            Also ranges of values (`start-end`), the symbol `*` (meaning `first-last`) or even `*/N`, where `N` is a number, meaning every `N`, may be used. All times are UTC. It is recommended to avoid 00:00 as base backup time, to avoid overlapping with any other external operations happening at this time.

                            If not provided, full backups will be performed each day at 05:00 UTC
                        retention:
                          type: integer
                          minimum: 1
                          description: |
                            Based on this parameter, an automatic retention policy is defined to delete old base backups.
                            This parameter specifies the number of base backups to keep, in a sliding window.
                            Consequently, the time range covered by backups is `periodicity*retention`, where `periodicity` is the separation between backups as specified by the `cronSchedule` property.

                            Default is 5.
                        compression:
                          type: string
                          description: |
                            Select the backup compression algorithm. Possible options are: lz4, lzma, brotli. The default method is `lz4`. LZ4 is the fastest method, but compression ratio is the worst. LZMA is way slower, but it compresses backups about 6 times better than LZ4. Brotli is a good trade-off between speed and compression ratio, being about 3 times better than LZ4.
                          enum: [ lz4, lzma, brotli ]
                        performance:
                          type: object
                          properties:
                            maxNetworkBandwitdh:
                              type: integer
                              description: |
                                **Deprecated**: use instead maxNetworkBandwidth.

                                Maximum storage upload bandwidth to be used when storing the backup. In bytes (per second).
                            maxDiskBandwitdh:
                              type: integer
                              description: |
                                **Deprecated**: use instead maxDiskBandwidth.

                                Maximum disk read I/O when performing a backup. In bytes (per second).
                            maxNetworkBandwidth:
                              type: integer
                              description: |
                                Maximum storage upload bandwidth to be used when storing the backup. In bytes (per second).
                            maxDiskBandwidth:
                              type: integer
                              description: |
                                Maximum disk read I/O when performing a backup. In bytes (per second).
                            uploadDiskConcurrency:
                              type: integer
                              minimum: 1
                              description: |
                                Backup storage may use several concurrent streams to store the data. This parameter configures the number of parallel streams to use to reading from disk. By default, it's set to 1 (use one stream).
                            uploadConcurrency:
                              type: integer
                              minimum: 1
                              description: |
                                Backup storage may use several concurrent streams to store the data. This parameter configures the number of parallel streams to use. By default, it's set to 1 (use one stream).
                    compression:
                      type: string
                      description: |
                        Select the backup compression algorithm. Possible options are: lz4, lzma, brotli. The default method is `lz4`. LZ4 is the fastest method, but compression ratio is the worst. LZMA is way slower, but it compresses backups about 6 times better than LZ4. Brotli is a good trade-off between speed and compression ratio, being about 3 times better than LZ4.
                      enum: [lz4, lzma, brotli]
                    storage:
                      type: object
                      description: |
                        Backup storage configuration.
                      properties:
                        type:
                          type: string
                          enum: [s3, s3Compatible, gcs, azureBlob]
                          description: |
                            Specifies the type of object storage used for storing the base backups and WAL segments.
                            Possible values:
                            *  `s3`: Amazon Web Services S3 (Simple Storage Service).
                            *  `s3Compatible`: non-AWS services that implement a compatibility API with AWS S3.
                            *  `gcs`: Google Cloud Storage.
                            *  `azureBlob`: Microsoft Azure Blob Storage.
                        s3:
                          type: object
                          description: |
                            Amazon Web Services S3 configuration.
                          properties:
                            bucket:
                              type: string
                              pattern: ^[^/]+(/[^/]*)*$
                              description: |
                                AWS S3 bucket name.
                            path:
                              type: string
                              pattern: ^(/[^/]*)*$
                              description: |
                                Optional path within the S3 bucket. Note that StackGres generates in any case a folder per
                                StackGres cluster, using the `SGCluster.metadata.name`.
                            region:
                              type: string
                              description: |
                                AWS S3 region. The Region may be detected using s3:GetBucketLocation, but to avoid giving permissions to this API call or forbid it from the applicable IAM policy, this property must be explicitely specified.
                            storageClass:
                              type: string
                              description: |
                                [Amazon S3 Storage Class](https://aws.amazon.com/s3/storage-classes/) used for the backup object storage. By default, the `STANDARD` storage class is used. Other supported values include `STANDARD_IA` for Infrequent Access and `REDUCED_REDUNDANCY`.
                            awsCredentials:
                              type: object
                              description: |
                                Credentials to access AWS S3 for writing and reading.
                              properties:
                                secretKeySelectors:
                                  type: object
                                  description: |
                                    Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core)s to reference the Secrets that contain the information about the `awsCredentials`.
                                  properties:
                                    accessKeyId:
                                      type: object
                                      description: |
                                        [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) containing the AWS Access Key ID secret.
                                      properties:
                                        key:
                                          type: string
                                          description: |
                                            The key of the secret to select from. Must be a valid secret key.
                                        name:
                                          type: string
                                          description: |
                                            Name of the referent.  [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                      required: [key, name]
                                    secretAccessKey:
                                      type: object
                                      description: |
                                        [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) containing the AWS Secret Access Key secret.
                                      properties:
                                        key:
                                          type: string
                                          description: |
                                            The key of the secret to select from. Must be a valid secret key.
                                        name:
                                          type: string
                                          description: |
                                            Name of the referent.  [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                      required: [key, name]
                                  required: [accessKeyId, secretAccessKey]
                              required: [secretKeySelectors]
                          required: [bucket, awsCredentials]
                        s3Compatible:
                          type: object
                          description: AWS S3-Compatible API configuration
                          properties:
                            bucket:
                              type: string
                              pattern: ^[^/]+(/[^/]*)*$
                              description: |
                                Bucket name.
                            path:
                              type: string
                              pattern: ^(/[^/]*)*$
                              description: |
                                Optional path within the S3 bucket. Note that StackGres generates in any case a folder per StackGres cluster, using the `SGCluster.metadata.name`.
                            enablePathStyleAddressing:
                              type: boolean
                              description: |
                                Enable path-style addressing (i.e. `http://s3.amazonaws.com/BUCKET/KEY`) when connecting to an S3-compatible service that lacks support for sub-domain style bucket URLs (i.e. `http://BUCKET.s3.amazonaws.com/KEY`). Defaults to false.
                            endpoint:
                              type: string
                              description: |
                                Overrides the default url to connect to an S3-compatible service.
                                For example: `http://s3-like-service:9000`.
                            region:
                              type: string
                              description: |
                                AWS S3 region. The Region may be detected using s3:GetBucketLocation, but to avoid giving permissions to this API call or forbid it from the applicable IAM policy, this property must be explicitely specified.
                            storageClass:
                              type: string
                              description: |
                                [Amazon S3 Storage Class](https://aws.amazon.com/s3/storage-classes/) used for the backup object storage. By default, the `STANDARD` storage class is used. Other supported values include `STANDARD_IA` for Infrequent Access and `REDUCED_REDUNDANCY`.
                            awsCredentials:
                              type: object
                              description: |
                                Credentials to access AWS S3 for writing and reading.
                              properties:
                                secretKeySelectors:
                                  type: object
                                  description: |
                                    A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) to reference the Secrets that contain the information about the `awsCredentials`.
                                  properties:
                                    accessKeyId:
                                      type: object
                                      description: |
                                        [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) containing the AWS Access Key ID secret.
                                      properties:
                                        key:
                                          type: string
                                          description: |
                                            The key of the secret to select from. Must be a valid secret key.
                                        name:
                                          type: string
                                          description: |
                                            Name of the referent.  [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                      required: [key, name]
                                    secretAccessKey:
                                      type: object
                                      description: |
                                        [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) containing the AWS Secret Access Key secret.
                                      properties:
                                        key:
                                          type: string
                                          description: |
                                            The key of the secret to select from. Must be a valid secret key.
                                        name:
                                          type: string
                                          description: |
                                            Name of the referent.  [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                      required: [key, name]
                                  required: [accessKeyId, secretAccessKey]
                              required: [secretKeySelectors]
                          required: [bucket, awsCredentials]
                        gcs:
                          type: object
                          description: |
                            Google Cloud Storage configuration.
                          properties:
                            bucket:
                              type: string
                              pattern: ^[^/]+(/[^/]*)*$
                              description: |
                                GCS bucket name.
                            path:
                              type: string
                              pattern: ^(/[^/]*)*$
                              description: |
                                Optional path within the GCS bucket. Note that StackGres generates in any case a folder per StackGres cluster, using the `SGCluster.metadata.name`.
                            gcpCredentials:
                              type: object
                              description: |
                                Credentials to access GCS for writing and reading.
                              properties:
                                fetchCredentialsFromMetadataService:
                                  type: boolean
                                  description: |
                                    If true, the credentials will be fetched from the GCE/GKE metadata service and the credentials from `secretKeySelectors` field will not be used.

                                    This is useful when running StackGres inside a GKE cluster using [Workload Identity](https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity).
                                secretKeySelectors:
                                  type: object
                                  description: |
                                    A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) to reference the Secrets that contain the information about the Service Account to access GCS.
                                  properties:
                                    serviceAccountJSON:
                                      type: object
                                      description: |
                                        A service account key from GCP. In JSON format, as downloaded from the GCP Console.
                                      properties:
                                        key:
                                          type: string
                                          description: |
                                            The key of the secret to select from. Must be a valid secret key.
                                        name:
                                          type: string
                                          description: |
                                            Name of the referent.  [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                      required: [key, name]
                                  required: [serviceAccountJSON]
                          required: [bucket, gcpCredentials]
                        azureBlob:
                          type: object
                          description: |
                            Azure Blob Storage configuration.
                          properties:
                            bucket:
                              type: string
                              pattern: ^[^/]+(/[^/]*)*$
                              description: |
                                Azure Blob Storage bucket name.
                            path:
                              type: string
                              pattern: ^(/[^/]*)*$
                              description: |
                                Optional path within the Azure Blobk bucket. Note that StackGres generates in any case a folder per StackGres cluster, using the `SGCluster.metadata.name`.
                            azureCredentials:
                              type: object
                              description: |
                                Credentials to access Azure Blob Storage for writing and reading.
                              properties:
                                secretKeySelectors:
                                  type: object
                                  description: |
                                    Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core)s to reference the Secrets that contain the information about the `azureCredentials`.
                                  properties:
                                    storageAccount:
                                      type: object
                                      description: |
                                        [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) containing the name of the storage account.
                                      properties:
                                        key:
                                          type: string
                                          description: |
                                            The key of the secret to select from. Must be a valid secret key.
                                        name:
                                          type: string
                                          description: |
                                            Name of the referent.  [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                      required: [key, name]
                                    accessKey:
                                      type: object
                                      description: |
                                        [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) containing the primary or secondary access key for the storage account.
                                      properties:
                                        key:
                                          type: string
                                          description: |
                                            The key of the secret to select from. Must be a valid secret key.
                                        name:
                                          type: string
                                          description: |
                                            Name of the referent.  [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                      required: [key, name]
                                  required: [storageAccount, accessKey]
                          required: [bucket, azureCredentials]
                      required: [type]
                  required: [storage]
    - name: v1beta1
      served: true
      storage: false
      additionalPrinterColumns:
      - jsonPath: .spec.sgCluster
        name: cluster
        type: string
      - jsonPath: .status.process.managedLifecycle
        name: managed
        type: string
      - jsonPath: .status.process.status
        name: status
        type: string
      - jsonPath: .status.backupInformation.postgresVersion
        name: pg-version
        priority: 1
        type: string
      - format: byte
        jsonPath: .status.backupInformation.size.compressed
        name: compressed-size
        priority: 1
        type: integer
      - jsonPath: .status.backupInformation.timeline
        name: timeline
        priority: 1
        type: string
      schema:
        openAPIV3Schema:
          description: |
            A manual or automatically generated backup of a SGCluster.
          properties:
            metadata:
              properties:
                name:
                  description: |
                    Name of the backup. Following [Kubernetes naming conventions](https://github.com/kubernetes/community/blob/master/contributors/design-proposals/architecture/identifiers.md), it must be an rfc1035/rfc1123 subdomain, that is, up to 253 characters consisting of one or more lowercase labels separated by `.`. Where each label is an alphanumeric (a-z, and 0-9) string, with a maximum length of 63 characters, with the `-` character allowed anywhere except the first or last character.

                    The name must be unique across all StackGres backups in the same namespace."
                  type: string
              type: object
            spec:
              properties:
                managedLifecycle:
                  description: |
                    Indicate if this backup is permanent and should not be removed by the automated retention policy.
                  type: boolean
                sgCluster:
                  description: |
                    The name of the `SGCluster` from which this backup is/will be taken.
                  type: string
              type: object
            status:
              properties:
                backupInformation:
                  properties:
                    controlData:
                      description: |
                        An object containing data from the output of pg_controldata on the backup.
                      type: object
                    hostname:
                      description: |
                        Hostname of the instance where the backup is taken from.
                      type: string
                    lsn:
                      properties:
                        end:
                          description: |
                            LSN of when the backup finished.
                          type: string
                        start:
                          description: |
                            LSN of when the backup started.
                          type: string
                      type: object
                    pgData:
                      description: |
                        Data directory where the backup is taken from.
                      type: string
                    postgresVersion:
                      description: |
                        Postgres version of the server where the backup is taken from.
                      type: string
                    size:
                      properties:
                        compressed:
                          description: |
                            Size (in bytes) of the compressed backup.
                          format: int64
                          type: integer
                        uncompressed:
                          description: |
                            Size (in bytes) of the uncompressed backup.
                          format: int64
                          type: integer
                      type: object
                    sourcePod:
                      description: |
                        Pod where the backup is taken from.
                      type: string
                    startWalFile:
                      description: |
                        WAL segment file name when the backup was started.
                      type: string
                    systemIdentifier:
                      description: |
                        Postgres *system identifier* of the cluster this backup is taken from.
                      type: string
                    timeline:
                      description: |
                        Backup timeline.
                      type: string
                  type: object
                internalName:
                  description: |
                    The name of the backup.
                  type: string
                process:
                  properties:
                    failure:
                      description: |
                        If the status is `failed` this field will contain a message indicating the failure reason.
                      type: string
                    jobPod:
                      description: |
                        Name of the pod assigned to the backup. StackGres utilizes internally a locking mechanism based on the pod name of the job that creates the backup.
                      type: string
                    managedLifecycle:
                      description: |
                        Status (may be transient) until converging to `spec.managedLifecycle`.
                      type: boolean
                    status:
                      description: |
                        Status of the backup.
                      enum:
                        - Running
                        - Completed
                        - Failed
                      type: string
                    timing:
                      properties:
                        end:
                          description: |
                            End time of backup.
                          type: string
                        start:
                          description: |
                            Start time of backup.
                          type: string
                        stored:
                          description: |
                            Time at which the backup is safely stored in the object storage.
                          type: string
                      type: object
                  type: object
                sgBackupConfig:
                  description: The name of the backup configuration used to perform
                    this backup.
                  properties:
                    baseBackups:
                      type: object
                      description: |
                        Back backups configuration.
                      properties:
                        cronSchedule:
                          type: string
                          description: |
                            Continuous Archiving backups are composed of periodic *base backups* and all the WAL segments produced in between those base backups. This parameter specifies at what time and with what frequency to start performing a new base backup.

                            Use cron syntax (`m h dom mon dow`) for this parameter, i.e., 5 values separated by spaces:
                            *  `m`: minute, 0 to 59
                            *  `h`: hour, 0 to 23
                            *  `dom`: day of month, 1 to 31 (recommended not to set it higher than 28)
                            *  `mon`: month, 1 to 12
                            *  `dow`: day of week, 0 to 7 (0 and 7 both represent Sunday)

                            Also ranges of values (`start-end`), the symbol `*` (meaning `first-last`) or even `*/N`, where `N` is a number, meaning every `N`, may be used. All times are UTC. It is recommended to avoid 00:00 as base backup time, to avoid overlapping with any other external operations happening at this time.

                            If not provided, full backups will be performed each day at 05:00 UTC
                        retention:
                          type: integer
                          minimum: 1
                          description: |
                            Based on this parameter, an automatic retention policy is defined to delete old base backups.
                            This parameter specifies the number of base backups to keep, in a sliding window.
                            Consequently, the time range covered by backups is `periodicity*retention`, where `periodicity` is the separation between backups as specified by the `cronSchedule` property.

                            Default is 5.
                        compression:
                          type: string
                          description: |
                            Select the backup compression algorithm. Possible options are: lz4, lzma, brotli. The default method is `lz4`. LZ4 is the fastest method, but compression ratio is the worst. LZMA is way slower, but it compresses backups about 6 times better than LZ4. Brotli is a good trade-off between speed and compression ratio, being about 3 times better than LZ4.
                          enum: [ lz4, lzma, brotli ]
                        performance:
                          type: object
                          properties:
                            maxNetworkBandwitdh:
                              type: integer
                              description: |
                                Maximum storage upload bandwidth to be used when storing the backup. In bytes (per second).
                            maxDiskBandwitdh:
                              type: integer
                              description: |
                                Maximum disk read I/O when performing a backup. In bytes (per second).
                            uploadDiskConcurrency:
                              type: integer
                              minimum: 1
                              description: |
                                Backup storage may use several concurrent streams to store the data. This parameter configures the number of parallel streams to use. By default, it will use 1 (one stream).
                    compression:
                      description: |
                        Select the backup compression algorithm. Possible options are: lz4, lzma, brotli. The default method is `lz4`. LZ4 is the fastest method, but compression ratio is the worst. LZMA is way slower, but it compresses backups about 6 times better than LZ4. Brotli is a good trade-off between speed and compression ratio, being about 3 times better than LZ4.
                      enum:
                        - lz4
                        - lzma
                        - brotli
                      type: string
                    storage:
                      description: |
                        Backup storage configuration.
                      properties:
                        azureBlob:
                          description: |
                            Azure Blob Storage configuration.
                          properties:
                            azureCredentials:
                              description: |
                                The credentials to access Azure Blob Storage for writing and reading.
                              properties:
                                secretKeySelectors:
                                  description: |
                                    Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core)s to reference the Secrets that contain the information about the `azureCredentials`.
                                  properties:
                                    accessKey:
                                      description: |
                                        [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) containing the primary or secondary access key for the storage account.
                                      properties:
                                        key:
                                          description: |
                                            The key of the secret to select from. Must be a valid secret key.
                                          type: string
                                        name:
                                          description: |
                                            Name of the referent.  [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                          type: string
                                      required:
                                        - key
                                        - name
                                      type: object
                                    storageAccount:
                                      description: |
                                        [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) containing the name of the storage account.
                                      properties:
                                        key:
                                          description: |
                                            The key of the secret to select from. Must be a valid secret key.
                                          type: string
                                        name:
                                          description: |
                                            Name of the referent.  [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                          type: string
                                      required:
                                        - key
                                        - name
                                      type: object
                                  required:
                                    - storageAccount
                                    - accessKey
                                  type: object
                              type: object
                            bucket:
                              description: |
                                Azure Blob Storage bucket name.
                              pattern: ^[^/]+(/[^/]*)*$
                              type: string
                            path:
                              description: |
                                Optional path within the Azure Blobk bucket. Note that StackGres generates in any case a folder per StackGres cluster, using the `SGCluster.metadata.name`.
                              pattern: ^(/[^/]*)*$
                              type: string
                          required:
                            - bucket
                            - azureCredentials
                          type: object
                        gcs:
                          description: |
                            Google Cloud Storage configuration.
                          properties:
                            bucket:
                              description: |
                                GCS bucket name.
                              pattern: ^[^/]+(/[^/]*)*$
                              type: string
                            gcpCredentials:
                              description: |
                                Credentials to access GCS for writing and reading.
                              properties:
                                fetchCredentialsFromMetadataService:
                                  description: |
                                    If true, the credentials will be fetched from the GCE/GKE metadata service and the credentials from `secretKeySelectors` field will not be used.

                                    This is useful when running StackGres inside a GKE cluster using [Workload Identity](https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity).
                                  type: boolean
                                secretKeySelectors:
                                  description: |
                                    A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) to reference the Secrets that contain the information about the Service Account to access GCS.
                                  properties:
                                    serviceAccountJSON:
                                      description: |
                                        A service account key from GCP. In JSON format, as downloaded from the GCP Console.
                                      properties:
                                        key:
                                          description: |
                                            The key of the secret to select from. Must be a valid secret key.
                                          type: string
                                        name:
                                          description: |
                                            Name of the referent.  [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                          type: string
                                      required:
                                        - key
                                        - name
                                      type: object
                                  required:
                                    - serviceAccountJSON
                                  type: object
                              type: object
                            path:
                              description: |
                                Optional path within the GCS bucket. Note that StackGres generates in any case a folder per StackGres cluster, using the `SGCluster.metadata.name`.
                              pattern: ^(/[^/]*)*$
                              type: string
                          required:
                            - bucket
                            - gcpCredentials
                          type: object
                        s3:
                          description: |
                            Amazon Web Services S3 configuration.
                          properties:
                            awsCredentials:
                              description: |
                                Credentials to access AWS S3 for writing and reading.
                              properties:
                                secretKeySelectors:
                                  description: |
                                    Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core)s to reference the Secrets that contain the information about the `awsCredentials`.
                                  properties:
                                    accessKeyId:
                                      description: |
                                        [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) containing the AWS Access Key ID secret.
                                      properties:
                                        key:
                                          description: |
                                            The key of the secret to select from. Must be a valid secret key.
                                          type: string
                                        name:
                                          description: |
                                            Name of the referent.  [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                          type: string
                                      required:
                                        - key
                                        - name
                                      type: object
                                    secretAccessKey:
                                      description: |
                                        [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) containing the AWS Secret Access Key secret.
                                      properties:
                                        key:
                                          description: |
                                            The key of the secret to select from. Must be a valid secret key.
                                          type: string
                                        name:
                                          description: |
                                            Name of the referent.  [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                          type: string
                                      required:
                                        - key
                                        - name
                                      type: object
                                  required:
                                    - accessKeyId
                                    - secretAccessKey
                                  type: object
                              required:
                                - secretKeySelectors
                              type: object
                            bucket:
                              description: |
                                AWS S3 bucket name.
                              pattern: ^[^/]+(/[^/]*)*$
                              type: string
                            path:
                              description: |
                                Optional path within the S3 bucket. Note that StackGres generates in any case a folder per
                                StackGres cluster, using the `SGCluster.metadata.name`.
                              pattern: ^(/[^/]*)*$
                              type: string
                            region:
                              description: |
                                AWS S3 region. The Region may be detected using s3:GetBucketLocation, but to avoid giving permissions to this API call or forbid it from the applicable IAM policy, this property must be explicitely specified.
                              type: string
                            storageClass:
                              description: |
                                [Amazon S3 Storage Class](https://aws.amazon.com/s3/storage-classes/) used for the backup object storage. By default, the `STANDARD` storage class is used. Other supported values include `STANDARD_IA` for Infrequent Access and `REDUCED_REDUNDANCY`.
                              type: string
                          required:
                            - bucket
                            - awsCredentials
                          type: object
                        s3Compatible:
                          description: AWS S3-Compatible API configuration
                          properties:
                            awsCredentials:
                              description: |
                                Credentials to access AWS S3 for writing and reading.
                              properties:
                                secretKeySelectors:
                                  description: |
                                    A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) to reference the Secrets that contain the information about the `awsCredentials`.
                                  properties:
                                    accessKeyId:
                                      description: |
                                        [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) containing the AWS Access Key ID secret.
                                      properties:
                                        key:
                                          description: |
                                            The key of the secret to select from. Must be a valid secret key.
                                          type: string
                                        name:
                                          description: |
                                            Name of the referent.  [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                          type: string
                                      required:
                                        - key
                                        - name
                                      type: object
                                    secretAccessKey:
                                      description: |
                                        [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) containing the AWS Secret Access Key secret.
                                      properties:
                                        key:
                                          description: |
                                            The key of the secret to select from. Must be a valid secret key.
                                          type: string
                                        name:
                                          description: |
                                            Name of the referent.  [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                          type: string
                                      required:
                                        - key
                                        - name
                                      type: object
                                  required:
                                    - accessKeyId
                                    - secretAccessKey
                                  type: object
                              required:
                                - secretKeySelectors
                              type: object
                            bucket:
                              description: |
                                Bucket name.
                              pattern: ^[^/]+(/[^/]*)*$
                              type: string
                            enablePathStyleAddressing:
                              description: |
                                Enable path-style addressing (i.e. `http://s3.amazonaws.com/BUCKET/KEY`) when connecting to an S3-compatible service that lacks support for sub-domain style bucket URLs (i.e. `http://BUCKET.s3.amazonaws.com/KEY`). Defaults to false.
                              type: boolean
                            endpoint:
                              description: |
                                Overrides the default url to connect to an S3-compatible service.
                                For example: `http://s3-like-service:9000`.
                              type: string
                            path:
                              description: |
                                Optional path within the S3 bucket. Note that StackGres generates in any case a folder per StackGres cluster, using the `SGCluster.metadata.name`.
                              pattern: ^(/[^/]*)*$
                              type: string
                            region:
                              description: |
                                AWS S3 region. The Region may be detected using s3:GetBucketLocation, but to avoid giving permissions to this API call or forbid it from the applicable IAM policy, this property must be explicitely specified.
                              type: string
                            storageClass:
                              description: |
                                [Amazon S3 Storage Class](https://aws.amazon.com/s3/storage-classes/) used for the backup object storage. By default, the `STANDARD` storage class is used. Other supported values include `STANDARD_IA` for Infrequent Access and `REDUCED_REDUNDANCY`.
                              type: string
                          required:
                            - bucket
                            - awsCredentials
                          type: object
                        type:
                          description: |
                            Specifies the type of object storage used for storing the base backups and WAL segments.
                            Possible values:
                            *  `s3`: Amazon Web Services S3 (Simple Storage Service).
                            *  `s3Compatible`: non-AWS services that implement a compatibility API with AWS S3.
                            *  `gcs`: Google Cloud Storage.
                            *  `azureBlob`: Microsoft Azure Blob Storage.
                          enum:
                            - s3
                            - s3Compatible
                            - gcs
                            - azureBlob
                          type: string
                      required:
                        - type
                      type: object
                  required:
                    - storage
                  type: object
              type: object
          required:
            - metadata
            - spec
          type: object

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: sgclusters.stackgres.io
spec:
  group: stackgres.io
  scope: Namespaced
  names:
    kind: SGCluster
    listKind: SGClusterList
    plural: sgclusters
    singular: sgcluster
    shortNames:
      - sgclu
  versions:
    - name: v1
      served: true
      storage: true
      additionalPrinterColumns:
      - name: version
        type: string
        jsonPath: .spec.postgres.version
      - name: instances
        type: integer
        jsonPath: .spec.instances 
      - name: Profile
        type: string
        jsonPath: .spec.sgInstanceProfile
      - name: Disk
        type: string
        jsonPath: .spec.pods.persistentVolume.size
      - name: prometheus-autobind
        type: string
        jsonPath: .spec.prometheusAutobind
        priority: 1
      - name: pool-config
        type: string
        jsonPath: .spec.configurations.sgPoolingConfig
        priority: 1
      - name: postgres-config
        type: string
        jsonPath: .spec.configurations.sgPostgresConfig
        priority: 1
      schema:
        openAPIV3Schema:
          type: object
          required: ["metadata", "spec"]
          properties:
            metadata:
              type: object
              properties:
                name:
                  type: string
                  maxLength: 44
                  pattern: "^[a-z]([-a-z0-9]*[a-z0-9])?$"
                  description: |
                    Name of the StackGres cluster. Following [Kubernetes naming conventions](https://github.com/kubernetes/community/blob/master/contributors/design-proposals/architecture/identifiers.md), it must be an rfc1035/rfc1123 subdomain, that is, up to 253 characters consisting of one or more lowercase labels separated by `.`. Where each label is an alphanumeric (a-z, and 0-9) string, with a maximum length of 63 characters, with the `-` character allowed anywhere except the first or last character.

                    The name must be unique across all SGCluster, SGShardedCluster and SGDistributedLogs in the same namespace.
            spec:
              type: object
              properties:
                postgres:
                  type: object
                  description: |
                    This section allows to configure Postgres features
                  properties:
                    version:
                      type: string
                      description: |
                        Postgres version used on the cluster. It is either of:
                        *  The string 'latest', which automatically sets the latest major.minor Postgres version.
                        *  A major version, like '14' or '13', which sets that major version and the latest minor version.
                        *  A specific major.minor version, like '14.4'.
                    flavor:
                      type: string
                      description: |
                        Postgres flavor used on the cluster. It is either of:
                        *  `babelfish` will use the [Babelfish for Postgres](https://babelfish-for-postgresql.github.io/babelfish-for-postgresql/).
                        
                        If not specified then the vanilla Postgres will be used for the cluster.
                    extensions:
                      type: array
                      description: |
                        StackGres support deploy of extensions at runtime by simply adding an entry to this array. A deployed extension still
                        requires the creation in a database using the [`CREATE EXTENSION`](https://www.postgresql.org/docs/current/sql-createextension.html)
                        statement. After an extension is deployed correctly it will be present until removed and the cluster restarted.
                        
                        A cluster restart is required for:
                        * Extensions that requires to add an entry to [`shared_preload_libraries`](https://postgresqlco.nf/en/doc/param/shared_preload_libraries/) configuration parameter.
                        * Upgrading extensions that overwrite any file that is not the extension''s control file or extension''s script file.
                        * Removing extensions. Until the cluster is not restarted a removed extension will still be available.
                        * Install of extensions that require extra mount. After installed the cluster will require to be restarted.
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                            description: The name of the extension to deploy.
                          publisher:
                            type: string
                            description: The id of the publisher of the extension to deploy. If not specified `com.ongres` will be used by default.
                          version:
                            type: string
                            description: The version of the extension to deploy. If not specified version of `stable` channel will be used by default.
                          repository:
                            type: string
                            description: The repository base URL from where to obtain the extension to deploy. If not specified https://stackgres.io/downloads/postgres/extensions will be used by default (or the value specified during operator deployment).
                        required: ["name"]
                    ssl:
                      type: object
                      description: |
                        This section allows to use SSL when connecting to Postgres
                      properties:
                        enabled:
                          type: boolean
                          description: |
                            Allow to enable SSL for connections to Postgres. By default is `false`.
                            
                            If `true` certificate and private key will be auto-generated unless fields `certificateSecretKeySelector` and `privateKeySecretKeySelector` are specified.
                        certificateSecretKeySelector:
                          type: object
                          description: |
                            Secret key selector for the certificate or certificate chain used for SSL connections.
                          properties:
                            name:
                              type: string
                              description: |
                                The name of Secret that contains the certificate or certificate chain for SSL connections
                            key:
                              type: string
                              description: |
                                The key of Secret that contains the certificate or certificate chain for SSL connections
                          required: [ "name", "key" ]
                        privateKeySecretKeySelector:
                          type: object
                          description: |
                            Secret key selector for the private key used for SSL connections.
                          properties:
                            name:
                              type: string
                              description: |
                                The name of Secret that contains the private key for SSL connections
                            key:
                              type: string
                              description: |
                                The key of Secret that contains the private key for SSL connections
                          required: [ "name", "key" ]
                  required: [ "version" ]
                instances:
                  type: integer
                  minimum: 1
                  maximum: 16
                  description: |
                    Number of StackGres instances for the cluster. Each instance contains one Postgres server.
                     Out of all of the Postgres servers, one is elected as the primary, the rest remain as read-only replicas.
                replication:
                  type: object
                  description: |
                    This section allows to configure Postgres replication mode and HA roles groups.

                    The main replication group is implicit and contains the total number of instances less the sum of all
                     instances in other replication groups.

                    The total number of instances is always specified by `.spec.instances`.
                  properties:
                    mode:
                      type: string
                      description: |
                        The replication mode applied to the whole cluster.
                        Possible values are:
                        * `async` (default)
                        * `sync`
                        * `strict-sync`
                        * `sync-all`
                        * `strict-sync-all`
                        
                        ### `async` Mode
                        
                        When in asynchronous mode the cluster is allowed to lose some committed transactions.
                         When the primary server fails or becomes unavailable for any other reason a sufficiently healthy standby
                         will automatically be promoted to primary. Any transactions that have not been replicated to that standby
                         remain in a "forked timeline" on the primary, and are effectively unrecoverable (the data is still there,
                         but recovering it requires a manual recovery effort by data recovery specialists).
                        
                        ### `sync` Mode
                        
                        When in synchronous mode a standby will not be promoted unless it is certain that the standby contains all
                         transactions that may have returned a successful commit status to client (clients can change the behavior
                         per transaction using PostgreSQL’s `synchronous_commit` setting. Transactions with `synchronous_commit`
                         values of `off` and `local` may be lost on fail over, but will not be blocked by replication delays). This
                         means that the system may be unavailable for writes even though some servers are available. System
                         administrators can still use manual failover commands to promote a standby even if it results in transaction
                         loss.
                        
                        Synchronous mode does not guarantee multi node durability of commits under all circumstances. When no suitable
                         standby is available, primary server will still accept writes, but does not guarantee their replication. When
                         the primary fails in this mode no standby will be promoted. When the host that used to be the primary comes
                         back it will get promoted automatically, unless system administrator performed a manual failover. This behavior
                         makes synchronous mode usable with 2 node clusters.
                        
                        When synchronous mode is used and a standby crashes, commits will block until the primary is switched to standalone
                         mode. Manually shutting down or restarting a standby will not cause a commit service interruption. Standby will
                         signal the primary to release itself from synchronous standby duties before PostgreSQL shutdown is initiated.
                        
                        ### `strict-sync` Mode
                        
                        When it is absolutely necessary to guarantee that each write is stored durably on at least two nodes, use the strict
                         synchronous mode. This mode prevents synchronous replication to be switched off on the primary when no synchronous
                         standby candidates are available. As a downside, the primary will not be available for writes (unless the Postgres
                         transaction explicitly turns off `synchronous_mode` parameter), blocking all client write requests until at least one
                         synchronous replica comes up.

                        **Note**: Because of the way synchronous replication is implemented in PostgreSQL it is still possible to lose
                         transactions even when using strict synchronous mode. If the PostgreSQL backend is cancelled while waiting to acknowledge
                         replication (as a result of packet cancellation due to client timeout or backend failure) transaction changes become
                         visible for other backends. Such changes are not yet replicated and may be lost in case of standby promotion.
                        
                        ### `sync-all` Mode
                        
                        The same as `sync` but `syncInstances` is ignored and the number of synchronous instances is equals to the total number
                         of instances less one.
                        
                        ### `strict-sync-all` Mode
                        
                        The same as `strict-sync` but `syncInstances` is ignored and the number of synchronous instances is equals to the total number
                         of instances less one.
                    role:
                      type: string
                      description: |
                        This role is applied to the instances of the implicit replication group that is composed by `.spec.instances` number of instances.
                        Possible values are:
                        * `ha-read` (default)
                        * `ha`
                        The primary instance will be elected among all the replication groups that are either `ha` or `ha-read`.
                        Only if the role is set to `ha-read` instances of main replication group will be exposed via the replicas service.
                    syncInstances:
                      type: integer
                      minimum: 1
                      description: |
                        Number of synchronous standby instances. Must be less than the total number of instances. It is set to 1 by default.
                         Only setteable if mode is `sync` or `strict-sync`.
                    groups:
                      type: array
                      description: |
                        StackGres support replication groups where a replication group of a specified number of instances could have different
                         replication role. The main replication group is implicit and contains the total number of instances less the sum of all
                         instances in other replication groups.
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                            description: The name of the replication group. If not set will default to the `group-<index>`.
                          role:
                            type: string
                            description: |
                              This role is applied to the instances of this replication group.
                              Possible values are:
                              * `ha-read`
                              * `ha`
                              * `readonly`
                              * `none`
                              The primary instance will be elected among all the replication groups that are either `ha` or `ha-read`.
                              Only if the role is set to `readonly` or `ha-read` instances of such replication group will be exposed via the replicas service.
                          instances:
                            type: integer
                            minimum: 1
                            maximum: 16
                            description: |
                              Number of StackGres instances for this replication group.
                              
                              The total number of instance of a cluster is always `.spec.instances`. The sum of the instances in the replication group must be
                               less than the total number of instances.
                        required: ["role", "instances"]
                sgInstanceProfile:
                  type: string
                  description: |
                    Name of the [SGInstanceProfile](https://stackgres.io/doc/latest/04-postgres-cluster-management/03-resource-profiles/). A SGInstanceProfile defines CPU and memory limits. Must exist before creating a cluster. When no profile is set, a default (currently: 1 core, 2 GiB RAM) one is used.
                metadata:
                  type: object
                  description: Metadata information from cluster created resources.
                  properties:
                    annotations:
                      type: object
                      description: Custom Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/) to be passed to resources created and managed by StackGres.
                      properties:
                        allResources:
                          type: object
                          description: Annotations to attach to any resource created or managed by StackGres.
                          additionalProperties:
                            type: string
                        clusterPods:
                          type: object
                          description: Annotations to attach to pods created or managed by StackGres.
                          additionalProperties:
                            type: string
                        services:
                          type: object
                          description: Annotations to attach to all services created or managed by StackGres.
                          additionalProperties:
                            type: string
                        primaryService:
                          type: object
                          description: Custom Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/) passed to the `-primary` service.
                          additionalProperties:
                            type: string
                        replicasService:
                          type: object
                          description: Custom Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/) passed to the `-replicas` service.
                          additionalProperties:
                            type: string
                    labels:
                      type: object
                      description: Custom Kubernetes [labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/) to be passed to resources created and managed by StackGres.
                      properties:
                        clusterPods:
                          type: object
                          description: Labels to attach to Pods created or managed by StackGres.
                          additionalProperties:
                            type: string 
                        services:
                          type: object
                          description: Labels to attach to Services and Endpoints created or managed by StackGres.
                          additionalProperties:
                            type: string 
                postgresServices:
                  type: object
                  description: Kubernetes [services](https://kubernetes.io/docs/concepts/services-networking/service/) created or managed by StackGres.
                  properties:
                    primary:
                      type: object
                      description: |
                        Configure the service to the primary with the same name as the SGCluster. A legacy service 
                        
                        Provides a stable connection (regardless of primary failures or switchovers) to the read-write Postgres server of the cluster.

                        See also https://kubernetes.io/docs/concepts/services-networking/service/
                      properties: &service-properties
                        enabled:
                          type: boolean
                          description: Specify if the service should be created or not.
                        type:
                          type: string
                          enum: ["ClusterIP", "LoadBalancer", "NodePort"]
                          description: |
                            type determines how the Service is exposed. Defaults to ClusterIP. Valid
                            options are ClusterIP, NodePort, and LoadBalancer. "ClusterIP" allocates
                            a cluster-internal IP address for load-balancing to endpoints.
                            "NodePort" builds on ClusterIP and allocates a port on every node.
                            "LoadBalancer" builds on NodePort and creates
                            an external load-balancer (if supported in the current cloud).
                            More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
                        customPorts:
                          type: array
                          description: |
                            The list of custom ports that will be exposed by the service.
                            
                            The names of custom ports will be prefixed with the string `custom-` so they do not
                             conflict with ports defined for the service.
                            
                            The names of target ports will be prefixed with the string `custom-` so that the ports
                             that can be referenced in this section will be only those defined under
                             .spec.pods.customContainers[].ports sections were names are also prepended with the same
                             prefix.
                            
                            See: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#serviceport-v1-core
                          items:
                            description: |
                              A custom port that will be exposed by the service.
                              
                              The name of the custom port will be prefixed with the string `custom-` so it does not
                               conflict with ports defined for the service.
                              
                              The name of target port will be prefixed with the string `custom-` so that the port
                               that can be referenced in this section will be only those defined under
                               .spec.pods.customContainers[].ports sections were names are also prepended with the same
                               prefix.
                               
                              See: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#serviceport-v1-core
                            properties: &ports-items-properties
                              {"appProtocol":{"description":"The application protocol for this port. This field follows standard Kubernetes label syntax. Un-prefixed names are reserved for IANA standard service names (as per RFC-6335 and http://www.iana.org/assignments/service-names). Non-standard protocols should use prefixed names such as mycompany.com/my-custom-protocol.","type":"string"},"name":{"description":"The name of this port within the service. This must be a DNS_LABEL. All ports within a ServiceSpec must have unique names. When considering the endpoints for a Service, this must match the 'name' field in the EndpointPort. Optional if only one ServicePort is defined on this service.","type":"string"},"nodePort":{"description":"The port on each node on which this service is exposed when type is NodePort or LoadBalancer.  Usually assigned by the system. If a value is specified, in-range, and not in use it will be used, otherwise the operation will fail.  If not specified, a port will be allocated if this Service requires one.  If this field is specified when creating a Service which does not need it, creation will fail. This field will be wiped when updating a Service to no longer need it (e.g. changing type from NodePort to ClusterIP). More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport","format":"int32","type":"integer"},"port":{"description":"The port that will be exposed by this service.","format":"int32","type":"integer"},"protocol":{"description":"The IP protocol for this port. Supports \"TCP\", \"UDP\", and \"SCTP\". Default is TCP.","type":"string"},"targetPort":{"description":"IntOrString is a type that can hold an int32 or a string.  When\n used in JSON or YAML marshalling and unmarshalling, it produces\n or consumes the inner type.  This allows you to have, for example,\n a JSON field that can accept a name or number.\n\nThe name will be prefixed with the string `custom-` so that the target port that can be\n referenced will be only those defined under .spec.pods.customContainers[].ports sections\n were names are also prepended with the same prefix.\n","format":"int-or-string","type":"string"}}
                            required:
                              - port
                            type: object
                        allocateLoadBalancerNodePorts: {"description":"allocateLoadBalancerNodePorts defines if NodePorts will be automatically allocated for services with type LoadBalancer.  Default is \"true\". It may be set to \"false\" if the cluster load-balancer does not rely on NodePorts.  If the caller requests specific NodePorts (by specifying a value), those requests will be respected, regardless of this field. This field may only be set for services with type LoadBalancer and will be cleared if the type is changed to any other type.","type":"boolean"}
                        externalIPs: {"description":"externalIPs is a list of IP addresses for which nodes in the cluster will also accept traffic for this service.  These IPs are not managed by Kubernetes.  The user is responsible for ensuring that traffic arrives at a node with this IP.  A common example is external load-balancers that are not part of the Kubernetes system.","items":{"type":"string"},"type":"array"}
                        externalTrafficPolicy: {"description":"externalTrafficPolicy describes how nodes distribute service traffic they receive on one of the Service's \"externally-facing\" addresses (NodePorts, ExternalIPs, and LoadBalancer IPs). If set to \"Local\", the proxy will configure the service in a way that assumes that external load balancers will take care of balancing the service traffic between nodes, and so each node will deliver traffic only to the node-local endpoints of the service, without masquerading the client source IP. (Traffic mistakenly sent to a node with no endpoints will be dropped.) The default value, \"Cluster\", uses the standard behavior of routing to all endpoints evenly (possibly modified by topology and other features). Note that traffic sent to an External IP or LoadBalancer IP from within the cluster will always get \"Cluster\" semantics, but clients sending to a NodePort from within the cluster may need to take traffic policy into account when picking a node.\n\n","type":"string"}
                        healthCheckNodePort: {"description":"healthCheckNodePort specifies the healthcheck nodePort for the service. This only applies when type is set to LoadBalancer and externalTrafficPolicy is set to Local. If a value is specified, is in-range, and is not in use, it will be used.  If not specified, a value will be automatically allocated.  External systems (e.g. load-balancers) can use this port to determine if a given node holds endpoints for this service or not.  If this field is specified when creating a Service which does not need it, creation will fail. This field will be wiped when updating a Service to no longer need it (e.g. changing type). This field cannot be updated once set.","format":"int32","type":"integer"}
                        internalTrafficPolicy: {"description":"InternalTrafficPolicy describes how nodes distribute service traffic they receive on the ClusterIP. If set to \"Local\", the proxy will assume that pods only want to talk to endpoints of the service on the same node as the pod, dropping the traffic if there are no local endpoints. The default value, \"Cluster\", uses the standard behavior of routing to all endpoints evenly (possibly modified by topology and other features).","type":"string"}
                        ipFamilies: {"description":"IPFamilies is a list of IP families (e.g. IPv4, IPv6) assigned to this service. This field is usually assigned automatically based on cluster configuration and the ipFamilyPolicy field. If this field is specified manually, the requested family is available in the cluster, and ipFamilyPolicy allows it, it will be used; otherwise creation of the service will fail. This field is conditionally mutable: it allows for adding or removing a secondary IP family, but it does not allow changing the primary IP family of the Service. Valid values are \"IPv4\" and \"IPv6\".  This field only applies to Services of types ClusterIP, NodePort, and LoadBalancer, and does apply to \"headless\" services. This field will be wiped when updating a Service to type ExternalName.\n\nThis field may hold a maximum of two entries (dual-stack families, in either order).  These families must correspond to the values of the clusterIPs field, if specified. Both clusterIPs and ipFamilies are governed by the ipFamilyPolicy field.","items":{"type":"string"},"type":"array","x-kubernetes-list-type":"atomic"}
                        ipFamilyPolicy: {"description":"IPFamilyPolicy represents the dual-stack-ness requested or required by this Service. If there is no value provided, then this field will be set to SingleStack. Services can be \"SingleStack\" (a single IP family), \"PreferDualStack\" (two IP families on dual-stack configured clusters or a single IP family on single-stack clusters), or \"RequireDualStack\" (two IP families on dual-stack configured clusters, otherwise fail). The ipFamilies and clusterIPs fields depend on the value of this field. This field will be wiped when updating a service to type ExternalName.","type":"string"}
                        loadBalancerClass: {"description":"loadBalancerClass is the class of the load balancer implementation this Service belongs to. If specified, the value of this field must be a label-style identifier, with an optional prefix, e.g. \"internal-vip\" or \"example.com/internal-vip\". Unprefixed names are reserved for end-users. This field can only be set when the Service type is 'LoadBalancer'. If not set, the default load balancer implementation is used, today this is typically done through the cloud provider integration, but should apply for any default implementation. If set, it is assumed that a load balancer implementation is watching for Services with a matching class. Any default load balancer implementation (e.g. cloud providers) should ignore Services that set this field. This field can only be set when creating or updating a Service to type 'LoadBalancer'. Once set, it can not be changed. This field will be wiped when a service is updated to a non 'LoadBalancer' type.","type":"string"}
                        loadBalancerIP: {"description":"Only applies to Service Type: LoadBalancer. This feature depends on whether the underlying cloud-provider supports specifying the loadBalancerIP when a load balancer is created. This field will be ignored if the cloud-provider does not support the feature. Deprecated: This field was under-specified and its meaning varies across implementations, and it cannot support dual-stack. As of Kubernetes v1.24, users are encouraged to use implementation-specific annotations when available. This field may be removed in a future API version.","type":"string"}
                        loadBalancerSourceRanges: {"description":"If specified and supported by the platform, this will restrict traffic through the cloud-provider load-balancer will be restricted to the specified client IPs. This field will be ignored if the cloud-provider does not support the feature.\" More info: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/","items":{"type":"string"},"type":"array"}
                        sessionAffinity: {"description":"Supports \"ClientIP\" and \"None\". Used to maintain session affinity. Enable client IP based session affinity. Must be ClientIP or None. Defaults to None. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies\n\n","type":"string"}
                        sessionAffinityConfig: {"description":"SessionAffinityConfig represents the configurations of session affinity.","properties":{"clientIP":{"description":"ClientIPConfig represents the configurations of Client IP based session affinity.","properties":{"timeoutSeconds":{"description":"timeoutSeconds specifies the seconds of ClientIP type session sticky time. The value must be >0 && <=86400(for 1 day) if ServiceAffinity == \"ClientIP\". Default value is 10800(for 3 hours).","format":"int32","type":"integer"}},"type":"object"}},"type":"object"}
                    replicas:
                      type: object
                      description: |
                        Configure the service to any replica with the name as the SGCluster plus the `-replicas` suffix.
                        
                        It provides a stable connection (regardless of replica node failures) to any read-only Postgres server of the cluster. Read-only servers are load-balanced via this service.

                        See also https://kubernetes.io/docs/concepts/services-networking/service/
                      properties: *service-properties
                pods:
                  type: object
                  description: Cluster pod's configuration.
                  properties:
                    persistentVolume:
                      type: object
                      description: Pod's persistent volume configuration.
                      properties:
                        size:
                          type: string
                          pattern: '^[0-9]+(\.[0-9]+)?(Mi|Gi|Ti)$'
                          description: |
                            Size of the PersistentVolume set for each instance of the cluster. This size is specified either in Mebibytes, Gibibytes or Tebibytes (multiples of 2^20, 2^30 or 2^40, respectively).
                        storageClass:
                          type: string
                          description: |
                            Name of an existing StorageClass in the Kubernetes cluster, used to create the PersistentVolumes for the instances of the cluster.
                      required: ["size"]
                    disableConnectionPooling:
                      type: boolean
                      description: If set to `true`, avoids creating a connection pooling (using [PgBouncer](https://www.pgbouncer.org/)) sidecar.
                    disableMetricsExporter:
                      type: boolean
                      description: If set to `true`, avoids creating the Prometheus exporter sidecar. Recommended when there's no intention to use Prometheus for monitoring.
                    disablePostgresUtil:
                      type: boolean
                      description: If set to `true`, avoids creating the `postgres-util` sidecar. This sidecar contains usual Postgres administration utilities *that are not present in the main (`patroni`) container*, like `psql`. Only disable if you know what you are doing.
                    resources:
                      type: object
                      description: Pod custom resources configuration.
                      properties:
                        enableClusterLimitsRequirements:
                          type: boolean
                          description: When enabled resource limits for containers other than the patroni container wil be set just like for patroni contianer as specified in the SGInstanceProfile.
                    scheduling:
                      type: object
                      description: Pod custom scheduling, affinity and topology spread constratins configuration.
                      properties:
                        nodeSelector: &node-selector
                          type: object
                          additionalProperties:
                            type: string
                          description: |
                            NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
                        tolerations: &tolerations
                          {"description":"If specified, the pod's tolerations.\n\nSee: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#toleration-v1-core\n","type":"array","items":{"description":"The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>\n\nSee: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#toleration-v1-core\n","properties":{"effect":{"description":"Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.\n\n","type":"string"},"key":{"description":"Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.","type":"string"},"operator":{"description":"Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.\n\n","type":"string"},"tolerationSeconds":{"description":"TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.","format":"int64","type":"integer"},"value":{"description":"Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.","type":"string"}},"type":"object"}}
                        nodeAffinity: &node-affinity
                          {"description":"Node affinity is a group of node affinity scheduling rules.\n\nSee: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#nodeaffinity-v1-core\n","properties":{"preferredDuringSchedulingIgnoredDuringExecution":{"description":"The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.","items":{"description":"An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).","properties":{"preference":{"description":"A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.","properties":{"matchExpressions":{"description":"A list of node selector requirements by node's labels.","items":{"description":"A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.","properties":{"key":{"description":"The label key that the selector applies to.","type":"string"},"operator":{"description":"Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.\n\n","type":"string"},"values":{"description":"An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchFields":{"description":"A list of node selector requirements by node's fields.","items":{"description":"A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.","properties":{"key":{"description":"The label key that the selector applies to.","type":"string"},"operator":{"description":"Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.\n\n","type":"string"},"values":{"description":"An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"}},"type":"object"},"weight":{"description":"Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.","format":"int32","type":"integer"}},"required":["weight","preference"],"type":"object"},"type":"array"},"requiredDuringSchedulingIgnoredDuringExecution":{"description":"A node selector represents the union of the results of one or more label queries over a set of nodes; that is, it represents the OR of the selectors represented by the node selector terms.","properties":{"nodeSelectorTerms":{"description":"Required. A list of node selector terms. The terms are ORed.","items":{"description":"A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.","properties":{"matchExpressions":{"description":"A list of node selector requirements by node's labels.","items":{"description":"A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.","properties":{"key":{"description":"The label key that the selector applies to.","type":"string"},"operator":{"description":"Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.\n\n","type":"string"},"values":{"description":"An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchFields":{"description":"A list of node selector requirements by node's fields.","items":{"description":"A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.","properties":{"key":{"description":"The label key that the selector applies to.","type":"string"},"operator":{"description":"Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.\n\n","type":"string"},"values":{"description":"An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"}},"type":"object"},"type":"array"}},"required":["nodeSelectorTerms"],"type":"object"}},"type":"object"}
                        priorityClassName: &priority-class-name
                          type: string
                          description: |
                            Priority indicates the importance of a Pod relative to other Pods. If a Pod cannot be scheduled, the scheduler tries to preempt (evict) lower priority Pods to make scheduling of the pending Pod possible.
                        podAffinity: &pod-affinity
                          {"description":"Pod affinity is a group of inter pod affinity scheduling rules.\n\nSee: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#podaffinity-v1-core\n","properties":{"preferredDuringSchedulingIgnoredDuringExecution":{"description":"The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.","items":{"description":"The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)","properties":{"podAffinityTerm":{"description":"Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running","properties":{"labelSelector":{"description":"A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object"},"namespaceSelector":{"description":"A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object"},"namespaces":{"description":"namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \"this pod's namespace\".","items":{"type":"string"},"type":"array"},"topologyKey":{"description":"This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.","type":"string"}},"required":["topologyKey"],"type":"object"},"weight":{"description":"weight associated with matching the corresponding podAffinityTerm, in the range 1-100.","format":"int32","type":"integer"}},"required":["weight","podAffinityTerm"],"type":"object"},"type":"array"},"requiredDuringSchedulingIgnoredDuringExecution":{"description":"If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.","items":{"description":"Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running","properties":{"labelSelector":{"description":"A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object"},"namespaceSelector":{"description":"A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object"},"namespaces":{"description":"namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \"this pod's namespace\".","items":{"type":"string"},"type":"array"},"topologyKey":{"description":"This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.","type":"string"}},"required":["topologyKey"],"type":"object"},"type":"array"}},"type":"object"}
                        podAntiAffinity: &pod-anti-affinity
                          {"description":"Pod anti affinity is a group of inter pod anti affinity scheduling rules.\n\nSee: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#podantiaffinity-v1-core\n","properties":{"preferredDuringSchedulingIgnoredDuringExecution":{"description":"The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.","items":{"description":"The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)","properties":{"podAffinityTerm":{"description":"Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running","properties":{"labelSelector":{"description":"A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object"},"namespaceSelector":{"description":"A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object"},"namespaces":{"description":"namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \"this pod's namespace\".","items":{"type":"string"},"type":"array"},"topologyKey":{"description":"This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.","type":"string"}},"required":["topologyKey"],"type":"object"},"weight":{"description":"weight associated with matching the corresponding podAffinityTerm, in the range 1-100.","format":"int32","type":"integer"}},"required":["weight","podAffinityTerm"],"type":"object"},"type":"array"},"requiredDuringSchedulingIgnoredDuringExecution":{"description":"If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.","items":{"description":"Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running","properties":{"labelSelector":{"description":"A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object"},"namespaceSelector":{"description":"A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object"},"namespaces":{"description":"namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \"this pod's namespace\".","items":{"type":"string"},"type":"array"},"topologyKey":{"description":"This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.","type":"string"}},"required":["topologyKey"],"type":"object"},"type":"array"}},"type":"object"}
                        topologySpreadConstraints:
                          {"type":"array","description":"TopologySpreadConstraints describes how a group of pods ought to spread across topology domains. Scheduler will schedule pods in a way which abides by the constraints. All topologySpreadConstraints are ANDed.\n","items":{"description":"TopologySpreadConstraint specifies how to spread matching pods among the given topology.\n\nSee: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#topologyspreadconstraint-v1-core\n","properties":{"labelSelector":{"description":"A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object"},"matchLabelKeys":{"description":"MatchLabelKeys is a set of pod label keys to select the pods over which spreading will be calculated. The keys are used to lookup values from the incoming pod labels, those key-value labels are ANDed with labelSelector to select the group of existing pods over which spreading will be calculated for the incoming pod. Keys that don't exist in the incoming pod labels will be ignored. A null or empty list means only match against labelSelector.","items":{"type":"string"},"type":"array"},"maxSkew":{"description":"MaxSkew describes the degree to which pods may be unevenly distributed. When `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference between the number of matching pods in the target topology and the global minimum. The global minimum is the minimum number of matching pods in an eligible domain or zero if the number of eligible domains is less than MinDomains. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 2/2/1: In this case, the global minimum is 1. | zone1 | zone2 | zone3 | |  P P  |  P P  |   P   | - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2; scheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2) violate MaxSkew(1). - if MaxSkew is 2, incoming pod can be scheduled onto any zone. When `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence to topologies that satisfy it. It's a required field. Default value is 1 and 0 is not allowed.","format":"int32","type":"integer"},"minDomains":{"description":"MinDomains indicates a minimum number of eligible domains. When the number of eligible domains with matching topology keys is less than minDomains, Pod Topology Spread treats \"global minimum\" as 0, and then the calculation of Skew is performed. And when the number of eligible domains with matching topology keys equals or greater than minDomains, this value has no effect on scheduling. As a result, when the number of eligible domains is less than minDomains, scheduler won't schedule more than maxSkew Pods to those domains. If value is nil, the constraint behaves as if MinDomains is equal to 1. Valid values are integers greater than 0. When value is not nil, WhenUnsatisfiable must be DoNotSchedule.\n\nFor example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same labelSelector spread as 2/2/2: | zone1 | zone2 | zone3 | |  P P  |  P P  |  P P  | The number of domains is less than 5(MinDomains), so \"global minimum\" is treated as 0. In this situation, new pod with the same labelSelector cannot be scheduled, because computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones, it will violate MaxSkew.\n\nThis is a beta field and requires the MinDomainsInPodTopologySpread feature gate to be enabled (enabled by default).","format":"int32","type":"integer"},"nodeAffinityPolicy":{"description":"NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector when calculating pod topology spread skew. Options are: - Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations. - Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.\n\nIf this value is nil, the behavior is equivalent to the Honor policy. This is a alpha-level feature enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.","type":"string"},"nodeTaintsPolicy":{"description":"NodeTaintsPolicy indicates how we will treat node taints when calculating pod topology spread skew. Options are: - Honor: nodes without taints, along with tainted nodes for which the incoming pod has a toleration, are included. - Ignore: node taints are ignored. All nodes are included.\n\nIf this value is nil, the behavior is equivalent to the Ignore policy. This is a alpha-level feature enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.","type":"string"},"topologyKey":{"description":"TopologyKey is the key of node labels. Nodes that have a label with this key and identical values are considered to be in the same topology. We consider each <key, value> as a \"bucket\", and try to put balanced number of pods into each bucket. We define a domain as a particular instance of a topology. Also, we define an eligible domain as a domain whose nodes meet the requirements of nodeAffinityPolicy and nodeTaintsPolicy. e.g. If TopologyKey is \"kubernetes.io/hostname\", each Node is a domain of that topology. And, if TopologyKey is \"topology.kubernetes.io/zone\", each zone is a domain of that topology. It's a required field.","type":"string"},"whenUnsatisfiable":{"description":"WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy the spread constraint. - DoNotSchedule (default) tells the scheduler not to schedule it. - ScheduleAnyway tells the scheduler to schedule the pod in any location,\n  but giving higher precedence to topologies that would help reduce the\n  skew.\nA constraint is considered \"Unsatisfiable\" for an incoming pod if and only if every possible node assignment for that pod would violate \"MaxSkew\" on some topology. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 3/1/1: | zone1 | zone2 | zone3 | | P P P |   P   |   P   | If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler won't make it *more* imbalanced. It's a required field.\n\n","type":"string"}},"required":["maxSkew","topologyKey","whenUnsatisfiable"],"type":"object"}}
                        backup:
                          type: object
                          description: Backup Pod custom scheduling and affinity configuration.
                          properties:
                            nodeSelector: *node-selector
                            tolerations: *tolerations
                            nodeAffinity: *node-affinity
                            priorityClassName: *priority-class-name
                            podAffinity: *pod-affinity
                            podAntiAffinity: *pod-anti-affinity
                    managementPolicy:
                      type: string
                      description: |
                        managementPolicy controls how pods are created during initial scale up, when replacing pods
                         on nodes, or when scaling down. The default policy is `OrderedReady`, where pods are created
                         in increasing order (pod-0, then pod-1, etc) and the controller will wait until each pod is
                         ready before continuing. When scaling down, the pods are removed in the opposite order.
                         The alternative policy is `Parallel` which will create pods in parallel to match the desired
                         scale without waiting, and on scale down will delete all pods at once.
                    customVolumes:
                      type: array
                      description: |
                        A list of custom volumes that may be used along with any container defined in
                         customInitContainers or customContainers sections.
                        
                        The name used in this section will be prefixed with the string `custom-` so that when
                         referencing them in the customInitContainers or customContainers sections the name used
                         have to be prepended with the same prefix.
                        
                        Only the following volume types are allowed: configMap, downwardAPI, emptyDir,
                         gitRepo, glusterfs, hostPath, nfs, projected and secret
                         
                        See: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#volume-v1-core
                      items:
                        {"type":"object","description":"A custom volume that may be used along with any container defined in\n customInitContainers or customContainers sections.\n\nThe name used in this section will be prefixed with the string `custom-` so that when\n referencing them in the customInitContainers or customContainers sections the name used\n have to be prepended with the same prefix.\n\nOnly the following volume types are allowed: configMap, downwardAPI, emptyDir,\n gitRepo, glusterfs, hostPath, nfs, projected and secret\n \nSee: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#volume-v1-core\n","properties":{"name":{"description":"Volumes name. Must be a DNS_LABEL and unique within the pod.\n More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\n\nThe name will be prefixed with the string `custom-` so that when referencing them in the\n customInitContainers or customContainers sections the name used have to be prepended with\n the same prefix.\n","type":"string"},"configMap":{"description":"Adapts a ConfigMap into a volume.\n\nThe contents of the target ConfigMap's Data field will be presented in a volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. ConfigMap volumes support ownership management and SELinux relabeling.","properties":{"defaultMode":{"description":"Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.","format":"int32","type":"integer"},"items":{"description":"If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.","items":{"description":"Maps a string key to a path within a volume.","properties":{"key":{"description":"The key to project.","type":"string"},"mode":{"description":"Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.","format":"int32","type":"integer"},"path":{"description":"The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.","type":"string"}},"required":["key","path"],"type":"object"},"type":"array"},"name":{"description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names","type":"string"},"optional":{"description":"Specify whether the ConfigMap or its keys must be defined","type":"boolean"}},"type":"object"},"downwardAPI":{"description":"DownwardAPIVolumeSource represents a volume containing downward API info. Downward API volumes support ownership management and SELinux relabeling.","properties":{"defaultMode":{"description":"Optional: mode bits to use on created files by default. Must be a Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.","format":"int32","type":"integer"},"items":{"description":"Items is a list of downward API volume file","items":{"description":"DownwardAPIVolumeFile represents information to create the file containing the pod field","properties":{"fieldRef":{"description":"ObjectFieldSelector selects an APIVersioned field of an object.","properties":{"apiVersion":{"description":"Version of the schema the FieldPath is written in terms of, defaults to \"v1\".","type":"string"},"fieldPath":{"description":"Path of the field to select in the specified API version.","type":"string"}},"required":["fieldPath"],"type":"object"},"mode":{"description":"Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.","format":"int32","type":"integer"},"path":{"description":"Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'","type":"string"},"resourceFieldRef":{"description":"ResourceFieldSelector represents container resources (cpu, memory) and their output format","properties":{"containerName":{"description":"Container name: required for volumes, optional for env vars","type":"string"},"divisor":{"description":"Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.\n\nThe serialization format is:\n\n<quantity>        ::= <signedNumber><suffix>\n  (Note that <suffix> may be empty, from the \"\" case in <decimalSI>.)\n<digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= \"+\" | \"-\" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei\n  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)\n<decimalSI>       ::= m | \"\" | k | M | G | T | P | E\n  (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)\n<decimalExponent> ::= \"e\" <signedNumber> | \"E\" <signedNumber>\n\nNo matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.\n\nWhen a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.\n\nBefore serializing, Quantity will be put in \"canonical form\". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:\n  a. No precision is lost\n  b. No fractional digits will be emitted\n  c. The exponent (or suffix) is as large as possible.\nThe sign will be omitted unless the number is negative.\n\nExamples:\n  1.5 will be serialized as \"1500m\"\n  1.5Gi will be serialized as \"1536Mi\"\n\nNote that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.\n\nNon-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)\n\nThis format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.","type":"string"},"resource":{"description":"Required: resource to select","type":"string"}},"required":["resource"],"type":"object"}},"required":["path"],"type":"object"},"type":"array"}},"type":"object"},"emptyDir":{"description":"Represents an empty directory for a pod. Empty directory volumes support ownership management and SELinux relabeling.","properties":{"medium":{"description":"What type of storage medium should back this directory. The default is \"\" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir","type":"string"},"sizeLimit":{"description":"Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.\n\nThe serialization format is:\n\n<quantity>        ::= <signedNumber><suffix>\n  (Note that <suffix> may be empty, from the \"\" case in <decimalSI>.)\n<digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= \"+\" | \"-\" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei\n  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)\n<decimalSI>       ::= m | \"\" | k | M | G | T | P | E\n  (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)\n<decimalExponent> ::= \"e\" <signedNumber> | \"E\" <signedNumber>\n\nNo matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.\n\nWhen a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.\n\nBefore serializing, Quantity will be put in \"canonical form\". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:\n  a. No precision is lost\n  b. No fractional digits will be emitted\n  c. The exponent (or suffix) is as large as possible.\nThe sign will be omitted unless the number is negative.\n\nExamples:\n  1.5 will be serialized as \"1500m\"\n  1.5Gi will be serialized as \"1536Mi\"\n\nNote that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.\n\nNon-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)\n\nThis format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.","type":"string"}},"type":"object"},"gitRepo":{"description":"Represents a volume that is populated with the contents of a git repository. Git repo volumes do not support ownership management. Git repo volumes support SELinux relabeling.\n\nDEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.","properties":{"directory":{"description":"Target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.","type":"string"},"repository":{"description":"Repository URL","type":"string"},"revision":{"description":"Commit hash for the specified revision.","type":"string"}},"required":["repository"],"type":"object"},"glusterfs":{"description":"Represents a Glusterfs mount that lasts the lifetime of a pod. Glusterfs volumes do not support ownership management or SELinux relabeling.","properties":{"endpoints":{"description":"EndpointsName is the endpoint name that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod","type":"string"},"path":{"description":"Path is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod","type":"string"},"readOnly":{"description":"ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod","type":"boolean"}},"required":["endpoints","path"],"type":"object"},"hostPath":{"description":"Represents a host path mapped into a pod. Host path volumes do not support ownership management or SELinux relabeling.","properties":{"path":{"description":"Path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath","type":"string"},"type":{"description":"Type for HostPath Volume Defaults to \"\" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath","type":"string"}},"required":["path"],"type":"object"},"nfs":{"description":"Represents an NFS mount that lasts the lifetime of a pod. NFS volumes do not support ownership management or SELinux relabeling.","properties":{"path":{"description":"Path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs","type":"string"},"readOnly":{"description":"ReadOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs","type":"boolean"},"server":{"description":"Server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs","type":"string"}},"required":["server","path"],"type":"object"},"projected":{"description":"Represents a projected volume source","properties":{"defaultMode":{"description":"Mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.","format":"int32","type":"integer"},"sources":{"description":"list of volume projections","items":{"description":"Projection that may be projected along with other supported volume types","properties":{"configMap":{"description":"Adapts a ConfigMap into a projected volume.\n\nThe contents of the target ConfigMap's Data field will be presented in a projected volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. Note that this is identical to a configmap volume source without the default mode.","properties":{"items":{"description":"If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.","items":{"description":"Maps a string key to a path within a volume.","properties":{"key":{"description":"The key to project.","type":"string"},"mode":{"description":"Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.","format":"int32","type":"integer"},"path":{"description":"The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.","type":"string"}},"required":["key","path"],"type":"object"},"type":"array"},"name":{"description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names","type":"string"},"optional":{"description":"Specify whether the ConfigMap or its keys must be defined","type":"boolean"}},"type":"object"},"downwardAPI":{"description":"Represents downward API info for projecting into a projected volume. Note that this is identical to a downwardAPI volume source without the default mode.","properties":{"items":{"description":"Items is a list of DownwardAPIVolume file","items":{"description":"DownwardAPIVolumeFile represents information to create the file containing the pod field","properties":{"fieldRef":{"description":"ObjectFieldSelector selects an APIVersioned field of an object.","properties":{"apiVersion":{"description":"Version of the schema the FieldPath is written in terms of, defaults to \"v1\".","type":"string"},"fieldPath":{"description":"Path of the field to select in the specified API version.","type":"string"}},"required":["fieldPath"],"type":"object"},"mode":{"description":"Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.","format":"int32","type":"integer"},"path":{"description":"Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'","type":"string"},"resourceFieldRef":{"description":"ResourceFieldSelector represents container resources (cpu, memory) and their output format","properties":{"containerName":{"description":"Container name: required for volumes, optional for env vars","type":"string"},"divisor":{"description":"Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.\n\nThe serialization format is:\n\n<quantity>        ::= <signedNumber><suffix>\n  (Note that <suffix> may be empty, from the \"\" case in <decimalSI>.)\n<digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= \"+\" | \"-\" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei\n  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)\n<decimalSI>       ::= m | \"\" | k | M | G | T | P | E\n  (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)\n<decimalExponent> ::= \"e\" <signedNumber> | \"E\" <signedNumber>\n\nNo matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.\n\nWhen a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.\n\nBefore serializing, Quantity will be put in \"canonical form\". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:\n  a. No precision is lost\n  b. No fractional digits will be emitted\n  c. The exponent (or suffix) is as large as possible.\nThe sign will be omitted unless the number is negative.\n\nExamples:\n  1.5 will be serialized as \"1500m\"\n  1.5Gi will be serialized as \"1536Mi\"\n\nNote that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.\n\nNon-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)\n\nThis format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.","type":"string"},"resource":{"description":"Required: resource to select","type":"string"}},"required":["resource"],"type":"object"}},"required":["path"],"type":"object"},"type":"array"}},"type":"object"},"secret":{"description":"Adapts a secret into a projected volume.\n\nThe contents of the target Secret's Data field will be presented in a projected volume as files using the keys in the Data field as the file names. Note that this is identical to a secret volume source without the default mode.","properties":{"items":{"description":"If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.","items":{"description":"Maps a string key to a path within a volume.","properties":{"key":{"description":"The key to project.","type":"string"},"mode":{"description":"Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.","format":"int32","type":"integer"},"path":{"description":"The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.","type":"string"}},"required":["key","path"],"type":"object"},"type":"array"},"name":{"description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names","type":"string"},"optional":{"description":"Specify whether the Secret or its key must be defined","type":"boolean"}},"type":"object"},"serviceAccountToken":{"description":"ServiceAccountTokenProjection represents a projected service account token volume. This projection can be used to insert a service account token into the pods runtime filesystem for use against APIs (Kubernetes API Server or otherwise).","properties":{"audience":{"description":"Audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.","type":"string"},"expirationSeconds":{"description":"ExpirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.","format":"int64","type":"integer"},"path":{"description":"Path is the path relative to the mount point of the file to project the token into.","type":"string"}},"required":["path"],"type":"object"}},"type":"object"},"type":"array"}},"type":"object"},"secret":{"description":"Adapts a Secret into a volume.\n\nThe contents of the target Secret's Data field will be presented in a volume as files using the keys in the Data field as the file names. Secret volumes support ownership management and SELinux relabeling.","properties":{"defaultMode":{"description":"Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.","format":"int32","type":"integer"},"items":{"description":"If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.","items":{"description":"Maps a string key to a path within a volume.","properties":{"key":{"description":"The key to project.","type":"string"},"mode":{"description":"Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.","format":"int32","type":"integer"},"path":{"description":"The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.","type":"string"}},"required":["key","path"],"type":"object"},"type":"array"},"optional":{"description":"Specify whether the Secret or its keys must be defined","type":"boolean"},"secretName":{"description":"Name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret","type":"string"}},"type":"object"}}}
                    customInitContainers:
                      type: array
                      description: |
                        A list of custom application init containers that run within the cluster's Pods. The
                         custom init containers will run following the defined sequence as the end of
                         cluster's Pods init containers.
                        
                        The name used in this section will be prefixed with the string `custom-` so that when
                         referencing them in the .spec.containers section of SGInstanceProfile the name used
                         have to be prepended with the same prefix.
                         
                        See: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#container-v1-core
                      items: &containers-items
                        {"description":"A custom application init container that run within the cluster's Pods. The custom init\n containers will run following the defined sequence as the end of cluster's Pods init\n containers.\n\nThe name used in this section will be prefixed with the string `custom-` so that when\n referencing them in the .spec.containers section of SGInstanceProfile the name used\n have to be prepended with the same prefix.\n \nSee: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#container-v1-core\n","properties":{"args":{"description":"Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell","items":{"type":"string"},"type":"array"},"command":{"description":"Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell","items":{"type":"string"},"type":"array"},"env":{"description":"List of environment variables to set in the container. Cannot be updated.","items":{"description":"EnvVar represents an environment variable present in a Container.","properties":{"name":{"description":"Name of the environment variable. Must be a C_IDENTIFIER.","type":"string"},"value":{"description":"Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\".","type":"string"},"valueFrom":{"description":"EnvVarSource represents a source for the value of an EnvVar.","properties":{"configMapKeyRef":{"description":"Selects a key from a ConfigMap.","properties":{"key":{"description":"The key to select.","type":"string"},"name":{"description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names","type":"string"},"optional":{"description":"Specify whether the ConfigMap or its key must be defined","type":"boolean"}},"required":["key"],"type":"object"},"fieldRef":{"description":"ObjectFieldSelector selects an APIVersioned field of an object.","properties":{"apiVersion":{"description":"Version of the schema the FieldPath is written in terms of, defaults to \"v1\".","type":"string"},"fieldPath":{"description":"Path of the field to select in the specified API version.","type":"string"}},"required":["fieldPath"],"type":"object"},"resourceFieldRef":{"description":"ResourceFieldSelector represents container resources (cpu, memory) and their output format","properties":{"containerName":{"description":"Container name: required for volumes, optional for env vars","type":"string"},"divisor":{"description":"Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.\n\nThe serialization format is:\n\n<quantity>        ::= <signedNumber><suffix>\n  (Note that <suffix> may be empty, from the \"\" case in <decimalSI>.)\n<digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= \"+\" | \"-\" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei\n  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)\n<decimalSI>       ::= m | \"\" | k | M | G | T | P | E\n  (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)\n<decimalExponent> ::= \"e\" <signedNumber> | \"E\" <signedNumber>\n\nNo matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.\n\nWhen a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.\n\nBefore serializing, Quantity will be put in \"canonical form\". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:\n  a. No precision is lost\n  b. No fractional digits will be emitted\n  c. The exponent (or suffix) is as large as possible.\nThe sign will be omitted unless the number is negative.\n\nExamples:\n  1.5 will be serialized as \"1500m\"\n  1.5Gi will be serialized as \"1536Mi\"\n\nNote that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.\n\nNon-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)\n\nThis format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.","type":"string"},"resource":{"description":"Required: resource to select","type":"string"}},"required":["resource"],"type":"object"},"secretKeyRef":{"description":"SecretKeySelector selects a key of a Secret.","properties":{"key":{"description":"The key of the secret to select from.  Must be a valid secret key.","type":"string"},"name":{"description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names","type":"string"},"optional":{"description":"Specify whether the Secret or its key must be defined","type":"boolean"}},"required":["key"],"type":"object"}},"type":"object"}},"required":["name"],"type":"object"},"type":"array"},"envFrom":{"description":"List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.","items":{"description":"EnvFromSource represents the source of a set of ConfigMaps","properties":{"configMapRef":{"description":"ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.\n\nThe contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.","properties":{"name":{"description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names","type":"string"},"optional":{"description":"Specify whether the ConfigMap must be defined","type":"boolean"}},"type":"object"},"prefix":{"description":"An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.","type":"string"},"secretRef":{"description":"SecretEnvSource selects a Secret to populate the environment variables with.\n\nThe contents of the target Secret's Data field will represent the key-value pairs as environment variables.","properties":{"name":{"description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names","type":"string"},"optional":{"description":"Specify whether the Secret must be defined","type":"boolean"}},"type":"object"}},"type":"object"},"type":"array"},"image":{"description":"Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.","type":"string"},"imagePullPolicy":{"description":"Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images","type":"string"},"lifecycle":{"description":"Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.","properties":{"postStart":{"description":"Handler defines a specific action that should be taken","properties":{"exec":{"description":"ExecAction describes a \"run in container\" action.","properties":{"command":{"description":"Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.","items":{"type":"string"},"type":"array"}},"type":"object"},"httpGet":{"description":"HTTPGetAction describes an action based on HTTP Get requests.","properties":{"host":{"description":"Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.","type":"string"},"httpHeaders":{"description":"Custom headers to set in the request. HTTP allows repeated headers.","items":{"description":"HTTPHeader describes a custom header to be used in HTTP probes","properties":{"name":{"description":"The header field name","type":"string"},"value":{"description":"The header field value","type":"string"}},"required":["name","value"],"type":"object"},"type":"array"},"path":{"description":"Path to access on the HTTP server.","type":"string"},"port":{"description":"IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.","format":"int-or-string","type":"string"},"scheme":{"description":"Scheme to use for connecting to the host. Defaults to HTTP.","type":"string"}},"required":["port"],"type":"object"},"tcpSocket":{"description":"TCPSocketAction describes an action based on opening a socket","properties":{"host":{"description":"Optional: Host name to connect to, defaults to the pod IP.","type":"string"},"port":{"description":"IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.","format":"int-or-string","type":"string"}},"required":["port"],"type":"object"}},"type":"object"},"preStop":{"description":"Handler defines a specific action that should be taken","properties":{"exec":{"description":"ExecAction describes a \"run in container\" action.","properties":{"command":{"description":"Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.","items":{"type":"string"},"type":"array"}},"type":"object"},"httpGet":{"description":"HTTPGetAction describes an action based on HTTP Get requests.","properties":{"host":{"description":"Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.","type":"string"},"httpHeaders":{"description":"Custom headers to set in the request. HTTP allows repeated headers.","items":{"description":"HTTPHeader describes a custom header to be used in HTTP probes","properties":{"name":{"description":"The header field name","type":"string"},"value":{"description":"The header field value","type":"string"}},"required":["name","value"],"type":"object"},"type":"array"},"path":{"description":"Path to access on the HTTP server.","type":"string"},"port":{"description":"IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.","format":"int-or-string","type":"string"},"scheme":{"description":"Scheme to use for connecting to the host. Defaults to HTTP.","type":"string"}},"required":["port"],"type":"object"},"tcpSocket":{"description":"TCPSocketAction describes an action based on opening a socket","properties":{"host":{"description":"Optional: Host name to connect to, defaults to the pod IP.","type":"string"},"port":{"description":"IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.","format":"int-or-string","type":"string"}},"required":["port"],"type":"object"}},"type":"object"}},"type":"object"},"livenessProbe":{"description":"Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.","properties":{"exec":{"description":"ExecAction describes a \"run in container\" action.","properties":{"command":{"description":"Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.","items":{"type":"string"},"type":"array"}},"type":"object"},"failureThreshold":{"description":"Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.","format":"int32","type":"integer"},"httpGet":{"description":"HTTPGetAction describes an action based on HTTP Get requests.","properties":{"host":{"description":"Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.","type":"string"},"httpHeaders":{"description":"Custom headers to set in the request. HTTP allows repeated headers.","items":{"description":"HTTPHeader describes a custom header to be used in HTTP probes","properties":{"name":{"description":"The header field name","type":"string"},"value":{"description":"The header field value","type":"string"}},"required":["name","value"],"type":"object"},"type":"array"},"path":{"description":"Path to access on the HTTP server.","type":"string"},"port":{"description":"IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.","format":"int-or-string","type":"string"},"scheme":{"description":"Scheme to use for connecting to the host. Defaults to HTTP.","type":"string"}},"required":["port"],"type":"object"},"initialDelaySeconds":{"description":"Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes","format":"int32","type":"integer"},"periodSeconds":{"description":"How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.","format":"int32","type":"integer"},"successThreshold":{"description":"Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.","format":"int32","type":"integer"},"tcpSocket":{"description":"TCPSocketAction describes an action based on opening a socket","properties":{"host":{"description":"Optional: Host name to connect to, defaults to the pod IP.","type":"string"},"port":{"description":"IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.","format":"int-or-string","type":"string"}},"required":["port"],"type":"object"},"terminationGracePeriodSeconds":{"description":"Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.","format":"int64","type":"integer"},"timeoutSeconds":{"description":"Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes","format":"int32","type":"integer"}},"type":"object"},"name":{"description":"Name of the container specified as a DNS_LABEL. Each\n container in a pod must have a unique name (DNS_LABEL). Cannot\n be updated.\n\nThe name will be prefixed with the string `custom-` so that when referencing it\n in the .spec.containers section of SGInstanceProfile the name used have to be\n prepended with the same prefix.\n","type":"string"},"ports":{"description":"List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \"0.0.0.0\" address inside a container will be accessible from the network. Cannot be updated.","items":{"description":"ContainerPort represents a network port in a single container.","properties":{"containerPort":{"description":"Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.","format":"int32","type":"integer"},"hostIP":{"description":"What host IP to bind the external port to.","type":"string"},"hostPort":{"description":"Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.","format":"int32","type":"integer"},"name":{"description":"If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.","type":"string"},"protocol":{"description":"Protocol for port. Must be UDP, TCP, or SCTP. Defaults to \"TCP\".","type":"string"}},"required":["containerPort"],"type":"object"},"type":"array"},"readinessProbe":{"description":"Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.","properties":{"exec":{"description":"ExecAction describes a \"run in container\" action.","properties":{"command":{"description":"Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.","items":{"type":"string"},"type":"array"}},"type":"object"},"failureThreshold":{"description":"Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.","format":"int32","type":"integer"},"httpGet":{"description":"HTTPGetAction describes an action based on HTTP Get requests.","properties":{"host":{"description":"Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.","type":"string"},"httpHeaders":{"description":"Custom headers to set in the request. HTTP allows repeated headers.","items":{"description":"HTTPHeader describes a custom header to be used in HTTP probes","properties":{"name":{"description":"The header field name","type":"string"},"value":{"description":"The header field value","type":"string"}},"required":["name","value"],"type":"object"},"type":"array"},"path":{"description":"Path to access on the HTTP server.","type":"string"},"port":{"description":"IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.","format":"int-or-string","type":"string"},"scheme":{"description":"Scheme to use for connecting to the host. Defaults to HTTP.","type":"string"}},"required":["port"],"type":"object"},"initialDelaySeconds":{"description":"Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes","format":"int32","type":"integer"},"periodSeconds":{"description":"How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.","format":"int32","type":"integer"},"successThreshold":{"description":"Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.","format":"int32","type":"integer"},"tcpSocket":{"description":"TCPSocketAction describes an action based on opening a socket","properties":{"host":{"description":"Optional: Host name to connect to, defaults to the pod IP.","type":"string"},"port":{"description":"IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.","format":"int-or-string","type":"string"}},"required":["port"],"type":"object"},"terminationGracePeriodSeconds":{"description":"Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.","format":"int64","type":"integer"},"timeoutSeconds":{"description":"Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes","format":"int32","type":"integer"}},"type":"object"},"resources":{"description":"ResourceRequirements describes the compute resource requirements.","properties":{"limits":{"additionalProperties":{"description":"Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.\n\nThe serialization format is:\n\n<quantity>        ::= <signedNumber><suffix>\n  (Note that <suffix> may be empty, from the \"\" case in <decimalSI>.)\n<digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= \"+\" | \"-\" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei\n  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)\n<decimalSI>       ::= m | \"\" | k | M | G | T | P | E\n  (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)\n<decimalExponent> ::= \"e\" <signedNumber> | \"E\" <signedNumber>\n\nNo matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.\n\nWhen a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.\n\nBefore serializing, Quantity will be put in \"canonical form\". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:\n  a. No precision is lost\n  b. No fractional digits will be emitted\n  c. The exponent (or suffix) is as large as possible.\nThe sign will be omitted unless the number is negative.\n\nExamples:\n  1.5 will be serialized as \"1500m\"\n  1.5Gi will be serialized as \"1536Mi\"\n\nNote that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.\n\nNon-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)\n\nThis format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.","type":"string"},"description":"Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/","type":"object"},"requests":{"additionalProperties":{"description":"Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.\n\nThe serialization format is:\n\n<quantity>        ::= <signedNumber><suffix>\n  (Note that <suffix> may be empty, from the \"\" case in <decimalSI>.)\n<digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= \"+\" | \"-\" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei\n  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)\n<decimalSI>       ::= m | \"\" | k | M | G | T | P | E\n  (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)\n<decimalExponent> ::= \"e\" <signedNumber> | \"E\" <signedNumber>\n\nNo matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.\n\nWhen a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.\n\nBefore serializing, Quantity will be put in \"canonical form\". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:\n  a. No precision is lost\n  b. No fractional digits will be emitted\n  c. The exponent (or suffix) is as large as possible.\nThe sign will be omitted unless the number is negative.\n\nExamples:\n  1.5 will be serialized as \"1500m\"\n  1.5Gi will be serialized as \"1536Mi\"\n\nNote that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.\n\nNon-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)\n\nThis format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.","type":"string"},"description":"Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/","type":"object"}},"type":"object"},"securityContext":{"description":"SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.","properties":{"allowPrivilegeEscalation":{"description":"AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN","type":"boolean"},"capabilities":{"description":"Adds and removes POSIX capabilities from running containers.","properties":{"add":{"description":"Added capabilities","items":{"type":"string"},"type":"array"},"drop":{"description":"Removed capabilities","items":{"type":"string"},"type":"array"}},"type":"object"},"privileged":{"description":"Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.","type":"boolean"},"procMount":{"description":"procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.","type":"string"},"readOnlyRootFilesystem":{"description":"Whether this container has a read-only root filesystem. Default is false.","type":"boolean"},"runAsGroup":{"description":"The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.","format":"int64","type":"integer"},"runAsNonRoot":{"description":"Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.","type":"boolean"},"runAsUser":{"description":"The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.","format":"int64","type":"integer"},"seLinuxOptions":{"description":"SELinuxOptions are the labels to be applied to the container","properties":{"level":{"description":"Level is SELinux level label that applies to the container.","type":"string"},"role":{"description":"Role is a SELinux role label that applies to the container.","type":"string"},"type":{"description":"Type is a SELinux type label that applies to the container.","type":"string"},"user":{"description":"User is a SELinux user label that applies to the container.","type":"string"}},"type":"object"},"seccompProfile":{"description":"SeccompProfile defines a pod/container's seccomp profile settings. Only one profile source may be set.","properties":{"localhostProfile":{"description":"localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must only be set if type is \"Localhost\".","type":"string"},"type":{"description":"type indicates which kind of seccomp profile will be applied. Valid options are:\n\nLocalhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.","type":"string"}},"required":["type"],"type":"object"},"windowsOptions":{"description":"WindowsSecurityContextOptions contain Windows-specific options and credentials.","properties":{"gmsaCredentialSpec":{"description":"GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.","type":"string"},"gmsaCredentialSpecName":{"description":"GMSACredentialSpecName is the name of the GMSA credential spec to use.","type":"string"},"hostProcess":{"description":"HostProcess determines if a container should be run as a 'Host Process' container. This field is alpha-level and will only be honored by components that enable the WindowsHostProcessContainers feature flag. Setting this field without the feature flag will result in errors when validating the Pod. All of a Pod's containers must have the same effective HostProcess value (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).  In addition, if HostProcess is true then HostNetwork must also be set to true.","type":"boolean"},"runAsUserName":{"description":"The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.","type":"string"}},"type":"object"}},"type":"object"},"startupProbe":{"description":"Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.","properties":{"exec":{"description":"ExecAction describes a \"run in container\" action.","properties":{"command":{"description":"Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.","items":{"type":"string"},"type":"array"}},"type":"object"},"failureThreshold":{"description":"Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.","format":"int32","type":"integer"},"httpGet":{"description":"HTTPGetAction describes an action based on HTTP Get requests.","properties":{"host":{"description":"Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.","type":"string"},"httpHeaders":{"description":"Custom headers to set in the request. HTTP allows repeated headers.","items":{"description":"HTTPHeader describes a custom header to be used in HTTP probes","properties":{"name":{"description":"The header field name","type":"string"},"value":{"description":"The header field value","type":"string"}},"required":["name","value"],"type":"object"},"type":"array"},"path":{"description":"Path to access on the HTTP server.","type":"string"},"port":{"description":"IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.","format":"int-or-string","type":"string"},"scheme":{"description":"Scheme to use for connecting to the host. Defaults to HTTP.","type":"string"}},"required":["port"],"type":"object"},"initialDelaySeconds":{"description":"Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes","format":"int32","type":"integer"},"periodSeconds":{"description":"How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.","format":"int32","type":"integer"},"successThreshold":{"description":"Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.","format":"int32","type":"integer"},"tcpSocket":{"description":"TCPSocketAction describes an action based on opening a socket","properties":{"host":{"description":"Optional: Host name to connect to, defaults to the pod IP.","type":"string"},"port":{"description":"IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.","format":"int-or-string","type":"string"}},"required":["port"],"type":"object"},"terminationGracePeriodSeconds":{"description":"Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.","format":"int64","type":"integer"},"timeoutSeconds":{"description":"Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes","format":"int32","type":"integer"}},"type":"object"},"stdin":{"description":"Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.","type":"boolean"},"stdinOnce":{"description":"Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false","type":"boolean"},"terminationMessagePath":{"description":"Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.","type":"string"},"terminationMessagePolicy":{"description":"Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.","type":"string"},"tty":{"description":"Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.","type":"boolean"},"volumeDevices":{"description":"volumeDevices is the list of block devices to be used by the container.","items":{"description":"volumeDevice describes a mapping of a raw block device within a container.","properties":{"devicePath":{"description":"devicePath is the path inside of the container that the device will be mapped to.","type":"string"},"name":{"description":"name must match the name of a persistentVolumeClaim in the pod","type":"string"}},"required":["name","devicePath"],"type":"object"},"type":"array"},"volumeMounts":{"description":"Pod volumes to mount into the container's filesystem. Cannot be updated.","items":{"description":"VolumeMount describes a mounting of a Volume within a container.","properties":{"mountPath":{"description":"Path within the container at which the volume should be mounted.  Must not contain ':'.","type":"string"},"mountPropagation":{"description":"mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.","type":"string"},"name":{"description":"This must match the Name of a Volume.","type":"string"},"readOnly":{"description":"Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.","type":"boolean"},"subPath":{"description":"Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).","type":"string"},"subPathExpr":{"description":"Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to \"\" (volume's root). SubPathExpr and SubPath are mutually exclusive.","type":"string"}},"required":["name","mountPath"],"type":"object"},"type":"array"},"workingDir":{"description":"Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.","type":"string"}},"required":["name"],"type":"object"}
                    customContainers:
                      type: array
                      description: |
                        A list of custom application containers that run within the cluster's Pods.
                        
                        The name used in this section will be prefixed with the string `custom-` so that when
                         referencing them in the .spec.containers section of SGInstanceProfile the name used
                         have to be prepended with the same prefix.
                         
                        See: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#container-v1-core
                      items: *containers-items
                  required: ["persistentVolume"]
                configurations:
                  type: object
                  description: |
                    Cluster custom configurations.
                  properties:
                    sgPostgresConfig:
                      type: string
                      description: |
                        Name of the [SGPostgresConfig](https://stackgres.io/doc/latest/reference/crd/sgpgconfig) used for the cluster. It must exist. When not set, a default Postgres config, for the major version selected, is used.
                    sgPoolingConfig:
                      type: string
                      description: |
                        Name of the [SGPoolingConfig](https://stackgres.io/doc/latest/reference/crd/sgpoolconfig) used for this cluster. Each pod contains a sidecar with a connection pooler (currently: [PgBouncer](https://www.pgbouncer.org/)). The connection pooler is implemented as a sidecar.

                        If not set, a default configuration will be used. Disabling connection pooling altogether is possible if the disableConnectionPooling property of the pods object is set to true.
                    sgBackupConfig:
                      type: string
                      description: |
                        **Deprecated**: use instead .spec.configurations.backups with sgObjectStorage.

                        Name of the [SGBackupConfig](https://stackgres.io/doc/latest/reference/crd/sgbackupconfig) to use for the cluster. It defines the backups policy, storage and retention, among others, applied to the cluster. When not set, backup configuration will not be used.
                    backupPath:
                      type: string
                      description: |
                        **Deprecated**: use instead .spec.configurations.backups[].path

                        The path were the backup is stored. If not set this field is filled up by the operator.

                        When provided will indicate were the backups and WAL files will be stored.
                    backups:
                      type: array
                      description: |
                        List of backups configurations for this SGCluster
                      items:
                        type: object
                        description: |
                          Backup configuration for this SGCluster
                        properties:
                          compression:
                            type: string
                            description: |
                              Specifies the backup compression algorithm. Possible options are: lz4, lzma, brotli. The default method is `lz4`. LZ4 is the fastest method, but compression ratio is the worst. LZMA is way slower, but it compresses backups about 6 times better than LZ4. Brotli is a good trade-off between speed and compression ratio, being about 3 times better than LZ4.
                            enum: [ "lz4", "lzma", "brotli" ]
                          cronSchedule:
                            type: string
                            description: |
                              Continuous Archiving backups are composed of periodic *base backups* and all the WAL segments produced in between those base backups. This parameter specifies at what time and with what frequency to start performing a new base backup.
                              
                              Use cron syntax (`m h dom mon dow`) for this parameter, i.e., 5 values separated by spaces:
                              *  `m`: minute, 0 to 59.
                              *  `h`: hour, 0 to 23.
                              *  `dom`: day of month, 1 to 31 (recommended not to set it higher than 28).
                              *  `mon`: month, 1 to 12.
                              *  `dow`: day of week, 0 to 7 (0 and 7 both represent Sunday).
                              
                              Also ranges of values (`start-end`), the symbol `*` (meaning `first-last`) or even `*/N`, where `N` is a number, meaning ""every `N`, may be used. All times are UTC. It is recommended to avoid 00:00 as base backup time, to avoid overlapping with any other external operations happening at this time.
                              
                              If not set, full backups are performed each day at 05:00 UTC.
                          performance:
                            type: object
                            description: |
                              Configuration that affects the backup network and disk usage performance.
                            properties:
                              maxNetworkBandwidth:
                                type: integer
                                description: |
                                  Maximum storage upload bandwidth used when storing a backup. In bytes (per second).
                              maxDiskBandwidth:
                                type: integer
                                description: |
                                  Maximum disk read I/O when performing a backup. In bytes (per second).
                              uploadDiskConcurrency:
                                type: integer
                                minimum: 1
                                description: |
                                  Backup storage may use several concurrent streams to store the data. This parameter configures the number of parallel streams to use to reading from disk. By default, it's set to 1.
                              uploadConcurrency:
                                type: integer
                                minimum: 1
                                description: |
                                  Backup storage may use several concurrent streams to store the data. This parameter configures the number of parallel streams to use. By default, it's set to 16.
                              downloadConcurrency:
                                type: integer
                                minimum: 1
                                description: |
                                  Backup storage may use several concurrent streams to read the data. This parameter configures the number of parallel streams to use. By default, it's set to the minimum between the number of file to read and 10.
                          retention:
                            type: integer
                            minimum: 1
                            description: |
                              When an automatic retention policy is defined to delete old base backups, this parameter specifies the number of base backups to keep, in a sliding window.
                              
                              Consequently, the time range covered by backups is `periodicity*retention`, where `periodicity` is the separation between backups as specified by the `cronSchedule` property.
                              
                              Default is 5.
                          sgObjectStorage:
                            type: string
                            description: |
                              Name of the [SGObjectStorage](https://stackgres.io/doc/latest/reference/crd/sgobjectstorage) to use for the cluster. It defines the location in which the the backups will be stored.
                          path:
                            type: string
                            description: |
                              The path were the backup is stored. If not set this field is filled up by the operator.

                              When provided will indicate were the backups and WAL files will be stored.
                        required: ["sgObjectStorage"]
                    patroni:
                      type: object
                      description: Allow to specify Patroni configuration that will extend the generated one
                      properties:
                        initialConfig:
                          type: object
                          description: Allow to specify Patroni configuration that will overwrite the generated one
                          "x-kubernetes-preserve-unknown-fields": true
                    credentials:
                      type: object
                      description: Allow to specify custom credentials for Postgres users and Patroni REST API
                      properties:
                        patroni:
                          type: object
                          description: |
                            Kubernetes [SecretKeySelectors](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) that contains the credentials for patroni REST API.
                          properties:
                            restApiPassword:
                              type: object
                              description: |
                                A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) that contains the password for the patroni REST API.
                              properties:
                                name:
                                  type: string
                                  description: Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                key:
                                  type: string
                                  description: The key of the secret to select from. Must be a valid secret key.
                              required: ["name", "key"]
                        users:
                          type: object
                          description: |
                            Kubernetes [SecretKeySelectors](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) that contains the credentials of the users.
                          properties:
                            superuser:
                              type: object
                              description: |
                                A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) that contains the credentials of the superuser (usually the postgres user).
                              properties:
                                username:
                                  type: object
                                  description: |
                                    A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) that contains the username of the user.
                                  properties:
                                    name:
                                      type: string
                                      description: Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                    key:
                                      type: string
                                      description: The key of the secret to select from. Must be a valid secret key.
                                  required: ["name", "key"]
                                password:
                                  type: object
                                  description: |
                                    A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) that contains the password of the user.
                                  properties:
                                    name:
                                      type: string
                                      description: Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                    key:
                                      type: string
                                      description: The key of the secret to select from. Must be a valid secret key.
                                  required: ["name", "key"]
                            replication:
                              type: object
                              description: |
                                A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) that contains the credentials of the replication user used to replicate from the primary cluster and from replicas of this cluster.
                              properties:
                                username:
                                  type: object
                                  description: |
                                    A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) that contains the username of the user.
                                  properties:
                                    name:
                                      type: string
                                      description: Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                    key:
                                      type: string
                                      description: The key of the secret to select from. Must be a valid secret key.
                                  required: ["name", "key"]
                                password:
                                  type: object
                                  description: |
                                    A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) that contains the password of the user.
                                  properties:
                                    name:
                                      type: string
                                      description: Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                    key:
                                      type: string
                                      description: The key of the secret to select from. Must be a valid secret key.
                                  required: ["name", "key"]
                            authenticator:
                              type: object
                              description: |
                                A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) that contains the credentials of the authenticator user used by pgbouncer to authenticate other users.
                              properties:
                                username:
                                  type: object
                                  description: |
                                    A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) that contains the username of the user.
                                  properties:
                                    name:
                                      type: string
                                      description: Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                    key:
                                      type: string
                                      description: The key of the secret to select from. Must be a valid secret key.
                                  required: ["name", "key"]
                                password:
                                  type: object
                                  description: |
                                    A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) that contains the password of the user.
                                  properties:
                                    name:
                                      type: string
                                      description: Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                    key:
                                      type: string
                                      description: The key of the secret to select from. Must be a valid secret key.
                                  required: ["name", "key"]
                managedSql:
                  type: object
                  description: |
                    This section allows to reference SQL scripts that will be applied to the cluster live.
                  properties:
                    continueOnSGScriptError:
                      type: boolean
                      description: If true, when any entry of any `SGScript` fail will not prevent subsequent `SGScript` from being executed. By default is `false`.
                    scripts:
                      type: array
                      description: |
                        A list of script references that will be executed in sequence.
                      items:
                        type: object
                        description: |
                          A script reference. Each version of each entry of the script referenced will be executed exactly once following the sequence defined
                           in the referenced script and skipping any script entry that have already been executed.
                        properties:
                          id:
                            type: integer
                            description: The id is immutable and must be unique across all the `SGScript` entries. It is replaced by the operator and is used
                             to identify the `SGScript` entry.
                          sgScript:
                            type: string
                            description: A reference to an `SGScript`
                initialData:
                  type: object
                  description: Cluster initialization data options. Cluster may be initialized empty, or from a backup restoration.
                   Specifying scripts to run on the database after cluster creation is also possible.
                  properties:
                    restore:
                      type: object
                      properties:
                        fromBackup:
                          type: object
                          description: |
                            From which backup to restore and how the process is configured
                          properties:
                            uid:
                              type: string
                              description: |
                                When set to the UID of an existing [SGBackup](https://stackgres.io/doc/latest/reference/crd/sgbackup), the cluster is initialized by restoring the
                                 backup data to it. If not set, the cluster is initialized empty. This field is deprecated.
                            name:
                              type: string
                              description: |
                                When set to the name of an existing [SGBackup](https://stackgres.io/doc/latest/reference/crd/sgbackup), the cluster is initialized by restoring the
                                 backup data to it. If not set, the cluster is initialized empty. The selected backup must be in the same namespace.
                            target:
                              type: string
                              description: |
                                Specify the [recovery_target](https://postgresqlco.nf/doc/en/param/recovery_target/) that specifies that recovery should end as soon as a consistent
                                 state is reached, i.e., as early as possible. When restoring from an online backup, this means the point where taking the backup ended.

                                Technically, this is a string parameter, but 'immediate' is currently the only allowed value.
                            targetTimeline:
                              type: string
                              description: |
                                Specify the [recovery_target_timeline](https://postgresqlco.nf/doc/en/param/recovery_target_timeline/) to recover into a particular timeline.
                                 The default is to recover along the same timeline that was current when the base backup was taken. Setting this to latest recovers to the latest
                                 timeline found in the archive, which is useful in a standby server. Other than that you only need to set this parameter in complex re-recovery
                                 situations, where you need to return to a state that itself was reached after a point-in-time recovery.
                            targetInclusive:
                              type: boolean
                              description: |
                                Specify the [recovery_target_inclusive](https://postgresqlco.nf/doc/en/param/recovery_target_timeline/) to stop recovery just after the specified
                                 recovery target (true), or just before the recovery target (false). Applies when targetLsn, pointInTimeRecovery, or targetXid is specified. This
                                 setting controls whether transactions having exactly the target WAL location (LSN), commit time, or transaction ID, respectively, will be included
                                 in the recovery. Default is true.
                            targetName:
                              type: string
                              description: |
                                [recovery_target_name](https://postgresqlco.nf/doc/en/param/recovery_target_name/) specifies the named restore point
                                 (created with pg_create_restore_point()) to which recovery will proceed.
                            targetXid:
                              type: string
                              description: |
                                [recovery_target_xid](https://postgresqlco.nf/doc/en/param/recovery_target_xid/) specifies the transaction ID up to which recovery will proceed.
                                 Keep in mind that while transaction IDs are assigned sequentially at transaction start, transactions can complete in a different numeric order.
                                 The transactions that will be recovered are those that committed before (and optionally including) the specified one. The precise stopping point
                                 is also influenced by targetInclusive.
                            targetLsn:
                              type: string
                              description: |
                                [recovery_target_lsn](https://postgresqlco.nf/doc/en/param/recovery_target_lsn/) specifies the LSN of the write-ahead log location up to which
                                 recovery will proceed. The precise stopping point is also influenced by targetInclusive. This parameter is parsed using the system data type
                                 pg_lsn.
                            pointInTimeRecovery:
                              type: object
                              description: |
                                It is possible to restore the database to its state at any time since your backup was taken using Point-in-Time Recovery (PITR) as long as another
                                 backup newer than the PITR requested restoration date does not exists.

                                Point In Time Recovery (PITR). PITR allow to restore the database state to an arbitrary point of time in the past, as long as you specify a backup
                                 older than the PITR requested restoration date and does not exists a backup newer than the same restoration date.

                                See also: https://www.postgresql.org/docs/current/continuous-archiving.html
                              properties:
                                restoreToTimestamp:
                                  type: string
                                  description: |
                                    An ISO 8601 date, that holds UTC date indicating at which point-in-time the database have to be restored.
                        downloadDiskConcurrency:
                          type: integer
                          minimum: 1
                          description: |
                            The backup fetch process may fetch several streams in parallel. Parallel fetching is enabled when set to a value larger than one.

                            If not specified it will be interpreted as latest.
                    scripts:
                      type: array
                      description: |
                        **Deprecated** use instead .spec.managedSql with SGScript.

                        A list of SQL scripts executed in sequence, exactly once, when the database is bootstrap and/or after restore is completed.
                      items:
                        type: object
                        description: |
                          **Deprecated** use instead .spec.managedSql with SGScript.

                          Scripts are executed in auto-commit mode with the user `postgres` in the specified database (or in database `postgres` if not specified).

                          Fields `script` and `scriptFrom` are mutually exclusive and only one of them is required.
                        properties:
                          name:
                            type: string
                            description: |
                              Name of the script. Must be unique across this SGCluster.
                          database:
                            type: string
                            description: |
                              Database where the script is executed. Defaults to the `postgres` database, if not specified.
                          script:
                            type: string
                            description: |
                              Raw SQL script to execute. This field is mutually exclusive with `scriptFrom` field.
                          scriptFrom:
                            type: object
                            description: |
                              Reference to either a Kubernetes [Secret](https://kubernetes.io/docs/concepts/configuration/secret/) or a [ConfigMap](https://kubernetes.io/docs/concepts/configuration/configmap/) that contains the SQL script to execute. This field is mutually exclusive with `script` field.

                              Fields `secretKeyRef` and `configMapKeyRef` are mutually exclusive, and one of them is required.
                            properties:
                              secretKeyRef:
                                type: object
                                description: |
                                  A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) that contains the SQL script to execute. This field is mutually exclusive with `configMapKeyRef` field.
                                properties:
                                  name:
                                    type: string
                                    description: Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                  key:
                                    type: string
                                    description: The key of the secret to select from. Must be a valid secret key.
                              configMapKeyRef:
                                type: object
                                description: |
                                  A [ConfigMap](https://kubernetes.io/docs/concepts/configuration/configmap/) reference that contains the SQL script to execute. This field is mutually exclusive with `secretKeyRef` field.
                                properties:
                                  name:
                                    type: string
                                    description: |
                                      The name of the ConfigMap that contains the SQL script to execute.
                                  key:
                                    type: string
                                    description: |
                                      The key name within the ConfigMap that contains the SQL script to execute.
                replicateFrom:
                  type: object
                  description: |
                    Make the cluster a read-only standby replica allowing to replicate from another PostgreSQL instance and acting as a rely.
                    
                    Changing this section is allowed to fix issues or to change the replication source.
                    
                    Removing this section convert the cluster in a normal cluster where the standby leader is converted into the a primary instance.
                  properties:
                    instance:
                      type: object
                      description: |
                        Configure replication from a PostgreSQL instance.
                      properties:
                        sgCluster:
                          type: string
                          description: |
                            Configure replication from an SGCluster.
                        external:
                          type: object
                          description: |
                            Configure replication from an external PostgreSQL instance.
                          properties:
                            host:
                              type: string
                              description: The host of the PostgreSQL to replicate from.
                            port:
                              type: integer
                              description: The port of the PostgreSQL to replicate from.
                          required: ["host", "port"]
                    storage:
                      type: object
                      description: |
                        Configure replication from an SGObjectStorage using WAL shipping.

                        The file structure of the object storage must follow the
                         [WAL-G](https://github.com/wal-g/wal-g) file structure.
                      properties:
                        performance:
                          type: object
                          description: |
                            Configuration that affects the backup network and disk usage performance.
                          properties:
                            maxNetworkBandwidth:
                              type: integer
                              description: |
                                Maximum storage upload bandwidth used when storing a backup. In bytes (per second).
                            maxDiskBandwidth:
                              type: integer
                              description: |
                                Maximum disk read I/O when performing a backup. In bytes (per second).
                            downloadConcurrency:
                              type: integer
                              minimum: 1
                              description: |
                                Backup storage may use several concurrent streams to read the data. This parameter configures the number of parallel streams to use. By default, it's set to the minimum between the number of file to read and 10.
                        sgObjectStorage:
                          type: string
                          description: The SGObjectStorage name to replicate from.
                        path:
                          type: string
                          description: The path in the SGObjectStorage to replicate from.
                      required: ["sgObjectStorage", "path"]
                    users:
                      type: object
                      description: |
                        Kubernetes [SecretKeySelectors](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) that contains the credentials of the users.
                      properties:
                        superuser:
                          type: object
                          description: |
                            A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) that contains the credentials of the superuser (usually the postgres user).
                          properties:
                            username:
                              type: object
                              description: |
                                A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) that contains the username of the user.
                              properties:
                                name:
                                  type: string
                                  description: Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                key:
                                  type: string
                                  description: The key of the secret to select from. Must be a valid secret key.
                              required: ["name", "key"]
                            password:
                              type: object
                              description: |
                                A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) that contains the password of the user.
                              properties:
                                name:
                                  type: string
                                  description: Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                key:
                                  type: string
                                  description: The key of the secret to select from. Must be a valid secret key.
                              required: ["name", "key"]
                          required: ["username", "password"]
                        replication:
                          type: object
                          description: |
                            A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) that contains the credentials of the replication user used to replicate from the primary cluster and from replicas of this cluster.
                          properties:
                            username:
                              type: object
                              description: |
                                A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) that contains the username of the user.
                              properties:
                                name:
                                  type: string
                                  description: Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                key:
                                  type: string
                                  description: The key of the secret to select from. Must be a valid secret key.
                              required: ["name", "key"]
                            password:
                              type: object
                              description: |
                                A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) that contains the password of the user.
                              properties:
                                name:
                                  type: string
                                  description: Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                key:
                                  type: string
                                  description: The key of the secret to select from. Must be a valid secret key.
                              required: ["name", "key"]
                          required: ["username", "password"]
                        authenticator:
                          type: object
                          description: |
                            A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) that contains the credentials of the authenticator user used by pgbouncer to authenticate other users.
                          properties:
                            username:
                              type: object
                              description: |
                                A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) that contains the username of the user.
                              properties:
                                name:
                                  type: string
                                  description: Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                key:
                                  type: string
                                  description: The key of the secret to select from. Must be a valid secret key.
                              required: ["name", "key"]
                            password:
                              type: object
                              description: |
                                A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) that contains the password of the user.
                              properties:
                                name:
                                  type: string
                                  description: Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                key:
                                  type: string
                                  description: The key of the secret to select from. Must be a valid secret key.
                              required: ["name", "key"]
                          required: ["username", "password"]
                      required: ["superuser", "replication", "authenticator"]
                prometheusAutobind:
                  type: boolean
                  description: |
                    If enabled, a ServiceMonitor is created for each Prometheus instance found in order to collect metrics.
                nonProductionOptions:
                  type: object
                  properties:
                    disableClusterPodAntiAffinity:
                      type: boolean
                      description: |
                        It is a best practice, on non-containerized environments, when running production workloads, to run each database server on a different server (virtual or physical), i.e., not to co-locate more than one database server per host.

                        The same best practice applies to databases on containers. By default, StackGres will not allow to run more than one StackGres pod on a given Kubernetes node. Set this property to true to allow more than one StackGres pod per node.
                    disablePatroniResourceRequirements:
                      type: boolean
                      description: |
                        It is a best practice, on containerized environments, when running production workloads, to enforce container's resources requirements.

                        The same best practice applies to databases on containers. By default, StackGres will configure resource requirements for patroni container. Set this property to true to prevent StackGres from setting patroni container's resources requirement.
                    disableClusterResourceRequirements:
                      type: boolean
                      description: |
                        It is a best practice, on containerized environments, when running production workloads, to enforce container's resources requirements.

                        By default, StackGres will configure resource requirements for all the containers. Set this property to true to prevent StackGres from setting container's resources requirements (except for patroni container, see `disablePatroniResourceRequirements`).
                    enableSetPatroniCpuRequests:
                      type: boolean
                      description: |
                        On containerized environments, when running production workloads, enforcing container's cpu requirements request to be equals to the limit allow to achieve the highest level of performance. Doing so, reduces the chances of leaving
                         the workload with less cpu than it requires. It also allow to set [static CPU management policy](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/#static-policy) that allows to guarantee a pod the usage exclusive CPUs on the node.

                        By default, StackGres will configure cpu requirements to have the same limit and request for the patroni container. Set this property to true to prevent StackGres from setting patroni container's cpu requirements request equals to the limit
                         when `.spec.requests.cpu` is configured in the referenced `SGInstanceProfile`.
                    enableSetClusterCpuRequests:
                      type: boolean
                      description: |
                        On containerized environments, when running production workloads, enforcing container's cpu requirements request to be equals to the limit allow to achieve the highest level of performance. Doing so, reduces the chances of leaving
                         the workload with less cpu than it requires. It also allow to set [static CPU management policy](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/#static-policy) that allows to guarantee a pod the usage exclusive CPUs on the node.

                        By default, StackGres will configure cpu requirements to have the same limit and request for all the containers. Set this property to true to prevent StackGres from setting container's cpu requirements request equals to the limit (except for patroni container, see `enablePatroniCpuRequests`)
                         when `.spec.requests.containers.<container name>.cpu` `.spec.requests.initContainers.<container name>.cpu` is configured in the referenced `SGInstanceProfile`.
                    enableSetPatroniMemoryRequests:
                      type: boolean
                      description: |
                        On containerized environments, when running production workloads, enforcing container's memory requirements request to be equals to the limit allow to achieve the highest level of performance. Doing so, reduces the chances of leaving
                         the workload with less memory than it requires.

                        By default, StackGres will configure memory requirements to have the same limit and request for the patroni container. Set this property to true to prevent StackGres from setting patroni container's memory requirements request equals to the limit
                         when `.spec.requests.memory` is configured in the referenced `SGInstanceProfile`.
                    enableSetClusterMemoryRequests:
                      type: boolean
                      description: |
                        On containerized environments, when running production workloads, enforcing container's memory requirements request to be equals to the limit allow to achieve the highest level of performance. Doing so, reduces the chances of leaving
                         the workload with less memory than it requires.

                        By default, StackGres will configure memory requirements to have the same limit and request for all the containers. Set this property to true to prevent StackGres from setting container's memory requirements request equals to the limit (except for patroni container, see `enablePatroniCpuRequests`)
                         when `.spec.requests.containers.<container name>.memory` `.spec.requests.initContainers.<container name>.memory` is configured in the referenced `SGInstanceProfile`.
                    enabledFeatureGates:
                      type: array
                      description: |
                        A list of StackGres feature gates to enable (not suitable for a production environment).
                        
                        Available feature gates are:
                        * `babelfish-flavor`: Allow to use `babelfish` flavor.
                      items:
                        type: string
                        description: The name of the fature gate to enable.
                distributedLogs:
                  type: object
                  description: StackGres features a functionality for all pods to send Postgres, Patroni and PgBouncer logs to a central (distributed) location, which is in turn another Postgres database. Logs can then be accessed via SQL interface or from the web UI. This section controls whether to enable this feature or not. If not enabled, logs are send to the pod's standard output.
                  properties:
                    sgDistributedLogs:
                      type: string
                      description: |
                        Name of the [SGDistributedLogs](https://stackgres.io/doc/latest/04-postgres-cluster-management/06-distributed-logs/) to use for this cluster. It must exist.
                    retention:
                      type: string
                      pattern: '^[0-9]+ (minutes?|hours?|days?|months?)'
                      description: |
                        Define a retention window with the syntax `<integer> (minutes|hours|days|months)` in which log entries are kept.
                         Log entries will be removed when they get older more than the double of the specified retention window.

                        When this field is changed the retention will be applied only to log entries that are newer than the end of
                         the retention window previously specified. If no retention window was previously specified it is considered
                         to be of 7 days. This means that if previous retention window is of `7 days` new retention configuration will
                         apply after UTC timestamp calculated with: `SELECT date_trunc('days', now() at time zone 'UTC') - INTERVAL '7 days'`.
                toInstallPostgresExtensions:
                  type: array
                  description: The list of Postgres extensions to install. This section is filled by the operator.
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        description: The name of the extension to install.
                      publisher:
                        type: string
                        description: The id of the publisher of the extension to install.
                      version:
                        type: string
                        description: The version of the extension to install.
                      repository:
                        type: string
                        description: The repository base URL from where the extension will be installed from.
                      postgresVersion:
                        type: string
                        description: The postgres major version of the extension to install.
                      build:
                        type: string
                        description: The build version of the extension to install.
                      extraMounts:
                        type: array
                        description: The extra mounts of the extension to install.
                        items:
                          type: string
                          description: The extra mount of the installed extension.
                    required: ["name", "publisher", "version", "repository", "postgresVersion"]
              required: ["instances", "postgres", "pods"]
            status:
              type: object
              properties:
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one status to another.
                        type: string
                      message:
                        description: A human readable message indicating details about the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: Type of deployment condition.
                        type: string
                podStatuses:
                  type: array
                  description: The list of pod statuses.
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        description: The name of the pod.
                      replicationGroup:
                        type: integer
                        description: Indicates the replication group this Pod belongs to.
                      primary:
                        type: boolean
                        description: Indicates if the pod is the elected primary
                      pendingRestart:
                        type: boolean
                        description: Indicates if the pod requires restart
                      installedPostgresExtensions:
                        type: array
                        description: The list of Postgres extensions currently installed.
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                              description: The name of the installed extension.
                            publisher:
                              type: string
                              description: The id of the publisher of the installed extension.
                            version:
                              type: string
                              description: The version of the installed extension.
                            repository:
                              type: string
                              description: The repository base URL from where the extension was installed from.
                            postgresVersion:
                              type: string
                              description: The postgres major version of the installed extension.
                            build:
                              type: string
                              description: The build version of the installed extension.
                            extraMounts:
                              type: array
                              description: The extra mounts of the installed extension.
                              items:
                                type: string
                                description: The extra mount of the installed extension.
                          required: ["name", "publisher", "version", "repository", "postgresVersion"]
                    required: ["name"]
                dbOps:
                  type: object
                  description: |
                    Used by some [SGDbOps](https://stackgres.io/doc/latest/reference/crd/sgdbops) to indicate the operation configuration and status to the operator.
                  properties:
                    majorVersionUpgrade:
                      type: object
                      description: |
                        The major version upgrade configuration and status
                      properties:
                        initialInstances:
                          type: array
                          description: |
                            The instances that this operation is targetting
                          items:
                            type: string
                        primaryInstance:
                          type: string
                          description: |
                            The primary instance that this operation is targetting
                        sourcePostgresVersion:
                          type: string
                          description: |
                            The source PostgreSQL version
                        sourceSgPostgresConfig:
                          type: string
                          description: |
                            The source SGPostgresConfig reference
                        sourceBackupPath:
                          type: string
                          description: |
                            The source backup path
                        targetPostgresVersion:
                          type: string
                          description: |
                            The target PostgreSQL version
                        locale:
                          type: string
                          description: |
                            The PostgreSQL locale
                        encoding:
                          type: string
                          description: |
                            The PostgreSQL encoding
                        dataChecksum:
                          type: boolean
                          description: |
                            Indicates if PostgreSQL data checksum is enabled
                        link:
                          type: boolean
                          description: |
                            Use `--link` option when running `pg_upgrade`
                        clone:
                          type: boolean
                          description: |
                            Use `--clone` option when running `pg_upgrade`
                        check:
                          type: boolean
                          description: |
                            Run `pg_upgrade` with check option instead of performing the real upgrade
                        rollback:
                          type: boolean
                          description: |
                            Indicates to rollback from a previous major version upgrade
                    restart:
                      type: object
                      description: |
                        The minor version upgrade configuration and status
                      properties:
                        initialInstances:
                          type: array
                          description: |
                            The instances that this operation is targetting
                          items:
                            type: string
                        primaryInstance:
                          type: string
                          description: |
                            The primary instance that this operation is targetting
                    minorVersionUpgrade:
                      type: object
                      description: |
                        The minor version upgrade configuration and status
                      properties:
                        initialInstances:
                          type: array
                          description: |
                            The instances that this operation is targetting
                          items:
                            type: string
                        primaryInstance:
                          type: string
                          description: |
                            The primary instance that this operation is targetting
                        sourcePostgresVersion:
                          type: string
                          description: |
                            Postgres version that is currently running on the cluster
                        targetPostgresVersion:
                          type: string
                          description: |
                            The desired Postgres version for the cluster
                    securityUpgrade:
                      type: object
                      description: |
                        The minor version upgrade configuration and status
                      properties:
                        initialInstances:
                          type: array
                          description: |
                            The instances that this operation is targetting
                          items:
                            type: string
                        primaryInstance:
                          type: string
                          description: |
                            The primary instance that this operation is targetting
                arch:
                  type: string
                  description: The architecture on which the cluster has been initialized.
                os:
                  type: string
                  description: The operative system on which the cluster has been initialized.
                labelPrefix:
                  type: string
                  description: The custom prefix that is prepended to all labels.
                managedSql:
                  type: object
                  description: |
                    This section stores the state of referenced SQL scripts that are applied to the cluster live.
                  properties:
                    scripts:
                      type: array
                      description: A list of statuses for script references.
                      items:
                        type: object
                        description: The status of a script reference.
                        properties:
                          id:
                            type: integer
                            description: Identify the associated `SGScript` entry with the same value in the `id` field.
                          startedAt:
                            type: string
                            description: ISO-8601 datetime of when the script execution has been started.
                          updatedAt:
                            type: string
                            description: ISO-8601 datetime of when the last script execution occurred. Will be reset each time the referenced `SGScripts` entry will be applied.
                          failedAt:
                            type: string
                            description: ISO-8601 datetime of when the script execution had failed (mutually exclusive with `completedAt`).
                          completedAt:
                            type: string
                            description: ISO-8601 datetime of when the script execution had completed (mutually exclusive with `failedAt`).
                          scripts:
                            type: array
                            description: A list of statuses for script entries of referenced script.
                            items:
                              type: object
                              description: The status of a script entry of a referenced script.
                              properties:
                                id:
                                  type: integer
                                  description: Identify the associated script entry with the same value in the `id` field.
                                version:
                                  type: integer
                                  description: The latest version applied
                                intents:
                                  type: integer
                                  description: Indicates the number of intents or failures occurred
                                failureCode:
                                  type: string
                                  description: If failed, the error code of the failure. See also https://www.postgresql.org/docs/current/errcodes-appendix.html
                                failure:
                                  type: string
                                  description: If failed, a message of the failure


---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: sgdbops.stackgres.io
spec:
  group: stackgres.io
  scope: Namespaced
  names:
    kind: SGDbOps
    listKind: SGDbOpsList
    plural: sgdbops
    singular: sgdbops
    shortNames:
      - sgdo
  versions:
    - name: v1
      served: true
      storage: true
      additionalPrinterColumns:
      - name: cluster
        type: string
        jsonPath: .spec.sgCluster
      - name: operation
        type: string
        jsonPath: .spec.op
      - name: status
        type: string
        jsonPath: .status.conditions[?(@.status=="True")].reason
      - name: started-at
        type: string
        jsonPath: .status.opStarted
        priority: 1
      - name: retries
        type: string
        jsonPath: .status.opRetries
        priority: 1
      schema:
        openAPIV3Schema:
          required: ["metadata", "spec"]
          type: object
          properties:
            metadata:
              type: object
              properties:
                name:
                  type: string
                  maxLength: 57
                  pattern: "^[a-z]([-a-z0-9]*[a-z0-9])?$"
                  description: |
                    Name of the Database Operation. A database operation represents a ""kind"" of operation on a StackGres cluster, classified by a given name. The operation reference one SGCluster by its name. Following [Kubernetes naming conventions](https://github.com/kubernetes/community/blob/master/contributors/design-proposals/architecture/identifiers.md), it must be an rfc1035/rfc1123 `label`, an alphanumeric (a-z, and 0-9) string, with a maximum length of 21 characters, with the '-' character allowed anywhere except the first or last character.

                    The name must be unique across all database operations in the same namespace."
            spec:
              type: object
              properties:
                sgCluster:
                  type: string
                  description: |
                    The name of SGCluster on which the operation will be performed.
                scheduling:
                  type: object
                  description: Pod custom node scheduling and affinity configuration
                  properties:
                    nodeSelector:
                      type: object
                      additionalProperties:
                        type: string
                      description: |
                        NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
                    tolerations:
                      {"description":"If specified, the pod's tolerations.\n\nSee: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#toleration-v1-core\n","type":"array","items":{"description":"The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>\n\nSee: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#toleration-v1-core\n","properties":{"effect":{"description":"Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.\n\n","type":"string"},"key":{"description":"Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.","type":"string"},"operator":{"description":"Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.\n\n","type":"string"},"tolerationSeconds":{"description":"TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.","format":"int64","type":"integer"},"value":{"description":"Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.","type":"string"}},"type":"object"}}
                    nodeAffinity:
                      {"description":"Node affinity is a group of node affinity scheduling rules.\n\nSee: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#nodeaffinity-v1-core\n","properties":{"preferredDuringSchedulingIgnoredDuringExecution":{"description":"The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.","items":{"description":"An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).","properties":{"preference":{"description":"A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.","properties":{"matchExpressions":{"description":"A list of node selector requirements by node's labels.","items":{"description":"A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.","properties":{"key":{"description":"The label key that the selector applies to.","type":"string"},"operator":{"description":"Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.\n\n","type":"string"},"values":{"description":"An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchFields":{"description":"A list of node selector requirements by node's fields.","items":{"description":"A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.","properties":{"key":{"description":"The label key that the selector applies to.","type":"string"},"operator":{"description":"Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.\n\n","type":"string"},"values":{"description":"An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"}},"type":"object"},"weight":{"description":"Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.","format":"int32","type":"integer"}},"required":["weight","preference"],"type":"object"},"type":"array"},"requiredDuringSchedulingIgnoredDuringExecution":{"description":"A node selector represents the union of the results of one or more label queries over a set of nodes; that is, it represents the OR of the selectors represented by the node selector terms.","properties":{"nodeSelectorTerms":{"description":"Required. A list of node selector terms. The terms are ORed.","items":{"description":"A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.","properties":{"matchExpressions":{"description":"A list of node selector requirements by node's labels.","items":{"description":"A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.","properties":{"key":{"description":"The label key that the selector applies to.","type":"string"},"operator":{"description":"Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.\n\n","type":"string"},"values":{"description":"An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchFields":{"description":"A list of node selector requirements by node's fields.","items":{"description":"A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.","properties":{"key":{"description":"The label key that the selector applies to.","type":"string"},"operator":{"description":"Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.\n\n","type":"string"},"values":{"description":"An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"}},"type":"object"},"type":"array"}},"required":["nodeSelectorTerms"],"type":"object"}},"type":"object"}
                    priorityClassName:
                      type: string
                      description: |
                        Priority indicates the importance of a Pod relative to other Pods. If a Pod cannot be scheduled, the scheduler tries to preempt (evict) lower priority Pods to make scheduling of the pending Pod possible.
                    podAffinity:
                      {"description":"Pod affinity is a group of inter pod affinity scheduling rules.\n\nSee: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#podaffinity-v1-core\n","properties":{"preferredDuringSchedulingIgnoredDuringExecution":{"description":"The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.","items":{"description":"The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)","properties":{"podAffinityTerm":{"description":"Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running","properties":{"labelSelector":{"description":"A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object"},"namespaceSelector":{"description":"A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object"},"namespaces":{"description":"namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \"this pod's namespace\".","items":{"type":"string"},"type":"array"},"topologyKey":{"description":"This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.","type":"string"}},"required":["topologyKey"],"type":"object"},"weight":{"description":"weight associated with matching the corresponding podAffinityTerm, in the range 1-100.","format":"int32","type":"integer"}},"required":["weight","podAffinityTerm"],"type":"object"},"type":"array"},"requiredDuringSchedulingIgnoredDuringExecution":{"description":"If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.","items":{"description":"Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running","properties":{"labelSelector":{"description":"A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object"},"namespaceSelector":{"description":"A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object"},"namespaces":{"description":"namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \"this pod's namespace\".","items":{"type":"string"},"type":"array"},"topologyKey":{"description":"This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.","type":"string"}},"required":["topologyKey"],"type":"object"},"type":"array"}},"type":"object"}
                    podAntiAffinity:
                      {"description":"Pod anti affinity is a group of inter pod anti affinity scheduling rules.\n\nSee: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#podantiaffinity-v1-core\n","properties":{"preferredDuringSchedulingIgnoredDuringExecution":{"description":"The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.","items":{"description":"The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)","properties":{"podAffinityTerm":{"description":"Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running","properties":{"labelSelector":{"description":"A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object"},"namespaceSelector":{"description":"A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object"},"namespaces":{"description":"namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \"this pod's namespace\".","items":{"type":"string"},"type":"array"},"topologyKey":{"description":"This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.","type":"string"}},"required":["topologyKey"],"type":"object"},"weight":{"description":"weight associated with matching the corresponding podAffinityTerm, in the range 1-100.","format":"int32","type":"integer"}},"required":["weight","podAffinityTerm"],"type":"object"},"type":"array"},"requiredDuringSchedulingIgnoredDuringExecution":{"description":"If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.","items":{"description":"Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running","properties":{"labelSelector":{"description":"A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object"},"namespaceSelector":{"description":"A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object"},"namespaces":{"description":"namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \"this pod's namespace\".","items":{"type":"string"},"type":"array"},"topologyKey":{"description":"This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.","type":"string"}},"required":["topologyKey"],"type":"object"},"type":"array"}},"type":"object"}
                op:
                  type: string
                  description: |
                    The kind of operation that will be performed on the SGCluster. Available operations are:

                    * `benchmark`: run a benchmark on the specified SGCluster and report the results in the status.
                    * `vacuum`: perform a [vacuum](https://www.postgresql.org/docs/current/sql-vacuum.html) operation on the specified SGCluster.
                    * `repack`: run [`pg_repack`](https://github.com/reorg/pg_repack) command on the specified SGCluster.
                    * `majorVersionUpgrade`: perform a major version upgrade of PostgreSQL using [`pg_upgrade`](https://www.postgresql.org/docs/current/pgupgrade.html) command.
                    * `restart`: perform a restart of the cluster.
                    * `minorVersionUpgrade`: perform a minor version upgrade of PostgreSQL.
                    * `securityUpgrade`: perform a security upgrade of the cluster.
                    * `upgrade`: perform a operator API upgrade of the cluster
                runAt:
                  type: string
                  description: |
                    An ISO 8601 date, that holds UTC scheduled date of the operation execution.

                    If not specified or if the date it's in the past, it will be interpreted ASAP.
                timeout:
                  type: string
                  description: |
                    An ISO 8601 duration in the format `PnDTnHnMn.nS`, that specifies a timeout after which the operation execution will be canceled.

                    If the operation can not be performed due to timeout expiration, the condition `Failed` will have a status of `True` and the reason will be `OperationTimedOut`.

                    If not specified the operation will never fail for timeout expiration.
                maxRetries:
                  type: integer
                  description: |
                    The maximum number of retries the operation is allowed to do after a failure.

                    A value of `0` (zero) means no retries are made. Can not be greater than `10`. Defaults to: `0`.
                benchmark:
                  type: object
                  description: |
                    Configuration of the benchmark
                  properties:
                    type:
                      type: string
                      description: |
                        The type of benchmark that will be performed on the SGCluster. Available benchmarks are:

                        * `pgbench`: run [pgbench](https://www.postgresql.org/docs/current/pgbench.html) on the specified SGCluster and report the results in the status.
                    pgbench:
                      type: object
                      description: |
                        Configuration of [pgbench](https://www.postgresql.org/docs/current/pgbench.html) benchmark
                      properties:
                        databaseSize:
                          type: string
                          pattern: '^[0-9]+(\.[0-9]+)?(Mi|Gi|Ti)$'
                          description: |
                            Size of the database to generate. This size is specified either in Mebibytes, Gibibytes or Tebibytes (multiples of 2^20, 2^30 or 2^40, respectively).
                        duration:
                          type: string
                          description: |
                            An ISO 8601 duration in the format `PnDTnHnMn.nS`, that specifies how long the benchmark will run.
                        usePreparedStatements:
                          type: boolean
                          description: |
                            Use extended query protocol with prepared statements. Defaults to: `false`.
                        concurrentClients:
                          type: integer
                          description: |
                            Number of clients simulated, that is, number of concurrent database sessions. Defaults to: `1`.
                        threads:
                          type: integer
                          description: |
                            Number of worker threads within pgbench. Using more than one thread can be helpful on multi-CPU machines. Clients are distributed as evenly as possible among available threads. Default is `1`.
                      required: [ "databaseSize", "duration" ]
                    connectionType:
                      type: string
                      description: |
                        Specify the service where the benchmark will connect to:

                        * `primary-service`: Connect to the primary service
                        * `replicas-service`: Connect to the replicas service
                  required: [ "type" ]
                vacuum:
                  type: object
                  description: |
                    Configuration of [vacuum](https://www.postgresql.org/docs/current/sql-vacuum.html) operation
                  properties:
                    full:
                      type: boolean
                      description: |
                        If true selects "full" vacuum, which can reclaim more space, but takes much longer and exclusively locks the table.
                        This method also requires extra disk space, since it writes a new copy of the table and doesn't release the old copy
                         until the operation is complete. Usually this should only be used when a significant amount of space needs to be
                         reclaimed from within the table. Defaults to: `false`.
                    freeze:
                      type: boolean
                      description: |
                        If true selects aggressive "freezing" of tuples. Specifying FREEZE is equivalent to performing VACUUM with the
                         vacuum_freeze_min_age and vacuum_freeze_table_age parameters set to zero. Aggressive freezing is always performed
                         when the table is rewritten, so this option is redundant when FULL is specified. Defaults to: `false`.
                    analyze:
                      type: boolean
                      description: |
                        If true, updates statistics used by the planner to determine the most efficient way to execute a query. Defaults to: `true`.
                    disablePageSkipping:
                      type: boolean
                      description: |
                        Normally, VACUUM will skip pages based on the visibility map. Pages where all tuples are known to be frozen can always be
                         skipped, and those where all tuples are known to be visible to all transactions may be skipped except when performing an
                         aggressive vacuum. Furthermore, except when performing an aggressive vacuum, some pages may be skipped in order to avoid
                         waiting for other sessions to finish using them. This option disables all page-skipping behavior, and is intended to be
                         used only when the contents of the visibility map are suspect, which should happen only if there is a hardware or
                         software issue causing database corruption. Defaults to: `false`.
                    databases:
                      type: array
                      description: |
                        List of databases to vacuum or repack, don't specify to select all databases
                      items:
                        type: object
                        required: [ "name" ]
                        properties:
                          name:
                            type: string
                            description: the name of the database
                          full:
                            type: boolean
                            description: |
                              If true selects "full" vacuum, which can reclaim more space, but takes much longer and exclusively locks the table.
                              This method also requires extra disk space, since it writes a new copy of the table and doesn't release the old copy
                               until the operation is complete. Usually this should only be used when a significant amount of space needs to be
                               reclaimed from within the table. Defaults to: `false`.
                          freeze:
                            type: boolean
                            description: |
                              If true selects aggressive "freezing" of tuples. Specifying FREEZE is equivalent to performing VACUUM with the
                               vacuum_freeze_min_age and vacuum_freeze_table_age parameters set to zero. Aggressive freezing is always performed
                               when the table is rewritten, so this option is redundant when FULL is specified. Defaults to: `false`.
                          analyze:
                            type: boolean
                            description: |
                              If true, updates statistics used by the planner to determine the most efficient way to execute a query. Defaults to: `true`.
                          disablePageSkipping:
                            type: boolean
                            description: |
                              Normally, VACUUM will skip pages based on the visibility map. Pages where all tuples are known to be frozen can always be
                               skipped, and those where all tuples are known to be visible to all transactions may be skipped except when performing an
                               aggressive vacuum. Furthermore, except when performing an aggressive vacuum, some pages may be skipped in order to avoid
                               waiting for other sessions to finish using them. This option disables all page-skipping behavior, and is intended to be
                               used only when the contents of the visibility map are suspect, which should happen only if there is a hardware or
                               software issue causing database corruption. Defaults to: `false`.
                repack:
                  type: object
                  description: |
                    Configuration of [`pg_repack`](https://github.com/reorg/pg_repack) command
                  properties:
                    noOrder:
                      type: boolean
                      description: |
                        If true do vacuum full instead of cluster. Defaults to: `false`.
                    waitTimeout:
                      type: string
                      description: |
                        If specified, an ISO 8601 duration format `PnDTnHnMn.nS` to set a timeout to cancel other backends on conflict.
                    noKillBackend:
                      type: boolean
                      description: |
                        If true don't kill other backends when timed out. Defaults to: `false`.
                    noAnalyze:
                      type: boolean
                      description: |
                        If true don't analyze at end. Defaults to: `false`.
                    excludeExtension:
                      type: boolean
                      description: |
                        If true don't repack tables which belong to specific extension. Defaults to: `false`.
                    databases:
                      type: array
                      description: |
                        List of database to vacuum or repack, don't specify to select all databases
                      items:
                        type: object
                        required: [ "name" ]
                        properties:
                          name:
                            type: string
                            description: the name of the database
                          noOrder:
                            type: boolean
                            description: |
                              If true do vacuum full instead of cluster. Defaults to: `false`.
                          waitTimeout:
                            type: string
                            description: |
                              If specified, an ISO 8601 duration format `PnDTnHnMn.nS` to set a timeout to cancel other backends on conflict.
                          noKillBackend:
                            type: boolean
                            description: |
                              If true don't kill other backends when timed out. Defaults to: `false`.
                          noAnalyze:
                            type: boolean
                            description: |
                              If true don't analyze at end. Defaults to: `false`.
                          excludeExtension:
                            type: boolean
                            description: |
                              If true don't repack tables which belong to specific extension. Defaults to: `false`.
                majorVersionUpgrade:
                  type: object
                  description: |
                    Configuration of major version upgrade (see also [`pg_upgrade`](https://www.postgresql.org/docs/current/pgupgrade.html) command)
                  properties:
                    postgresVersion:
                      type: string
                      description: |
                        The target postgres version that must have the same major version of the target SGCluster.
                    sgPostgresConfig:
                      type: string
                      description: |
                        The postgres config that must have the same major version of the target postgres version.
                    backupPath:
                      type: string
                      description: |
                        The path were the backup is stored. If not set this field is filled up by the operator.

                        When provided will indicate were the backups and WAL files will be stored.

                        The path should be different from the current `.spec.configurations.backupPath` value for the target `SGCluster`
                         in order to avoid mixing WAL files of two distinct major versions of postgres.
                    link:
                      type: boolean
                      description: |
                        If true use hard links instead of copying files to the new cluster. This option is mutually exclusive with `clone`. Defaults to: `false`.
                    clone:
                      type: boolean
                      description: |
                        If true use efficient file cloning (also known as "reflinks" on some systems) instead of copying files to the new cluster.
                        This can result in near-instantaneous copying of the data files, giving the speed advantages of `link` while leaving the old
                         cluster untouched. This option is mutually exclusive with `link`. Defaults to: `false`.

                        File cloning is only supported on some operating systems and file systems. If it is selected but not supported, the pg_upgrade
                         run will error. At present, it is supported on Linux (kernel 4.5 or later) with Btrfs and XFS (on file systems created with
                         reflink support), and on macOS with APFS.
                    check:
                      type: boolean
                      description: |
                        If true does some checks to see if the cluster can perform a major version upgrade without changing any data. Defaults to: `false`.
                restart:
                  type: object
                  description: |
                    Configuration of restart
                  properties:
                    method:
                      type: string
                      description: |
                        The method used to perform the restart operation. Available methods are:

                        * `InPlace`: the in-place method does not require more resources than those that are available.
                          In case only an instance of the StackGres cluster is present this mean the service disruption will
                          last longer so we encourage use the reduced impact restart and especially for a production environment.
                        * `ReducedImpact`: this procedure is the same as the in-place method but require additional
                          resources in order to spawn a new updated replica that will be removed when the procedure completes.
                    onlyPendingRestart:
                      type: boolean
                      description: |
                        By default all Pods are restarted. Setting this option to `true` allow to restart only those Pods which
                         are in pending restart state as detected by the operation. Defaults to: `false`.
                minorVersionUpgrade:
                  type: object
                  description: |
                    Configuration of minor version upgrade
                  properties:
                    postgresVersion:
                      type: string
                      description: |
                        The target postgres version that must have the same major version of the target SGCluster.
                    method:
                      type: string
                      description: |
                        The method used to perform the minor version upgrade operation. Available methods are:

                        * `InPlace`: the in-place method does not require more resources than those that are available.
                          In case only an instance of the StackGres cluster is present this mean the service disruption will
                          last longer so we encourage use the reduced impact restart and especially for a production environment.
                        * `ReducedImpact`: this procedure is the same as the in-place method but require additional
                          resources in order to spawn a new updated replica that will be removed when the procedure completes.
                securityUpgrade:
                  type: object
                  description: |
                    Configuration of security upgrade
                  properties:
                    method:
                      type: string
                      description: |
                        The method used to perform the security upgrade operation. Available methods are:

                        * `InPlace`: the in-place method does not require more resources than those that are available.
                          In case only an instance of the StackGres cluster is present this mean the service disruption will
                          last longer so we encourage use the reduced impact restart and especially for a production environment.
                        * `ReducedImpact`: this procedure is the same as the in-place method but require additional
                          resources in order to spawn a new updated replica that will be removed when the procedure completes.
              required: ["sgCluster", "op"]
            status:
              type: object
              properties:
                conditions:
                  type: array
                  description: |
                    Possible conditions are:

                    * Running: to indicate when the operation is actually running
                    * Completed: to indicate when the operation has completed successfully
                    * Failed: to indicate when the operation has failed
                  items:
                    type: object
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one status to another.
                        type: string
                      message:
                        description: A human-readable message indicating details about the transition.
                        type: string
                      reason:
                        description: The reason for the condition last transition.
                        type: string
                      status:
                        description: Status of the condition, one of `True`, `False` or `Unknown`.
                        type: string
                      type:
                        description: Type of deployment condition.
                        type: string
                opRetries:
                  type: integer
                  description: |
                    The number of retries performed by the operation
                opStarted:
                  type: string
                  description: |
                    The ISO 8601 timestamp of when the operation started running
                benchmark:
                  type: object
                  description: |
                    The results of the benchmark
                  properties:
                    pgbench:
                      type: object
                      description: |
                        The results of the pgbench benchmark
                      properties:
                        scaleFactor:
                          type: number
                          nullable: true
                          description: |
                            The scale factor used to run pgbench (`--scale`).
                        transactionsProcessed:
                          type: integer
                          nullable: true
                          description: |
                            The number of transactions processed.
                        latency:
                          type: object
                          description: |
                            The latency results of the pgbench benchmark
                          properties:
                            average:
                              type: object
                              description: |
                                Average latency of transactions
                              properties:
                                value: 
                                  type: number
                                  nullable: true
                                  description: |
                                    The latency average value
                                unit: 
                                  type: string
                                  nullable: false
                                  description: |
                                    The latency measure unit represented in milliseconds
                            standardDeviation:
                              type: object
                              description: |
                                The latency standard deviation of transactions.
                              properties:
                                value: 
                                  type: number
                                  nullable: true
                                  description: |
                                    The latency standard deviation value
                                unit: 
                                  type: string
                                  nullable: false
                                  description: |
                                    The latency measure unit represented in milliseconds
                        transactionsPerSecond:
                          type: object
                          description: |
                            All the transactions per second results of the pgbench benchmark
                          properties:
                            includingConnectionsEstablishing:
                              type: object
                              description: |
                                Number of Transaction Per Second (tps) including connection establishing.
                              properties:
                                value: 
                                  type: number
                                  nullable: true
                                  description: |
                                    The Transaction Per Second (tps) including connections establishing value
                                unit:
                                  type: string
                                  nullable: false
                                  description: |
                                    Transaction Per Second (tps) measure
                            excludingConnectionsEstablishing:
                              type: object
                              description: |
                                Number of Transaction Per Second (tps) excluding connection establishing.
                              properties:
                                value: 
                                  type: number
                                  nullable: true
                                  description: |
                                    The Transaction Per Second (tps) excluding connections establishing value
                                unit: 
                                  type: string
                                  nullable: false
                                  description: |
                                    Transaction Per Second (tps) measure
                majorVersionUpgrade:
                  type: object
                  description: |
                    The results of a major version upgrade
                  properties:
                    sourcePostgresVersion:
                      type: string
                      description: |
                        The postgres version currently used by the primary instance
                    targetPostgresVersion:
                      type: string
                      description: |
                        The postgres version that the cluster will be upgraded to
                    primaryInstance:
                      type: string
                      description: |
                        The primary instance when the operation started
                    initialInstances:
                      type: array
                      description: |
                        The instances present when the operation started
                      items:
                        type: string
                    pendingToRestartInstances:
                      type: array
                      description: |
                        The instances that are pending to be restarted
                      items:
                        type: string
                    restartedInstances:
                      type: array
                      description: |
                        The instances that have been restarted
                      items:
                        type: string
                    failure:
                      type: string
                      description: |
                        A failure message (when available)
                restart:
                  type: object
                  description: |
                    The results of a restart
                  properties:
                    primaryInstance:
                      type: string
                      description: |
                        The primary instance when the operation started
                    initialInstances:
                      type: array
                      description: |
                        The instances present when the operation started
                      items:
                        type: string
                    pendingToRestartInstances:
                      type: array
                      description: |
                        The instances that are pending to be restarted
                      items:
                        type: string
                    restartedInstances:
                      type: array
                      description: |
                        The instances that have been restarted
                      items:
                        type: string
                    switchoverInitiated:
                      type: string
                      description: |
                        An ISO 8601 date indicating if and when the switchover initiated
                    switchoverFinalized:
                      type: string
                      description: |
                        An ISO 8601 date indicating if and when the switchover finalized
                    failure:
                      type: string
                      description: |
                        A failure message (when available)
                minorVersionUpgrade:
                  type: object
                  description: |
                    The results of a minor version upgrade
                  properties:
                    sourcePostgresVersion:
                      type: string
                      description: |
                        The postgres version currently used by the primary instance
                    targetPostgresVersion:
                      type: string
                      description: |
                        The postgres version that the cluster will be upgraded (or downgraded) to
                    primaryInstance:
                      type: string
                      description: |
                        The primary instance when the operation started
                    initialInstances:
                      type: array
                      description: |
                        The instances present when the operation started
                      items:
                        type: string
                    pendingToRestartInstances:
                      type: array
                      description: |
                        The instances that are pending to be restarted
                      items:
                        type: string
                    restartedInstances:
                      type: array
                      description: |
                        The instances that have been restarted
                      items:
                        type: string
                    switchoverInitiated:
                      type: string
                      description: |
                        An ISO 8601 date indicating if and when the switchover initiated
                    switchoverFinalized:
                      type: string
                      description: |
                        An ISO 8601 date indicating if and when the switchover finalized
                    failure:
                      type: string
                      description: |
                        A failure message (when available)
                securityUpgrade:
                  type: object
                  description: |
                    The results of a security upgrade
                  properties:
                    primaryInstance:
                      type: string
                      description: |
                        The primary instance when the operation started
                    initialInstances:
                      type: array
                      description: |
                        The instances present when the operation started
                      items:
                        type: string
                    pendingToRestartInstances:
                      type: array
                      description: |
                        The instances that are pending to be restarted
                      items:
                        type: string
                    restartedInstances:
                      type: array
                      description: |
                        The instances that have been restarted
                      items:
                        type: string
                    switchoverInitiated:
                      type: string
                      description: |
                        An ISO 8601 date indicating if and when the switchover initiated
                    switchoverFinalized:
                      type: string
                      description: |
                        An ISO 8601 date indicating if and when the switchover finalized
                    failure:
                      type: string
                      description: |
                        A failure message (when available)

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: sgdistributedlogs.stackgres.io
spec:
  group: stackgres.io
  scope: Namespaced
  names:
    kind: SGDistributedLogs
    listKind: SGDistributedLogsList
    plural: sgdistributedlogs
    singular: sgdistributedlogs
    shortNames:
      - sgdil
  versions:
    - name: v1
      served: true
      storage: true
      additionalPrinterColumns:
      - name: volume-size
        type: string
        jsonPath: .spec.persistentVolume.size
      schema:
        openAPIV3Schema:
          type: object
          required: ["metadata", "spec"]
          properties:
            metadata:
              type: object
              properties:
                name:
                  type: string
                  maxLength: 52
                  pattern: "^[a-z]([-a-z0-9]*[a-z0-9])?$"
                  description: |
                    Name of the Distributed Logs cluster. Following [Kubernetes naming conventions](https://github.com/kubernetes/community/blob/master/contributors/design-proposals/architecture/identifiers.md), it must be an rfc1035/rfc1123 subdomain, that is, up to 253 characters consisting of one or more lowercase labels separated by `.`. Where each label is an alphanumeric (a-z, and 0-9) string, with a maximum length of 63 characters, with the `-` character allowed anywhere except the first or last character.

                    A Distributed Logs cluster may store logs for zero or more SGClusters.

                    The name must be unique across all SGCluster, SGShardedCluster and SGDistributedLogs in the same namespace.
            spec:
              type: object
              properties:
                persistentVolume:
                  type: object
                  description: Pod's persistent volume configuration
                  properties:
                    size:
                      type: string
                      pattern: '^[0-9]+(\.[0-9]+)?(Mi|Gi|Ti)$'
                      description: |
                        Size of the PersistentVolume set for the pod of the cluster for distributed logs. This size is specified either in Mebibytes, Gibibytes or Tebibytes (multiples of 2^20, 2^30 or 2^40, respectively).
                    storageClass:
                      type: string
                      description: |
                        Name of an existing StorageClass in the Kubernetes cluster, used to create the PersistentVolumes for the instances of the cluster.
                postgresServices:
                  type: object
                  nullable: true
                  description: Kubernetes [services](https://kubernetes.io/docs/concepts/services-networking/service/) created or managed by StackGres.
                  properties:
                    primary:
                      type: object
                      description: Configuration for the `-primary` service. It provides a stable connection (regardless of primary failures or switchovers) to the read-write Postgres server of the cluster.
                      properties:
                        type:
                          type: string
                          enum: ["ClusterIP", "LoadBalancer", "NodePort"]
                          description: Specifies the type of Kubernetes service(`ClusterIP`, `LoadBalancer`, `NodePort`)
                        annotations:
                          type: object
                          additionalProperties:
                            type: string
                          description: Custom Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/) passed to the `-primary` service.
                        loadBalancerIP:
                          type: string
                          description: Specify loadBalancer IP of Postgres primary service for Distributed Log
                    replicas:
                      type: object
                      description: Configuration for the `-replicas` service. It provides a stable connection (regardless of replica node failures) to any read-only Postgres server of the cluster. Read-only servers are load-balanced via this service.
                      properties:
                        enabled:
                          type: boolean
                          description: Specify if the `-replicas` service should be created or not.
                        type:
                          type: string
                          enum: ["ClusterIP", "LoadBalancer", "NodePort"]
                          description: Specifies the type of Kubernetes service(`ClusterIP`, `LoadBalancer`, `NodePort`).
                        annotations:
                          type: object
                          additionalProperties:
                            type: string
                          description: Custom Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/) passed to the `-replicas` service.                
                        loadBalancerIP:
                          type: string
                          description: Specify loadBalancer IP of Postgres replica service for Distributed Log
                resources:
                  type: object
                  description: Pod custom resources configuration.
                  properties:
                    enableClusterLimitsRequirements:
                      type: boolean
                      description: When enabled resource limits for containers other than the patroni container wil be set just like for patroni contianer as specified in the SGInstanceProfile.
                scheduling:
                  type: object
                  description: Pod custom scheduling and affinity configuration.
                  properties:
                    nodeSelector:
                      type: object
                      additionalProperties:
                        type: string
                      description: |
                        NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
                    tolerations:
                      {"description":"If specified, the pod's tolerations.\n\nSee: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#toleration-v1-core\n","type":"array","items":{"description":"The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>\n\nSee: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#toleration-v1-core\n","properties":{"effect":{"description":"Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.\n\n","type":"string"},"key":{"description":"Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.","type":"string"},"operator":{"description":"Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.\n\n","type":"string"},"tolerationSeconds":{"description":"TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.","format":"int64","type":"integer"},"value":{"description":"Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.","type":"string"}},"type":"object"}}
                    nodeAffinity:
                      {"description":"Node affinity is a group of node affinity scheduling rules.\n\nSee: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#nodeaffinity-v1-core\n","properties":{"preferredDuringSchedulingIgnoredDuringExecution":{"description":"The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.","items":{"description":"An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).","properties":{"preference":{"description":"A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.","properties":{"matchExpressions":{"description":"A list of node selector requirements by node's labels.","items":{"description":"A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.","properties":{"key":{"description":"The label key that the selector applies to.","type":"string"},"operator":{"description":"Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.\n\n","type":"string"},"values":{"description":"An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchFields":{"description":"A list of node selector requirements by node's fields.","items":{"description":"A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.","properties":{"key":{"description":"The label key that the selector applies to.","type":"string"},"operator":{"description":"Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.\n\n","type":"string"},"values":{"description":"An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"}},"type":"object"},"weight":{"description":"Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.","format":"int32","type":"integer"}},"required":["weight","preference"],"type":"object"},"type":"array"},"requiredDuringSchedulingIgnoredDuringExecution":{"description":"A node selector represents the union of the results of one or more label queries over a set of nodes; that is, it represents the OR of the selectors represented by the node selector terms.","properties":{"nodeSelectorTerms":{"description":"Required. A list of node selector terms. The terms are ORed.","items":{"description":"A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.","properties":{"matchExpressions":{"description":"A list of node selector requirements by node's labels.","items":{"description":"A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.","properties":{"key":{"description":"The label key that the selector applies to.","type":"string"},"operator":{"description":"Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.\n\n","type":"string"},"values":{"description":"An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchFields":{"description":"A list of node selector requirements by node's fields.","items":{"description":"A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.","properties":{"key":{"description":"The label key that the selector applies to.","type":"string"},"operator":{"description":"Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.\n\n","type":"string"},"values":{"description":"An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"}},"type":"object"},"type":"array"}},"required":["nodeSelectorTerms"],"type":"object"}},"type":"object"}
                    priorityClassName:
                      type: string
                      description: |
                        Priority indicates the importance of a Pod relative to other Pods. If a Pod cannot be scheduled, the scheduler tries to preempt (evict) lower priority Pods to make scheduling of the pending Pod possible.
                    podAffinity:
                      {"description":"Pod affinity is a group of inter pod affinity scheduling rules.\n\nSee: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#podaffinity-v1-core\n","properties":{"preferredDuringSchedulingIgnoredDuringExecution":{"description":"The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.","items":{"description":"The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)","properties":{"podAffinityTerm":{"description":"Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running","properties":{"labelSelector":{"description":"A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object"},"namespaceSelector":{"description":"A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object"},"namespaces":{"description":"namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \"this pod's namespace\".","items":{"type":"string"},"type":"array"},"topologyKey":{"description":"This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.","type":"string"}},"required":["topologyKey"],"type":"object"},"weight":{"description":"weight associated with matching the corresponding podAffinityTerm, in the range 1-100.","format":"int32","type":"integer"}},"required":["weight","podAffinityTerm"],"type":"object"},"type":"array"},"requiredDuringSchedulingIgnoredDuringExecution":{"description":"If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.","items":{"description":"Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running","properties":{"labelSelector":{"description":"A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object"},"namespaceSelector":{"description":"A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object"},"namespaces":{"description":"namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \"this pod's namespace\".","items":{"type":"string"},"type":"array"},"topologyKey":{"description":"This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.","type":"string"}},"required":["topologyKey"],"type":"object"},"type":"array"}},"type":"object"}
                    podAntiAffinity:
                      {"description":"Pod anti affinity is a group of inter pod anti affinity scheduling rules.\n\nSee: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#podantiaffinity-v1-core\n","properties":{"preferredDuringSchedulingIgnoredDuringExecution":{"description":"The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.","items":{"description":"The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)","properties":{"podAffinityTerm":{"description":"Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running","properties":{"labelSelector":{"description":"A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object"},"namespaceSelector":{"description":"A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object"},"namespaces":{"description":"namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \"this pod's namespace\".","items":{"type":"string"},"type":"array"},"topologyKey":{"description":"This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.","type":"string"}},"required":["topologyKey"],"type":"object"},"weight":{"description":"weight associated with matching the corresponding podAffinityTerm, in the range 1-100.","format":"int32","type":"integer"}},"required":["weight","podAffinityTerm"],"type":"object"},"type":"array"},"requiredDuringSchedulingIgnoredDuringExecution":{"description":"If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.","items":{"description":"Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running","properties":{"labelSelector":{"description":"A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object"},"namespaceSelector":{"description":"A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object"},"namespaces":{"description":"namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \"this pod's namespace\".","items":{"type":"string"},"type":"array"},"topologyKey":{"description":"This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.","type":"string"}},"required":["topologyKey"],"type":"object"},"type":"array"}},"type":"object"}
                sgInstanceProfile:
                  type: string
                  description: |
                    Name of the [SGInstanceProfile](https://stackgres.io/doc/latest/04-postgres-cluster-management/03-resource-profiles/). A SGInstanceProfile defines CPU and memory limits. Must exist before creating a distributed logs. When no profile is set, a default (currently: 1 core, 2 GiB RAM) one is used.
                configurations:
                  type: object
                  description: |
                    Cluster custom configurations.
                  properties:
                    sgPostgresConfig:
                      type: string
                      description: |
                        Name of the [SGPostgresConfig](https://stackgres.io/doc/latest/reference/crd/sgpgconfig) used for the distributed logs. It must exist. When not set, a default Postgres config, for the major version selected, is used.
                metadata:
                  type: object
                  description: Metadata information from cluster created resources.
                  properties:
                    annotations:
                      type: object
                      description: Custom Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/) to be passed to resources created and managed by StackGres.
                      properties:
                        allResources:
                          type: object
                          description: Annotations to attach to any resource created or managed by StackGres.
                          additionalProperties:
                            type: string
                        pods:
                          type: object
                          description: Annotations to attach to pods created or managed by StackGres.
                          additionalProperties:
                            type: string
                        services:
                          type: object
                          description: Annotations to attach to services created or managed by StackGres.
                          additionalProperties:
                            type: string
                toInstallPostgresExtensions:
                  type: array
                  description: The list of Postgres extensions to install.
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        description: The name of the extension to install.
                      publisher:
                        type: string
                        description: The id of the publisher of the extension to install.
                      version:
                        type: string
                        description: The version of the extension to install.
                      repository:
                        type: string
                        description: The repository base URL from where the extension will be installed from.
                      postgresVersion:
                        type: string
                        description: The postgres major version of the extension to install.
                      build:
                        type: string
                        description: The build version of the extension to install.
                      extraMounts:
                        type: array
                        description: The extra mounts of the extension to install.
                        items:
                          type: string
                          description: The extra mount of the installed extension.
                    required: ["name", "publisher", "version", "repository", "postgresVersion"]
                nonProductionOptions:
                  type: object
                  properties:
                    disableClusterPodAntiAffinity:
                      type: boolean
                      description: |
                        It is a best practice, on non-containerized environments, when running production workloads, to run each database server on a different server (virtual or physical), i.e., not to co-locate more than one database server per host.

                        The same best practice applies to databases on containers. By default, StackGres will not allow to run more than one StackGres or Distributed Logs pod on a given Kubernetes node. If set to `true` it will allow more than one StackGres pod per node.
                    disablePatroniResourceRequirements:
                      type: boolean
                      description: |
                        It is a best practice, on containerized environments, when running production workloads, to enforce container's resources requirements.

                        The same best practice applies to databases on containers. By default, StackGres will configure resource requirements for patroni container. Set this property to true to prevent StackGres from setting patroni container's resources requirement.
                    disableClusterResourceRequirements:
                      type: boolean
                      description: |
                        It is a best practice, on containerized environments, when running production workloads, to enforce container's resources requirements.

                        By default, StackGres will configure resource requirements for all the containers. Set this property to true to prevent StackGres from setting container's resources requirements (except for patroni container, see `disablePatroniResourceRequirements`).
                    enableSetPatroniCpuRequests:
                      type: boolean
                      description: |
                        On containerized environments, when running production workloads, enforcing container's cpu requirements request to be equals to the limit allow to achieve the highest level of performance. Doing so, reduces the chances of leaving
                         the workload with less cpu than it requires. It also allow to set [static CPU management policy](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/#static-policy) that allows to guarantee a pod the usage exclusive CPUs on the node.

                        By default, StackGres will configure cpu requirements to have the same limit and request for the patroni container. Set this property to true to prevent StackGres from setting patroni container's cpu requirements request equals to the limit
                         when `.spec.requests.cpu` is configured in the referenced `SGInstanceProfile`.
                    enableSetClusterCpuRequests:
                      type: boolean
                      description: |
                        On containerized environments, when running production workloads, enforcing container's cpu requirements request to be equals to the limit allow to achieve the highest level of performance. Doing so, reduces the chances of leaving
                         the workload with less cpu than it requires. It also allow to set [static CPU management policy](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/#static-policy) that allows to guarantee a pod the usage exclusive CPUs on the node.

                        By default, StackGres will configure cpu requirements to have the same limit and request for all the containers. Set this property to true to prevent StackGres from setting container's cpu requirements request equals to the limit (except for patroni container, see `enablePatroniCpuRequests`)
                         when `.spec.requests.containers.<container name>.cpu` `.spec.requests.initContainers.<container name>.cpu` is configured in the referenced `SGInstanceProfile`.
                    enableSetPatroniMemoryRequests:
                      type: boolean
                      description: |
                        On containerized environments, when running production workloads, enforcing container's memory requirements request to be equals to the limit allow to achieve the highest level of performance. Doing so, reduces the chances of leaving
                         the workload with less memory than it requires.

                        By default, StackGres will configure memory requirements to have the same limit and request for the patroni container. Set this property to true to prevent StackGres from setting patroni container's memory requirements request equals to the limit
                         when `.spec.requests.memory` is configured in the referenced `SGInstanceProfile`.
                    enableSetClusterMemoryRequests:
                      type: boolean
                      description: |
                        On containerized environments, when running production workloads, enforcing container's memory requirements request to be equals to the limit allow to achieve the highest level of performance. Doing so, reduces the chances of leaving
                         the workload with less memory than it requires.

                        By default, StackGres will configure memory requirements to have the same limit and request for all the containers. Set this property to true to prevent StackGres from setting container's memory requirements request equals to the limit (except for patroni container, see `enablePatroniCpuRequests`)
                         when `.spec.requests.containers.<container name>.memory` `.spec.requests.initContainers.<container name>.memory` is configured in the referenced `SGInstanceProfile`.
              required: ["persistentVolume"]
            status:
              type: object
              properties:
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one status to another.
                        type: string
                      message:
                        description: A human readable message indicating details about the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: Type of deployment condition.
                        type: string
                podStatuses:
                  type: array
                  description: The list of pod statuses.
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        description: The name of the pod.
                      primary:
                        type: boolean
                        description: Indicates if the pod is the elected primary
                      pendingRestart:
                        type: boolean
                        description: Indicates if the pod requires restart
                      installedPostgresExtensions:
                        type: array
                        description: The list of extensions currently installed.
                        items:
                          type: object
                          properties:
                            name:
                              type: string
                              description: The name of the installed extension.
                            publisher:
                              type: string
                              description: The id of the publisher of the installed extension.
                            version:
                              type: string
                              description: The version of the installed extension.
                            repository:
                              type: string
                              description: The repository base URL from where the extension was installed.
                            postgresVersion:
                              type: string
                              description: The postgres major version of the installed extension.
                            build:
                              type: string
                              description: The build version of the installed extension.
                          required: ["name", "publisher", "version", "repository", "postgresVersion"]
                    required: ["name"]
                databases:
                  type: array
                  description: The list of database status
                  items:
                    type: object
                    description: A database status
                    properties:
                      name:
                        type: string
                        description: The database name that has been created
                      retention:
                        type: string
                        description: The retention window that has been applied to tables
                connectedClusters:
                  type: array
                  description: The list of connected `sgclusters`
                  items:
                    type: object
                    description: A connected `sgcluster`
                    properties:
                      namespace:
                        type: string
                        description: The `sgcluster` namespace
                      name:
                        type: string
                        description: The `sgcluster` name
                      config:
                        type: object
                        description: The configuration for `sgdistributedlgos` of this `sgcluster`
                        properties:
                          sgDistributedLogs:
                            type: string
                            description: The `sgdistributedlogs` to which this `sgcluster` is connected to
                          retention:
                            type: string
                            description: The retention window that has been applied to tables
                fluentdConfigHash:
                  type: string
                  description: The hash of the configuration file that is used by fluentd
                arch:
                  type: string
                  description: The architecture on which the cluster has been initialized.
                os:
                  type: string
                  description: The operative system on which the cluster has been initialized.
                labelPrefix:
                  type: string
                  description: The custom prefix that is prepended to all labels.

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: sginstanceprofiles.stackgres.io
spec:
  group: stackgres.io
  scope: Namespaced
  names:
    kind: SGInstanceProfile
    listKind: SGInstanceProfileList
    plural: sginstanceprofiles
    singular: sginstanceprofile
    shortNames:
      - sginp
  versions:
    - name: v1
      served: true
      storage: true
      additionalPrinterColumns:
      - name: cpu
        type: string
        jsonPath: .spec.cpu
      - name: memory
        type: string
        jsonPath: .spec.memory
      schema:
        openAPIV3Schema:
          required: ["metadata", "spec"]
          type: object
          properties:
            metadata:
              type: object
              properties:
                name:
                  type: string
                  description: |
                    Name of the Instance Profile. An instance profile represents a "kind" of
                     server (CPU and RAM) where you may run StackGres Pods, classified by a given name.
                     The profile may be referenced by zero or more SGClusters, and if so it would
                     be referenced by its name. Following [Kubernetes naming conventions](https://github.com/kubernetes/community/blob/master/contributors/design-proposals/architecture/identifiers.md), it must be an rfc1035/rfc1123 subdomain, that is, up to 253 characters consisting of one or more lowercase labels separated by `.`. Where each label is an alphanumeric (a-z, and 0-9) string, with a maximum length of 63 characters, with the `-` character allowed anywhere except the first or last character.

                    The name must be unique across all instance profiles in the same namespace.
            spec:
              type: object
              properties:
                cpu:
                  type: string
                  pattern: '^[1-9][0-9]*[m]?$'
                  description: |
                    CPU(s) (cores) used for every instance of a SGCluster. The suffix `m`
                     specifies millicpus (where 1000m is equals to 1).

                    The number of cores set is assigned to the patroni container (that runs both Patroni and PostgreSQL).

                    A minimum of 2 cores is recommended.
                memory:
                  type: string
                  pattern: '^[0-9]+(\.[0-9]+)?(Mi|Gi)$'
                  description: |
                    RAM allocated to every instance of a SGCluster. The suffix `Mi` or `Gi`
                     specifies Mebibytes or Gibibytes, respectively.

                    The amount of RAM set is assigned to the patroni container (that runs both Patroni and PostgreSQL).

                    A minimum of 2-4Gi is recommended.
                hugePages:
                  type: object
                  description: |
                    RAM allocated for huge pages
                  properties:
                    hugepages-2Mi:
                      type: string
                      pattern: '^[0-9]+(\.[0-9]+)?(Mi|Gi)$'
                      description: |
                        RAM allocated for huge pages with a size of 2Mi. The suffix `Mi` or `Gi`
                         specifies Mebibytes or Gibibytes, respectively.

                        By default the amount of RAM set is assigned to patroni container
                         (that runs both Patroni and PostgreSQL).
                    hugepages-1Gi:
                      type: string
                      pattern: '^[0-9]+(\.[0-9]+)?(Mi|Gi)$'
                      description: |
                        RAM allocated for huge pages with a size of 1Gi. The suffix `Mi` or `Gi`
                         specifies Mebibytes or Gibibytes, respectively.

                        By default the amount of RAM set is assigned to patroni container
                         (that runs both Patroni and PostgreSQL).
                containers:
                  type: object
                  description: |
                    The CPU(s) (cores) and RAM assigned to containers other than patroni container.

                    This section, if left empty, will be filled automatically by the operator with
                     some defaults that can be proportional to the resources assigned to patroni
                     container (except for the huge pages that are always left empty).
                  additionalProperties:
                    type: object
                    properties:
                      cpu:
                        type: string
                        pattern: '^[1-9][0-9]*[m]?$'
                        description: |
                          CPU(s) (cores) used for the specified Pod container. The suffix `m`
                           specifies millicpus (where 1000m is equals to 1).
                      memory:
                        type: string
                        pattern: '^[0-9]+(\.[0-9]+)?(Mi|Gi)$'
                        description: |
                          RAM allocated to the specified Pod container. The suffix `Mi` or `Gi`
                           specifies Mebibytes or Gibibytes, respectively.
                      hugePages:
                        type: object
                        description: |
                          RAM allocated for huge pages
                        properties:
                          hugepages-2Mi:
                            type: string
                            pattern: '^[0-9]+(\.[0-9]+)?(Mi|Gi)$'
                            description: |
                              RAM allocated for huge pages with a size of 2Mi. The suffix `Mi`
                               or `Gi` specifies Mebibytes or Gibibytes, respectively.

                              The amount of RAM is assigned to the specified container.
                          hugepages-1Gi:
                            type: string
                            pattern: '^[0-9]+(\.[0-9]+)?(Mi|Gi)$'
                            description: |
                              RAM allocated for huge pages with a size of 1Gi. The suffix `Mi`
                               or `Gi` specifies Mebibytes or Gibibytes, respectively.

                              The amount of RAM is assigned to the specified container.
                    required: ["cpu", "memory"]
                initContainers:
                  type: object
                  description: The CPU(s) (cores) and RAM assigned to init containers.
                  additionalProperties:
                    type: object
                    properties:
                      cpu:
                        type: string
                        pattern: '^[1-9][0-9]*[m]?$'
                        description: |
                          CPU(s) (cores) used for the specified Pod init container. The suffix
                           `m` specifies millicpus (where 1000m is equals to 1).
                      memory:
                        type: string
                        pattern: '^[0-9]+(\.[0-9]+)?(Mi|Gi)$'
                        description: |
                          RAM allocated to the specified Pod init container. The suffix `Mi`
                           or `Gi` specifies Mebibytes or Gibibytes, respectively.
                      hugePages:
                        type: object
                        description: |
                          RAM allocated for huge pages
                        properties:
                          hugepages-2Mi:
                            type: string
                            pattern: '^[0-9]+(\.[0-9]+)?(Mi|Gi)$'
                            description: |
                              RAM allocated for huge pages with a size of 2Mi. The suffix `Mi`
                               or `Gi` specifies Mebibytes or Gibibytes, respectively.

                              The amount of RAM is assigned to the specified init container.
                          hugepages-1Gi:
                            type: string
                            pattern: '^[0-9]+(\.[0-9]+)?(Mi|Gi)$'
                            description: |
                              RAM allocated for huge pages with a size of 1Gi. The suffix `Mi` or `Gi`
                               specifies Mebibytes or Gibibytes, respectively.

                              The amount of RAM is assigned to the specified init container.
                    required: ["cpu", "memory"]
                requests:
                  type: object
                  description: |
                    On containerized environments, when running production workloads, enforcing container's resources requirements request to be equals to the limits allow to achieve the highest level of performance. Doing so, reduces the chances of leaving
                     the workload with less resources than it requires. It also allow to set [static CPU management policy](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/#static-policy) that allows to guarantee a pod the usage exclusive CPUs on the node.

                    There are cases where you may need to set resource requirement request to a different value than limit. This section allow to do so but requires to enable such feature in the `SGCluster` and `SGDistributedLogs` (see `.spec.nonProductionOptions` section for each of those custom resources).
                  properties:
                    cpu:
                      type: string
                      pattern: '^[1-9][0-9]*[m]?$'
                      description: |
                        CPU(s) (cores) used for every instance of a SGCluster. The suffix `m`
                         specifies millicpus (where 1000m is equals to 1).

                        The number of cores set is assigned to the patroni container (that runs both Patroni and PostgreSQL).
                    memory:
                      type: string
                      pattern: '^[0-9]+(\.[0-9]+)?(Mi|Gi)$'
                      description: |
                        RAM allocated to every instance of a SGCluster. The suffix `Mi` or `Gi`
                         specifies Mebibytes or Gibibytes, respectively.

                        The amount of RAM set is assigned to the patroni container (that runs both Patroni and PostgreSQL).
                    containers:
                      type: object
                      description: |
                        The CPU(s) (cores) and RAM assigned to containers other than patroni container.
                      additionalProperties:
                        type: object
                        properties:
                          cpu:
                            type: string
                            pattern: '^[1-9][0-9]*[m]?$'
                            description: |
                              CPU(s) (cores) used for the specified Pod container. The suffix `m`
                               specifies millicpus (where 1000m is equals to 1).
                          memory:
                            type: string
                            pattern: '^[0-9]+(\.[0-9]+)?(Mi|Gi)$'
                            description: |
                              RAM allocated to the specified Pod container. The suffix `Mi` or `Gi`
                               specifies Mebibytes or Gibibytes, respectively.
                    initContainers:
                      type: object
                      description: The CPU(s) (cores) and RAM assigned to init containers.
                      additionalProperties:
                        type: object
                        properties:
                          cpu:
                            type: string
                            pattern: '^[1-9][0-9]*[m]?$'
                            description: |
                              CPU(s) (cores) used for the specified Pod init container. The suffix
                               `m` specifies millicpus (where 1000m is equals to 1).
                          memory:
                            type: string
                            pattern: '^[0-9]+(\.[0-9]+)?(Mi|Gi)$'
                            description: |
                              RAM allocated to the specified Pod init container. The suffix `Mi`
                               or `Gi` specifies Mebibytes or Gibibytes, respectively.
              required: ["cpu", "memory"]

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: sgobjectstorages.stackgres.io
spec:
  group: stackgres.io
  scope: Namespaced
  names:
    kind: SGObjectStorage
    listKind: SGObjectStorageList
    plural: sgobjectstorages
    singular: sgobjectstorage
    shortNames:
      - sgobjs
  versions:
    - name: v1beta1
      served: true
      storage: true
      additionalPrinterColumns:
      - name: type
        type: string
        jsonPath: .spec.type
      schema:
        openAPIV3Schema:
          type: object
          required: ["metadata", "spec"]
          properties:
            metadata:
              type: object
              properties:
                name:
                  type: string
                  description: |
                    Name of the Object Storage configuration.
                    The name must be unique across all object storage configurations in the same namespace.
            spec:
              type: object
              description: |
                Object Storage configuration
              properties:
                type:
                  type: string
                  enum: ["s3", "s3Compatible", "gcs", "azureBlob"]
                  description: |
                    Determine the type of object storage used for storing the base backups and WAL segments.
                          Possible values:
                          *  `s3`: Amazon Web Services S3 (Simple Storage Service).
                          *  `s3Compatible`: non-AWS services that implement a compatibility API with AWS S3.
                          *  `gcs`: Google Cloud Storage.
                          *  `azureBlob`: Microsoft Azure Blob Storage.
                s3:
                  type: object
                  description: |
                    Amazon Web Services S3 configuration.
                  properties:
                    bucket:
                      type: string
                      pattern: '^((s3|https?)://)?[^/]+(/[^/]*)*$'
                      description: |
                        AWS S3 bucket name.
                    region:
                      type: string
                      description: |
                        The AWS S3 region. The Region may be detected using s3:GetBucketLocation, but if you wish to avoid giving permissions to this API call or forbid it from the applicable IAM policy, you must then specify this property.
                    storageClass:
                      type: string
                      description: |
                        The [Amazon S3 Storage Class](https://aws.amazon.com/s3/storage-classes/) to use for the backup object storage. By default, the `STANDARD` storage class is used. Other supported values include `STANDARD_IA` for Infrequent Access and `REDUCED_REDUNDANCY`.
                    awsCredentials:
                      type: object
                      description: |
                        The credentials to access AWS S3 for writing and reading.
                      properties:
                        secretKeySelectors:
                          type: object
                          description: |
                            Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core)(s) to reference the Secrets that contain the information about the `awsCredentials`. Note that you may use the same or different Secrets for the `accessKeyId` and the `secretAccessKey`. In the former case, the `keys` that identify each must be, obviously, different.
                          properties:
                            accessKeyId:
                              type: object
                              description: |
                                AWS [access key ID](https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys). For example, `AKIAIOSFODNN7EXAMPLE`.
                              properties:
                                key:
                                  type: string
                                  description: |
                                    The key of the secret to select from. Must be a valid secret key.
                                name:
                                  type: string
                                  description: |
                                    Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                              required: ["key", "name"]
                            secretAccessKey:
                              type: object
                              description: |
                                AWS [secret access key](https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys). For example, `wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY`.
                              properties:
                                key:
                                  type: string
                                  description: |
                                    The key of the secret to select from. Must be a valid secret key.
                                name:
                                  type: string
                                  description: |
                                    Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                              required: ["key", "name"]
                          required: ["accessKeyId", "secretAccessKey"]
                      required: ["secretKeySelectors"]
                  required: ["bucket", "awsCredentials"]
                s3Compatible:
                  type: object
                  description: "AWS S3-Compatible API configuration"
                  properties:
                    bucket:
                      type: string
                      pattern: '^((s3|https?)://)?[^/]+(/[^/]*)*$'
                      description: |
                        Bucket name.
                    enablePathStyleAddressing:
                      type: boolean
                      description: |
                        Enable path-style addressing (i.e. `http://s3.amazonaws.com/BUCKET/KEY`) when connecting to an S3-compatible service that lacks support for sub-domain style bucket URLs (i.e. `http://BUCKET.s3.amazonaws.com/KEY`).
                        
                        Defaults to false.
                    endpoint:
                      type: string
                      description: |
                        Overrides the default url to connect to an S3-compatible service.
                        For example: `http://s3-like-service:9000`.
                    region:
                      type: string
                      description: |
                        The AWS S3 region. The Region may be detected using s3:GetBucketLocation, but if you wish to avoid giving permissions to this API call or forbid it from the applicable IAM policy, you must then specify this property.
                    storageClass:
                      type: string
                      description: |
                        The [Amazon S3 Storage Class](https://aws.amazon.com/s3/storage-classes/) to use for the backup object storage. By default, the `STANDARD` storage class is used. Other supported values include `STANDARD_IA` for Infrequent Access and `REDUCED_REDUNDANCY`.
                    awsCredentials:
                      type: object
                      description: |
                        The credentials to access AWS S3 for writing and reading.
                      properties:
                        secretKeySelectors:
                          type: object
                          description: |
                            Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core)(s) to reference the Secret(s) that contain the information about the `awsCredentials`. Note that you may use the same or different Secrets for the `accessKeyId` and the `secretAccessKey`. In the former case, the `keys` that identify each must be, obviously, different.
                          properties:
                            accessKeyId:
                              type: object
                              description: |
                                AWS [access key ID](https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys). For example, `AKIAIOSFODNN7EXAMPLE`.
                              properties:
                                key:
                                  type: string
                                  description: |
                                    The key of the secret to select from. Must be a valid secret key.
                                name:
                                  type: string
                                  description: |
                                    Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                              required: ["key", "name"]
                            secretAccessKey:
                              type: object
                              description: |
                                AWS [secret access key](https://docs.aws.amazon.com/general/latest/gr/aws-sec-cred-types.html#access-keys-and-secret-access-keys). For example, `wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY`.
                              properties:
                                key:
                                  type: string
                                  description: |
                                    The key of the secret to select from. Must be a valid secret key.
                                name:
                                  type: string
                                  description: |
                                    Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                              required: ["key", "name"]
                            caCertificate:
                              type: object
                              description: |
                                CA Certificate file to be used when connecting to the S3 Compatible Service.
                              properties:
                                key:
                                  type: string
                                  description: |
                                    The key of the secret to select from. Must be a valid secret key.
                                name:
                                  type: string
                                  description: |
                                    Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                              required: ["key", "name"]
                          required: ["accessKeyId", "secretAccessKey"]
                      required: ["secretKeySelectors"]
                  required: ["bucket", "awsCredentials"]
                gcs:
                  type: object
                  description: |
                    Google Cloud Storage configuration.
                  properties:
                    bucket:
                      type: string
                      pattern: "^(gs://)?[^/]+(/[^/]*)*$"
                      description: |
                        GCS bucket name.
                    gcpCredentials:
                      type: object
                      description: |
                        The credentials to access GCS for writing and reading.
                      properties:
                        fetchCredentialsFromMetadataService:
                          type: boolean
                          description: |
                            If true, the credentials will be fetched from the GCE/GKE metadata service and the field `secretKeySelectors` have to be set to null or omitted.
                            
                            This is useful when running StackGres inside a GKE cluster using [Workload Identity](https://cloud.google.com/kubernetes-engine/docs/how-to/workload-identity).
                        secretKeySelectors:
                          type: object
                          description: |
                            A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) to reference the Secrets that contain the information about the Service Account to access GCS.
                          properties:
                            serviceAccountJSON:
                              type: object
                              description: |
                                A service account key from GCP. In JSON format, as downloaded from the GCP Console.
                              properties:
                                key:
                                  type: string
                                  description: |
                                    The key of the secret to select from. Must be a valid secret key.
                                name:
                                  type: string
                                  description: |
                                    Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                              required: [ "key", "name" ]
                          required: [ "serviceAccountJSON" ]
                  required: [ "bucket", "gcpCredentials" ]
                azureBlob:
                  type: object
                  description: |
                    Azure Blob Storage configuration.
                  properties:
                    bucket:
                      type: string
                      pattern: "^(azure://)?[^/]+(/[^/]*)*$"
                      description: |
                        Azure Blob Storage bucket name.
                    azureCredentials:
                      type: object
                      description: |
                        The credentials to access Azure Blob Storage for writing and reading.
                      properties:
                        secretKeySelectors:
                          type: object
                          description: |
                            Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core)(s) to reference the Secret(s) that contain the information about the `azureCredentials`. . Note that you may use the same or different Secrets for the `storageAccount` and the `accessKey`. In the former case, the `keys` that identify each must be, obviously, different.
                          properties:
                            storageAccount:
                              type: object
                              description: |
                                The [Storage Account](https://docs.microsoft.com/en-us/azure/storage/common/storage-account-overview?toc=/azure/storage/blobs/toc.json) that contains the Blob bucket to be used.
                              properties:
                                key:
                                  type: string
                                  description: |
                                    The key of the secret to select from. Must be a valid secret key.
                                name:
                                  type: string
                                  description: |
                                    Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                              required: [ "key", "name" ]
                            accessKey:
                              type: object
                              description: |
                                The [storage account access key](https://docs.microsoft.com/en-us/azure/storage/common/storage-account-keys-manage?tabs=azure-portal).
                              properties:
                                key:
                                  type: string
                                  description: |
                                    The key of the secret to select from. Must be a valid secret key.
                                name:
                                  type: string
                                  description: |
                                    Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                              required: [ "key", "name" ]
                          required: [ "storageAccount", "accessKey" ]
                  required: [ "bucket", "azureCredentials" ]
              required: [ "type" ]

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: sgpoolconfigs.stackgres.io
spec:
  group: stackgres.io
  scope: Namespaced
  names:
    kind: SGPoolingConfig
    listKind: SGPoolingConfigList
    plural: sgpoolconfigs
    singular: sgpoolconfig
    shortNames:
      - sgpoc
  versions:
    - name: v1
      served: true
      storage: true
      schema:
        openAPIV3Schema:
          type: object
          required: ["metadata", "spec"]
          properties:
            metadata:
              type: object
              properties:
                name:
                  type: string
                  description: |
                    Name of the Connection Pooling Configuration. The configuration may be referenced by zero or more SGClusters, and if so it would be referenced by its name. Following [Kubernetes naming conventions](https://github.com/kubernetes/community/blob/master/contributors/design-proposals/architecture/identifiers.md), it must be an rfc1035/rfc1123 subdomain, that is, up to 253 characters consisting of one or more lowercase labels separated by `.`. Where each label is an alphanumeric (a-z, and 0-9) string, with a maximum length of 63 characters, with the `-` character allowed anywhere except the first or last character.

                    The name must be unique across all Connection Pooling configurations in the same namespace.
            spec:
              type: object
              properties:
                pgBouncer:
                  type: object
                  description: |
                    Connection pooling configuration based on PgBouncer.
                  properties:
                    pgbouncer.ini:
                      type: object
                      description: |
                        The `pgbouncer.ini` parameters the configuration contains, represented as an object where the keys are valid names for the `pgbouncer.ini` configuration file parameters.

                        Check [pgbouncer configuration](https://www.pgbouncer.org/config.html#generic-settings) for more information about supported parameters.
                      properties:
                        pgbouncer:
                          type: object
                          additionalProperties: true
                          description: |
                            The `pgbouncer.ini` (Section [pgbouncer]) parameters the configuration contains, represented as an object where the keys are valid names for the `pgbouncer.ini` configuration file parameters.

                            Check [pgbouncer configuration](https://www.pgbouncer.org/config.html#generic-settings) for more information about supported parameters
                        databases:
                          type: object
                          additionalProperties:
                            type: object
                            additionalProperties: true
                          description: |
                            The `pgbouncer.ini` (Section [databases]) parameters the configuration contains, represented as an object where the keys are valid names for the `pgbouncer.ini` configuration file parameters.

                            Check [pgbouncer configuration](https://www.pgbouncer.org/config.html#section-databases) for more information about supported parameters.
                        users:
                          type: object
                          additionalProperties:
                            type: object
                            additionalProperties: true
                          description: |
                            The `pgbouncer.ini` (Section [users]) parameters the configuration contains, represented as an object where the keys are valid names for the `pgbouncer.ini` configuration file parameters.

                            Check [pgbouncer configuration](https://www.pgbouncer.org/config.html#section-users) for more information about supported parameters.
            status:
              type: object
              properties:
                pgBouncer:
                  type: object
                  description: |
                    Connection pooling configuration status based on PgBouncer.
                  properties:
                    defaultParameters:
                      type: object
                      additionalProperties:
                        type: string
                      description: |
                        The `pgbouncer.ini` default parameters parameters which are used if not set.
                  required: ["defaultParameters"]

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: sgpgconfigs.stackgres.io
spec:
  group: stackgres.io
  scope: Namespaced
  names:
    kind: SGPostgresConfig
    listKind: SGPostgresConfigList
    plural: sgpgconfigs
    singular: sgpgconfig
    shortNames:
      - sgpgc
  versions:
    - name: v1
      served: true
      storage: true
      additionalPrinterColumns:
      - name: version
        type: string
        jsonPath: .spec.postgresVersion
      schema:
        openAPIV3Schema:
          type: object
          required: ["metadata", "spec"]
          properties:
            metadata:
              type: object
              properties:
                name:
                  type: string
                  description: |
                    Name of the Postgres Configuration. The configuration may be referenced by zero or more SGClusters, and if so it would be referenced by its name. Following [Kubernetes naming conventions](https://github.com/kubernetes/community/blob/master/contributors/design-proposals/architecture/identifiers.md), it must be an rfc1035/rfc1123 subdomain, that is, up to 253 characters consisting of one or more lowercase labels separated by `.`. Where each label is an alphanumeric (a-z, and 0-9) string, with a maximum length of 63 characters, with the `-` character allowed anywhere except the first or last character.

                    The name must be unique across all Postgres configurations in the same namespace.
            spec:
              type: object
              properties:
                postgresVersion:
                  type: string
                  description: |
                    The **major** Postgres version the configuration is for. Postgres major versions contain one number starting with version 10 (`10`, `11`, `12`, etc), and two numbers separated by a dot for previous versions (`9.6`, `9.5`, etc).

                    Note that Postgres maintains full compatibility across minor versions, and hence a configuration for a given major version will work for any minor version of that same major version.

                    Check [StackGres component versions](https://stackgres.io/doc/latest/intro/versions) to see the Postgres versions supported by this version of StackGres.
                postgresql.conf:
                  type: object
                  additionalProperties:
                    type: string
                  description: |
                    The `postgresql.conf` parameters the configuration contains, represented as an object where the keys are valid names for the `postgresql.conf` configuration file parameters of the given `postgresVersion`. You may check [postgresqlco.nf](https://postgresqlco.nf) as a reference on how to tune and find the valid parameters for a given major version.
              required: ["postgresVersion", "postgresql.conf"]
            status:
              type: object
              properties:
                defaultParameters:
                  type: object
                  additionalProperties:
                    type: string
                  description: |
                    The `postgresql.conf` default parameters which are used if not set.
              required: ["defaultParameters"]

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: sgscripts.stackgres.io
spec:
  group: stackgres.io
  scope: Namespaced
  names:
    kind: SGScript
    listKind: SGScriptList
    plural: sgscripts
    singular: sgscript
    shortNames:
      - sgscr
  versions:
    - name: v1
      served: true
      storage: true
      additionalPrinterColumns:
      - name: scripts
        type: string
        jsonPath: .spec.scripts.length
      schema:
        openAPIV3Schema:
          type: object
          required: ["metadata", "spec"]
          properties:
            metadata:
              type: object
              properties:
                name:
                  type: string
                  maxLength: 52
                  pattern: "^[a-z]([-a-z0-9]*[a-z0-9])?$"
                  description: |
                    Name of the StackGres script. Following [Kubernetes naming conventions](https://github.com/kubernetes/community/blob/master/contributors/design-proposals/architecture/identifiers.md), it must be an rfc1035/rfc1123 subdomain, that is, up to 253 characters consisting of one or more lowercase labels separated by `.`. Where each label is an alphanumeric (a-z, and 0-9) string, with a maximum length of 63 characters, with the `-` character allowed anywhere except the first or last character.

                    The name must be unique across all StackGres scripts in the same namespace. The full script name includes the namespace in which the script is created.
            spec:
              type: object
              properties:
                managedVersions:
                  type: boolean
                  description: |
                    If `true` the versions will be managed by the operator automatically. The user will still be able to update them if needed. `true` by default.
                continueOnError:
                  type: boolean
                  description: |
                    If `true`, when any script entry fail will not prevent subsequent script entries from being executed. `false` by default.
                scripts:
                  type: array
                  description: |
                    A list of SQL scripts.
                  items:
                    type: object
                    description: |
                      Scripts are executed in auto-commit mode with the user `postgres` in the specified database (or in database `postgres` if not specified).

                      Fields `script` and `scriptFrom` are mutually exclusive and only one of them is required.
                    properties:
                      name:
                        type: string
                        description: |
                          Name of the script. Must be unique across this SGScript.
                      id:
                        type: integer
                        description: |
                          The id is immutable and must be unique across all the script entries. It is replaced by the operator and is used to identify the script for the whole life of the `SGScript` object.
                      version:
                        type: integer
                        description: |
                          Version of the script. It will allow to identify if this script entry has been changed.
                      database:
                        type: string
                        description: |
                          Database where the script is executed. Defaults to the `postgres` database, if not specified.
                      user:
                        type: string
                        description: |
                          User that will execute the script. Defaults to the `postgres` user.
                      wrapInTransaction:
                        type: string
                        description: |
                          Wrap the script in a transaction using the specified transaction mode:

                          * `read-committed`: The script will be wrapped in a transaction using [READ COMMITTED](https://www.postgresql.org/docs/current/transaction-iso.html#XACT-READ-COMMITTED) isolation level.
                          * `repeatable-read`: The script will be wrapped in a transaction using [REPEATABLE READ](https://www.postgresql.org/docs/current/transaction-iso.html#XACT-REPEATABLE-READ) isolation level.
                          * `serializable`: The script will be wrapped in a transaction using [SERIALIZABLE](https://www.postgresql.org/docs/current/transaction-iso.html#XACT-SERIALIZABLE) isolation level.

                          If not set the script entry will not be wrapped in a transaction
                      storeStatusInDatabase:
                        type: boolean
                        description: |
                          When set to `true` the script entry execution will include storing the status of the execution of this
                           script entry in the table `managed_sql.status` that will be created in the specified `database`. This
                           will avoid an operation that fails partially to be unrecoverable requiring the intervention from the user
                           if user in conjunction with `retryOnError`.

                          If set to `true` then `wrapInTransaction` field must be set.

                          This is `false` by default.
                      retryOnError:
                        type: boolean
                        description: |
                          If not set or set to `false` the script entry will not be retried if it fails.

                          When set to `true` the script execution will be retried with an exponential backoff of 5 minutes,
                           starting from 10 seconds and a standard deviation of 10 seconds.

                          This is `false` by default.
                      script:
                        type: string
                        description: |
                          Raw SQL script to execute. This field is mutually exclusive with `scriptFrom` field.
                      scriptFrom:
                        type: object
                        description: |
                          Reference to either a Kubernetes [Secret](https://kubernetes.io/docs/concepts/configuration/secret/) or a [ConfigMap](https://kubernetes.io/docs/concepts/configuration/configmap/) that contains the SQL script to execute. This field is mutually exclusive with `script` field.

                          Fields `secretKeyRef` and `configMapKeyRef` are mutually exclusive, and one of them is required.
                        properties:
                          secretKeyRef:
                            type: object
                            description: |
                              A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) that contains the SQL script to execute. This field is mutually exclusive with `configMapKeyRef` field.
                            properties:
                              name:
                                type: string
                                description: Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                              key:
                                type: string
                                description: The key of the secret to select from. Must be a valid secret key.
                          configMapKeyRef:
                            type: object
                            description: |
                              A [ConfigMap](https://kubernetes.io/docs/concepts/configuration/configmap/) reference that contains the SQL script to execute. This field is mutually exclusive with `secretKeyRef` field.
                            properties:
                              name:
                                type: string
                                description: |
                                  The name of the ConfigMap that contains the SQL script to execute.
                              key:
                                type: string
                                description: |
                                  The key name within the ConfigMap that contains the SQL script to execute.
            status:
              type: object
              properties:
                scripts:
                  type: array
                  description: |
                    A list of script entry statuses where a script entry under `.spec.scripts` is identified by the `id` field.
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                        description: |
                          The id that identifies a script entry.
                      hash:
                        type: string
                        description: |
                          The hash of a ConfigMap or Secret referenced with the associated script entry.

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: sgshardedclusters.stackgres.io
spec:
  group: stackgres.io
  scope: Namespaced
  names:
    kind: SGShardedCluster
    listKind: SGShardedClusterList
    plural: sgshardedclusters
    singular: sgshardedcluster
    shortNames:
      - sgscl
  versions:
    - name: v1alpha1
      served: true
      storage: true
      additionalPrinterColumns:
      - name: version
        type: string
        jsonPath: .spec.postgres.version
      - name: instances
        type: integer
        jsonPath: .spec.coordinator.instances + (.spec.shards.clusters * .spec.shards.instancesPerCluster) 
      - name: Profile
        type: string
        jsonPath: .spec.coordinator.sgInstanceProfile + ", " + .spec.shards.sgInstanceProfile 
      - name: Disk
        type: string
        jsonPath: .spec.coordinator.pods.persistentVolume.size + ", " + .spec.shards.pods.persistentVolume.size
      - name: prometheus-autobind
        type: string
        jsonPath: .spec.prometheusAutobind
        priority: 1
      - name: pool-config
        type: string
        jsonPath: .spec.coordinator.configurations.sgPoolingConfig + ", " + .spec.shards.configurations.sgPoolingConfig
        priority: 1
      - name: postgres-config
        type: string
        jsonPath: .spec.coordinator.configurations.sgPostgresConfig + ", " + .spec.shards.configurations.sgPostgresConfig
        priority: 1
      schema:
        openAPIV3Schema:
          type: object
          required: ["metadata", "spec"]
          properties:
            metadata:
              type: object
              properties:
                name:
                  type: string
                  maxLength: 37
                  pattern: "^[a-z]([-a-z0-9]*[a-z0-9])?$"
                  description: |
                    Name of the StackGres sharded cluster. Following [Kubernetes naming conventions](https://github.com/kubernetes/community/blob/master/contributors/design-proposals/architecture/identifiers.md), it must be an rfc1035/rfc1123 subdomain, that is, up to 253 characters consisting of one or more lowercase labels separated by `.`. Where each label is an alphanumeric (a-z, and 0-9) string, with a maximum length of 63 characters, with the `-` character allowed anywhere except the first or last character.

                    The name must be unique across all SGCluster, SGShardedCluster and SGDistributedLogs in the same namespace.
            spec:
              type: object
              properties:
                type:
                  type: string
                  description: |
                    The sharding technology that will be used for the sharded cluster.
                    
                    Currently the only possible value for this field is `citus`.
                database:
                  type: string
                  description: |
                    The database name that will be created and used across all node and where "partitioned" (distributed) tables will live in.
                postgres:
                  type: object
                  description: |
                    This section allows to configure Postgres features
                  properties:
                    version:
                      type: string
                      description: |
                        Postgres version used on the cluster. It is either of:
                        *  The string 'latest', which automatically sets the latest major.minor Postgres version.
                        *  A major version, like '14' or '13', which sets that major version and the latest minor version.
                        *  A specific major.minor version, like '14.4'.
                    flavor:
                      type: string
                      description: |
                        Postgres flavor used on the cluster. It is either of:
                        *  `babelfish` will use the [Babelfish for Postgres](https://babelfish-for-postgresql.github.io/babelfish-for-postgresql/).
                        
                        If not specified then the vanilla Postgres will be used for the cluster.
                    extensions:
                      type: array
                      description: |
                        StackGres support deploy of extensions at runtime by simply adding an entry to this array. A deployed extension still
                        requires the creation in a database using the [`CREATE EXTENSION`](https://www.postgresql.org/docs/current/sql-createextension.html)
                        statement. After an extension is deployed correctly it will be present until removed and the cluster restarted.
                        
                        A cluster restart is required for:
                        * Extensions that requires to add an entry to [`shared_preload_libraries`](https://postgresqlco.nf/en/doc/param/shared_preload_libraries/) configuration parameter.
                        * Upgrading extensions that overwrite any file that is not the extension''s control file or extension''s script file.
                        * Removing extensions. Until the cluster is not restarted a removed extension will still be available.
                        * Install of extensions that require extra mount. After installed the cluster will require to be restarted.
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                            description: The name of the extension to deploy.
                          publisher:
                            type: string
                            description: The id of the publisher of the extension to deploy. If not specified `com.ongres` will be used by default.
                          version:
                            type: string
                            description: The version of the extension to deploy. If not specified version of `stable` channel will be used by default.
                          repository:
                            type: string
                            description: The repository base URL from where to obtain the extension to deploy. If not specified https://stackgres.io/downloads/postgres/extensions will be used by default (or the value specified during operator deployment).
                        required: ["name"]
                    ssl:
                      type: object
                      description: |
                        This section allows to use SSL when connecting to Postgres
                      properties:
                        enabled:
                          type: boolean
                          description: |
                            Allow to enable SSL for connections to Postgres. By default is `true`.
                            
                            If `true` certificate and private key will be auto-generated unless fields `certificateSecretKeySelector` and `privateKeySecretKeySelector` are specified.
                        certificateSecretKeySelector:
                          type: object
                          description: |
                            Secret key selector for the certificate or certificate chain used for SSL connections.
                          properties:
                            name:
                              type: string
                              description: |
                                The name of Secret that contains the certificate or certificate chain for SSL connections
                            key:
                              type: string
                              description: |
                                The key of Secret that contains the certificate or certificate chain for SSL connections
                          required: [ "name", "key" ]
                        privateKeySecretKeySelector:
                          type: object
                          description: |
                            Secret key selector for the private key used for SSL connections.
                          properties:
                            name:
                              type: string
                              description: |
                                The name of Secret that contains the private key for SSL connections
                            key:
                              type: string
                              description: |
                                The key of Secret that contains the private key for SSL connections
                          required: [ "name", "key" ]
                  required: [ "version" ]
                replication: &replication
                  type: object
                  description: |
                    This section allows to configure the global Postgres replication mode.

                    The main replication group is implicit and contains the total number of instances less the sum of all
                     instances in other replication groups.

                    The total number of instances is always specified by `.spec.instances`.
                  properties:
                    mode:
                      type: string
                      description: |
                        The replication mode applied to the whole cluster.
                        Possible values are:
                        * `async` (default)
                        * `sync`
                        * `strict-sync`
                        * `sync-all`
                        * `strict-sync-all`
                        
                        ### `async` Mode
                        
                        When in asynchronous mode the cluster is allowed to lose some committed transactions.
                         When the primary server fails or becomes unavailable for any other reason a sufficiently healthy standby
                         will automatically be promoted to primary. Any transactions that have not been replicated to that standby
                         remain in a "forked timeline" on the primary, and are effectively unrecoverable (the data is still there,
                         but recovering it requires a manual recovery effort by data recovery specialists).
                        
                        ### `sync` Mode
                        
                        When in synchronous mode a standby will not be promoted unless it is certain that the standby contains all
                         transactions that may have returned a successful commit status to client (clients can change the behavior
                         per transaction using PostgreSQL’s `synchronous_commit` setting. Transactions with `synchronous_commit`
                         values of `off` and `local` may be lost on fail over, but will not be blocked by replication delays). This
                         means that the system may be unavailable for writes even though some servers are available. System
                         administrators can still use manual failover commands to promote a standby even if it results in transaction
                         loss.
                        
                        Synchronous mode does not guarantee multi node durability of commits under all circumstances. When no suitable
                         standby is available, primary server will still accept writes, but does not guarantee their replication. When
                         the primary fails in this mode no standby will be promoted. When the host that used to be the primary comes
                         back it will get promoted automatically, unless system administrator performed a manual failover. This behavior
                         makes synchronous mode usable with 2 node clusters.
                        
                        When synchronous mode is used and a standby crashes, commits will block until the primary is switched to standalone
                         mode. Manually shutting down or restarting a standby will not cause a commit service interruption. Standby will
                         signal the primary to release itself from synchronous standby duties before PostgreSQL shutdown is initiated.
                        
                        ### `strict-sync` Mode
                        
                        When it is absolutely necessary to guarantee that each write is stored durably on at least two nodes, use the strict
                         synchronous mode. This mode prevents synchronous replication to be switched off on the primary when no synchronous
                         standby candidates are available. As a downside, the primary will not be available for writes (unless the Postgres
                         transaction explicitly turns off `synchronous_mode` parameter), blocking all client write requests until at least one
                         synchronous replica comes up.

                        **Note**: Because of the way synchronous replication is implemented in PostgreSQL it is still possible to lose
                         transactions even when using strict synchronous mode. If the PostgreSQL backend is cancelled while waiting to acknowledge
                         replication (as a result of packet cancellation due to client timeout or backend failure) transaction changes become
                         visible for other backends. Such changes are not yet replicated and may be lost in case of standby promotion.
                        
                        ### `sync-all` Mode
                        
                        The same as `sync` but `syncInstances` is ignored and the number of synchronous instances is equals to the total number
                         of instances less one.
                        
                        ### `strict-sync-all` Mode
                        
                        The same as `strict-sync` but `syncInstances` is ignored and the number of synchronous instances is equals to the total number
                         of instances less one.
                    syncInstances:
                      type: integer
                      minimum: 1
                      description: |
                        Number of synchronous standby instances. Must be less than the total number of instances. It is set to 1 by default.
                         Only setteable if mode is `sync` or `strict-sync`.
                postgresServices:
                  type: object
                  description: Kubernetes [services](https://kubernetes.io/docs/concepts/services-networking/service/) created or managed by StackGres.
                  properties:
                    coordinator:
                      type: object
                      description: |
                        Configuration for the coordinator services
                      properties:
                        any:
                          type: object
                          description: |
                            Configure the coordinator service to any instance of the coordinator with the same name as the SGShardedCluster plus the `-reads` suffix.
                            
                            It provides a stable connection (regardless of node failures) to any Postgres server of the coordinator cluster. Servers are load-balanced via this service.

                            See also https://kubernetes.io/docs/concepts/services-networking/service/
                          properties: &service-properties
                            enabled:
                              type: boolean
                              description: Specify if the service should be created or not.
                            type:
                              type: string
                              enum: ["ClusterIP", "LoadBalancer", "NodePort"]
                              description: |
                                type determines how the Service is exposed. Defaults to ClusterIP. Valid
                                options are ClusterIP, NodePort, and LoadBalancer. "ClusterIP" allocates
                                a cluster-internal IP address for load-balancing to endpoints.
                                "NodePort" builds on ClusterIP and allocates a port on every node.
                                "LoadBalancer" builds on NodePort and creates
                                an external load-balancer (if supported in the current cloud).
                                More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
                            allocateLoadBalancerNodePorts: {"description":"allocateLoadBalancerNodePorts defines if NodePorts will be automatically allocated for services with type LoadBalancer.  Default is \"true\". It may be set to \"false\" if the cluster load-balancer does not rely on NodePorts.  If the caller requests specific NodePorts (by specifying a value), those requests will be respected, regardless of this field. This field may only be set for services with type LoadBalancer and will be cleared if the type is changed to any other type.","type":"boolean"}
                            externalIPs: {"description":"externalIPs is a list of IP addresses for which nodes in the cluster will also accept traffic for this service.  These IPs are not managed by Kubernetes.  The user is responsible for ensuring that traffic arrives at a node with this IP.  A common example is external load-balancers that are not part of the Kubernetes system.","items":{"type":"string"},"type":"array"}
                            externalTrafficPolicy: {"description":"externalTrafficPolicy describes how nodes distribute service traffic they receive on one of the Service's \"externally-facing\" addresses (NodePorts, ExternalIPs, and LoadBalancer IPs). If set to \"Local\", the proxy will configure the service in a way that assumes that external load balancers will take care of balancing the service traffic between nodes, and so each node will deliver traffic only to the node-local endpoints of the service, without masquerading the client source IP. (Traffic mistakenly sent to a node with no endpoints will be dropped.) The default value, \"Cluster\", uses the standard behavior of routing to all endpoints evenly (possibly modified by topology and other features). Note that traffic sent to an External IP or LoadBalancer IP from within the cluster will always get \"Cluster\" semantics, but clients sending to a NodePort from within the cluster may need to take traffic policy into account when picking a node.\n\n","type":"string"}
                            healthCheckNodePort: {"description":"healthCheckNodePort specifies the healthcheck nodePort for the service. This only applies when type is set to LoadBalancer and externalTrafficPolicy is set to Local. If a value is specified, is in-range, and is not in use, it will be used.  If not specified, a value will be automatically allocated.  External systems (e.g. load-balancers) can use this port to determine if a given node holds endpoints for this service or not.  If this field is specified when creating a Service which does not need it, creation will fail. This field will be wiped when updating a Service to no longer need it (e.g. changing type). This field cannot be updated once set.","format":"int32","type":"integer"}
                            internalTrafficPolicy: {"description":"InternalTrafficPolicy describes how nodes distribute service traffic they receive on the ClusterIP. If set to \"Local\", the proxy will assume that pods only want to talk to endpoints of the service on the same node as the pod, dropping the traffic if there are no local endpoints. The default value, \"Cluster\", uses the standard behavior of routing to all endpoints evenly (possibly modified by topology and other features).","type":"string"}
                            ipFamilies: {"description":"IPFamilies is a list of IP families (e.g. IPv4, IPv6) assigned to this service. This field is usually assigned automatically based on cluster configuration and the ipFamilyPolicy field. If this field is specified manually, the requested family is available in the cluster, and ipFamilyPolicy allows it, it will be used; otherwise creation of the service will fail. This field is conditionally mutable: it allows for adding or removing a secondary IP family, but it does not allow changing the primary IP family of the Service. Valid values are \"IPv4\" and \"IPv6\".  This field only applies to Services of types ClusterIP, NodePort, and LoadBalancer, and does apply to \"headless\" services. This field will be wiped when updating a Service to type ExternalName.\n\nThis field may hold a maximum of two entries (dual-stack families, in either order).  These families must correspond to the values of the clusterIPs field, if specified. Both clusterIPs and ipFamilies are governed by the ipFamilyPolicy field.","items":{"type":"string"},"type":"array","x-kubernetes-list-type":"atomic"}
                            ipFamilyPolicy: {"description":"IPFamilyPolicy represents the dual-stack-ness requested or required by this Service. If there is no value provided, then this field will be set to SingleStack. Services can be \"SingleStack\" (a single IP family), \"PreferDualStack\" (two IP families on dual-stack configured clusters or a single IP family on single-stack clusters), or \"RequireDualStack\" (two IP families on dual-stack configured clusters, otherwise fail). The ipFamilies and clusterIPs fields depend on the value of this field. This field will be wiped when updating a service to type ExternalName.","type":"string"}
                            loadBalancerClass: {"description":"loadBalancerClass is the class of the load balancer implementation this Service belongs to. If specified, the value of this field must be a label-style identifier, with an optional prefix, e.g. \"internal-vip\" or \"example.com/internal-vip\". Unprefixed names are reserved for end-users. This field can only be set when the Service type is 'LoadBalancer'. If not set, the default load balancer implementation is used, today this is typically done through the cloud provider integration, but should apply for any default implementation. If set, it is assumed that a load balancer implementation is watching for Services with a matching class. Any default load balancer implementation (e.g. cloud providers) should ignore Services that set this field. This field can only be set when creating or updating a Service to type 'LoadBalancer'. Once set, it can not be changed. This field will be wiped when a service is updated to a non 'LoadBalancer' type.","type":"string"}
                            loadBalancerIP: {"description":"Only applies to Service Type: LoadBalancer. This feature depends on whether the underlying cloud-provider supports specifying the loadBalancerIP when a load balancer is created. This field will be ignored if the cloud-provider does not support the feature. Deprecated: This field was under-specified and its meaning varies across implementations, and it cannot support dual-stack. As of Kubernetes v1.24, users are encouraged to use implementation-specific annotations when available. This field may be removed in a future API version.","type":"string"}
                            loadBalancerSourceRanges: {"description":"If specified and supported by the platform, this will restrict traffic through the cloud-provider load-balancer will be restricted to the specified client IPs. This field will be ignored if the cloud-provider does not support the feature.\" More info: https://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/","items":{"type":"string"},"type":"array"}
                            sessionAffinity: {"description":"Supports \"ClientIP\" and \"None\". Used to maintain session affinity. Enable client IP based session affinity. Must be ClientIP or None. Defaults to None. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies\n\n","type":"string"}
                            sessionAffinityConfig: {"description":"SessionAffinityConfig represents the configurations of session affinity.","properties":{"clientIP":{"description":"ClientIPConfig represents the configurations of Client IP based session affinity.","properties":{"timeoutSeconds":{"description":"timeoutSeconds specifies the seconds of ClientIP type session sticky time. The value must be >0 && <=86400(for 1 day) if ServiceAffinity == \"ClientIP\". Default value is 10800(for 3 hours).","format":"int32","type":"integer"}},"type":"object"}},"type":"object"}
                        primary:
                          type: object
                          description: |
                            Configure the coordinator service to the primary of the coordinator with the name as the SGShardedCluster.
                            
                            It provides a stable connection (regardless of primary failures or switchovers) to the read-write Postgres server of the coordinator cluster.

                            See also https://kubernetes.io/docs/concepts/services-networking/service/
                          properties: *service-properties
                        customPorts:
                          type: array
                          description: |
                            The list of custom ports that will be exposed by the coordinator services.
                            
                            The names of custom ports will be prefixed with the string `custom-` so they do not
                             conflict with ports defined for the coordinator services.
                            
                            The names of target ports will be prefixed with the string `custom-` so that the ports
                             that can be referenced in this section will be only those defined under
                             .spec.pods.customContainers[].ports sections were names are also prepended with the same
                             prefix.
                            
                            See: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#serviceport-v1-core
                          items:
                            description: |
                              A custom port that will be exposed by the Postgres coordinator services.
                              
                              The name of the custom port will be prefixed with the string `custom-` so it does not
                               conflict with ports defined for the coordinator services.
                              
                              The name of target port will be prefixed with the string `custom-` so that the port
                               that can be referenced in this section will be only those defined under
                               .spec.pods.customContainers[].ports sections were names are also prepended with the same
                               prefix.
                               
                              See: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#serviceport-v1-core
                            properties: &ports-items-properties
                              {"appProtocol":{"description":"The application protocol for this port. This field follows standard Kubernetes label syntax. Un-prefixed names are reserved for IANA standard service names (as per RFC-6335 and http://www.iana.org/assignments/service-names). Non-standard protocols should use prefixed names such as mycompany.com/my-custom-protocol.","type":"string"},"name":{"description":"The name of this port within the service. This must be a DNS_LABEL. All ports within a ServiceSpec must have unique names. When considering the endpoints for a Service, this must match the 'name' field in the EndpointPort. Optional if only one ServicePort is defined on this service.","type":"string"},"nodePort":{"description":"The port on each node on which this service is exposed when type is NodePort or LoadBalancer.  Usually assigned by the system. If a value is specified, in-range, and not in use it will be used, otherwise the operation will fail.  If not specified, a port will be allocated if this Service requires one.  If this field is specified when creating a Service which does not need it, creation will fail. This field will be wiped when updating a Service to no longer need it (e.g. changing type from NodePort to ClusterIP). More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport","format":"int32","type":"integer"},"port":{"description":"The port that will be exposed by this service.","format":"int32","type":"integer"},"protocol":{"description":"The IP protocol for this port. Supports \"TCP\", \"UDP\", and \"SCTP\". Default is TCP.","type":"string"},"targetPort":{"description":"IntOrString is a type that can hold an int32 or a string.  When\n used in JSON or YAML marshalling and unmarshalling, it produces\n or consumes the inner type.  This allows you to have, for example,\n a JSON field that can accept a name or number.\n\nThe name will be prefixed with the string `custom-` so that the target port that can be\n referenced will be only those defined under .spec.pods.customContainers[].ports sections\n were names are also prepended with the same prefix.\n","format":"int-or-string","type":"string"}}
                            required:
                              - port
                            type: object
                    shards:
                      type: object
                      description: |
                        Configuration for the shards services
                      properties:
                        primaries:
                          type: object
                          description: |
                            Configure the shards service to any primary in the shards with the name as the SGShardedCluster plus the `-shards` suffix.
                            
                            It provides a stable connection (regardless of primary failures or switchovers) to read-write Postgres servers of any shard cluster. Read-write servers are load-balanced via this service.

                            See also https://kubernetes.io/docs/concepts/services-networking/service/
                          properties: *service-properties
                        customPorts:
                          type: array
                          description: |
                            The list of custom ports that will be exposed by the shards services.
                            
                            The names of custom ports will be prefixed with the string `custom-` so they do not
                             conflict with ports defined for the shards services.
                            
                            The names of target ports will be prefixed with the string `custom-` so that the ports
                             that can be referenced in this section will be only those defined under
                             .spec.pods.customContainers[].ports sections were names are also prepended with the same
                             prefix.
                            
                            See: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#serviceport-v1-core
                          items:
                            description: |
                              A custom port that will be exposed by the Postgres shards services.
                              
                              The name of the custom port will be prefixed with the string `custom-` so it does not
                               conflict with ports defined for the shards services.
                              
                              The name of target port will be prefixed with the string `custom-` so that the port
                               that can be referenced in this section will be only those defined under
                               .spec.pods.customContainers[].ports sections were names are also prepended with the same
                               prefix.
                               
                              See: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#serviceport-v1-core
                            properties: *ports-items-properties
                            required:
                              - port
                            type: object
                configurations:
                  type: object
                  description: |
                    Sharded cluster custom configurations.
                  properties:
                    backups:
                      type: array
                      description: |
                        List of backups configurations for this SGCluster
                      items:
                        type: object
                        description: |
                          Backup configuration for this SGCluster
                        properties:
                          compression:
                            type: string
                            description: |
                              Specifies the backup compression algorithm. Possible options are: lz4, lzma, brotli. The default method is `lz4`. LZ4 is the fastest method, but compression ratio is the worst. LZMA is way slower, but it compresses backups about 6 times better than LZ4. Brotli is a good trade-off between speed and compression ratio, being about 3 times better than LZ4.
                            enum: [ "lz4", "lzma", "brotli" ]
                          cronSchedule:
                            type: string
                            description: |
                              Continuous Archiving backups are composed of periodic *base backups* and all the WAL segments produced in between those base backups. This parameter specifies at what time and with what frequency to start performing a new base backup.
                              
                              Use cron syntax (`m h dom mon dow`) for this parameter, i.e., 5 values separated by spaces:
                              *  `m`: minute, 0 to 59.
                              *  `h`: hour, 0 to 23.
                              *  `dom`: day of month, 1 to 31 (recommended not to set it higher than 28).
                              *  `mon`: month, 1 to 12.
                              *  `dow`: day of week, 0 to 7 (0 and 7 both represent Sunday).
                              
                              Also ranges of values (`start-end`), the symbol `*` (meaning `first-last`) or even `*/N`, where `N` is a number, meaning ""every `N`, may be used. All times are UTC. It is recommended to avoid 00:00 as base backup time, to avoid overlapping with any other external operations happening at this time.
                              
                              If not set, full backups are performed each day at 05:00 UTC.
                          performance:
                            type: object
                            description: |
                              Configuration that affects the backup network and disk usage performance.
                            properties:
                              maxNetworkBandwidth:
                                type: integer
                                description: |
                                  Maximum storage upload bandwidth used when storing a backup. In bytes (per second).
                              maxDiskBandwidth:
                                type: integer
                                description: |
                                  Maximum disk read I/O when performing a backup. In bytes (per second).
                              uploadDiskConcurrency:
                                type: integer
                                minimum: 1
                                description: |
                                  Backup storage may use several concurrent streams to store the data. This parameter configures the number of parallel streams to use to reading from disk. By default, it's set to 1.
                              uploadConcurrency:
                                type: integer
                                minimum: 1
                                description: |
                                  Backup storage may use several concurrent streams to store the data. This parameter configures the number of parallel streams to use. By default, it's set to 16.
                              downloadConcurrency:
                                type: integer
                                minimum: 1
                                description: |
                                  Backup storage may use several concurrent streams to read the data. This parameter configures the number of parallel streams to use. By default, it's set to the minimum between the number of file to read and 10.
                          retention:
                            type: integer
                            minimum: 1
                            description: |
                              When an automatic retention policy is defined to delete old base backups, this parameter specifies the number of base backups to keep, in a sliding window.
                              
                              Consequently, the time range covered by backups is `periodicity*retention`, where `periodicity` is the separation between backups as specified by the `cronSchedule` property.
                              
                              Default is 5.
                          sgObjectStorage:
                            type: string
                            description: |
                              Name of the [SGObjectStorage](https://stackgres.io/doc/latest/reference/crd/sgobjectstorage) to use for the cluster. It defines the location in which the the backups will be stored.
                          paths:
                            type: array
                            items:
                              type: string
                            description: |
                              The paths were the backups are stored. If not set this field is filled up by the operator.

                              When provided will indicate were the backups and WAL files will be stored.
                              
                              The first path indicate the coordinator path and the other paths indicate the shards paths
                        required: ["sgObjectStorage"]
                    credentials:
                      type: object
                      description: Allow to specify custom credentials for Postgres users and Patroni REST API
                      properties:
                        patroni:
                          type: object
                          description: |
                            Kubernetes [SecretKeySelectors](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) that contains the credentials for patroni REST API.
                          properties:
                            restApiPassword:
                              type: object
                              description: |
                                A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) that contains the password for the patroni REST API.
                              properties:
                                name:
                                  type: string
                                  description: Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                key:
                                  type: string
                                  description: The key of the secret to select from. Must be a valid secret key.
                              required: ["name", "key"]
                        users:
                          type: object
                          description: |
                            Kubernetes [SecretKeySelectors](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) that contains the credentials of the users.
                          properties:
                            superuser:
                              type: object
                              description: |
                                A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) that contains the credentials of the superuser (usually the postgres user).
                              properties:
                                username:
                                  type: object
                                  description: |
                                    A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) that contains the username of the user.
                                  properties:
                                    name:
                                      type: string
                                      description: Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                    key:
                                      type: string
                                      description: The key of the secret to select from. Must be a valid secret key.
                                  required: ["name", "key"]
                                password:
                                  type: object
                                  description: |
                                    A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) that contains the password of the user.
                                  properties:
                                    name:
                                      type: string
                                      description: Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                    key:
                                      type: string
                                      description: The key of the secret to select from. Must be a valid secret key.
                                  required: ["name", "key"]
                            replication:
                              type: object
                              description: |
                                A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) that contains the credentials of the replication user used to replicate from the primary cluster and from replicas of this cluster.
                              properties:
                                username:
                                  type: object
                                  description: |
                                    A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) that contains the username of the user.
                                  properties:
                                    name:
                                      type: string
                                      description: Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                    key:
                                      type: string
                                      description: The key of the secret to select from. Must be a valid secret key.
                                  required: ["name", "key"]
                                password:
                                  type: object
                                  description: |
                                    A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) that contains the password of the user.
                                  properties:
                                    name:
                                      type: string
                                      description: Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                    key:
                                      type: string
                                      description: The key of the secret to select from. Must be a valid secret key.
                                  required: ["name", "key"]
                            authenticator:
                              type: object
                              description: |
                                A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) that contains the credentials of the authenticator user used by pgbouncer to authenticate other users.
                              properties:
                                username:
                                  type: object
                                  description: |
                                    A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) that contains the username of the user.
                                  properties:
                                    name:
                                      type: string
                                      description: Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                    key:
                                      type: string
                                      description: The key of the secret to select from. Must be a valid secret key.
                                  required: ["name", "key"]
                                password:
                                  type: object
                                  description: |
                                    A Kubernetes [SecretKeySelector](https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#secretkeyselector-v1-core) that contains the password of the user.
                                  properties:
                                    name:
                                      type: string
                                      description: Name of the referent. [More information](https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names).
                                    key:
                                      type: string
                                      description: The key of the secret to select from. Must be a valid secret key.
                                  required: ["name", "key"]
                metadata:
                  type: object
                  description: Metadata information from any cluster created resources.
                  properties:
                    annotations:
                      type: object
                      description: Custom Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/) to be passed to resources created and managed by StackGres.
                      properties:
                        allResources:
                          type: object
                          description: Annotations to attach to any resource created or managed by StackGres.
                          additionalProperties:
                            type: string
                        clusterPods:
                          type: object
                          description: Annotations to attach to pods created or managed by StackGres.
                          additionalProperties:
                            type: string
                        services:
                          type: object
                          description: Annotations to attach to all services created or managed by StackGres.
                          additionalProperties:
                            type: string
                        primaryService:
                          type: object
                          description: Custom Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/) passed to the `-primary` service.
                          additionalProperties:
                            type: string
                        replicasService:
                          type: object
                          description: Custom Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/) passed to the `-replicas` service.
                          additionalProperties:
                            type: string
                    labels:
                      type: object
                      description: Custom Kubernetes [labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/) to be passed to resources created and managed by StackGres.
                      properties:
                        clusterPods:
                          type: object
                          description: Labels to attach to Pods created or managed by StackGres.
                          additionalProperties:
                            type: string 
                        services:
                          type: object
                          description: Labels to attach to Services and Endpoints created or managed by StackGres.
                          additionalProperties:
                            type: string 
                coordinator:
                  type: object
                  description: |
                    The coordinator is a StackGres cluster responsible of coordinating data storage and access from the shards.
                  properties:
                    instances:
                      type: integer
                      minimum: 1
                      maximum: 16
                      description: |
                        Number of StackGres instances for the cluster. Each instance contains one Postgres server.
                         Out of all of the Postgres servers, one is elected as the primary, the rest remain as read-only replicas.
                    sgInstanceProfile:
                      type: string
                      description: |
                        Name of the [SGInstanceProfile](https://stackgres.io/doc/latest/04-postgres-cluster-management/03-resource-profiles/). A SGInstanceProfile defines CPU and memory limits. Must exist before creating a cluster. When no profile is set, a default (currently: 1 core, 2 GiB RAM) one is used.
                    managedSql:
                      type: object
                      description: |
                        This section allows to reference SQL scripts that will be applied to the cluster live.
                      properties:
                        continueOnSGScriptError:
                          type: boolean
                          description: If true, when any entry of any `SGScript` fail will not prevent subsequent `SGScript` from being executed. By default is `false`.
                        scripts:
                          type: array
                          description: |
                            A list of script references that will be executed in sequence.
                          items:
                            type: object
                            description: |
                              A script reference. Each version of each entry of the script referenced will be executed exactly once following the sequence defined
                               in the referenced script and skipping any script entry that have already been executed.
                            properties:
                              id:
                                type: integer
                                description: The id is immutable and must be unique across all the `SGScript` entries. It is replaced by the operator and is used to identify the `SGScript` entry.
                              sgScript:
                                type: string
                                description: A reference to an `SGScript`
                    pods:
                      type: object
                      description: Cluster pod's configuration.
                      properties:
                        persistentVolume:
                          type: object
                          description: Pod's persistent volume configuration.
                          properties:
                            size:
                              type: string
                              pattern: '^[0-9]+(\.[0-9]+)?(Mi|Gi|Ti)$'
                              description: |
                                Size of the PersistentVolume set for each instance of the cluster. This size is specified either in Mebibytes, Gibibytes or Tebibytes (multiples of 2^20, 2^30 or 2^40, respectively).
                            storageClass:
                              type: string
                              description: |
                                Name of an existing StorageClass in the Kubernetes cluster, used to create the PersistentVolumes for the instances of the cluster.
                          required: ["size"]
                        disableConnectionPooling:
                          type: boolean
                          description: If set to `true`, avoids creating a connection pooling (using [PgBouncer](https://www.pgbouncer.org/)) sidecar.
                        disableMetricsExporter:
                          type: boolean
                          description: If set to `true`, avoids creating the Prometheus exporter sidecar. Recommended when there's no intention to use Prometheus for monitoring.
                        disablePostgresUtil:
                          type: boolean
                          description: If set to `true`, avoids creating the `postgres-util` sidecar. This sidecar contains usual Postgres administration utilities *that are not present in the main (`patroni`) container*, like `psql`. Only disable if you know what you are doing.
                        resources:
                          type: object
                          description: Pod custom resources configuration.
                          properties:
                            enableClusterLimitsRequirements:
                              type: boolean
                              description: When enabled resource limits for containers other than the patroni container wil be set just like for patroni contianer as specified in the SGInstanceProfile.
                        scheduling: &scheduling
                          type: object
                          description: Pod custom scheduling, affinity and topology spread constratins configuration.
                          properties:
                            nodeSelector: &node-selector
                              type: object
                              additionalProperties:
                                type: string
                              description: |
                                NodeSelector is a selector which must be true for the pod to fit on a node. Selector which must match a node's labels for the pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/
                            tolerations: &tolerations
                              {"description":"If specified, the pod's tolerations.\n\nSee: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#toleration-v1-core\n","type":"array","items":{"description":"The pod this Toleration is attached to tolerates any taint that matches the triple <key,value,effect> using the matching operator <operator>\n\nSee: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#toleration-v1-core\n","properties":{"effect":{"description":"Effect indicates the taint effect to match. Empty means match all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule and NoExecute.\n\n","type":"string"},"key":{"description":"Key is the taint key that the toleration applies to. Empty means match all taint keys. If the key is empty, operator must be Exists; this combination means to match all values and all keys.","type":"string"},"operator":{"description":"Operator represents a key's relationship to the value. Valid operators are Exists and Equal. Defaults to Equal. Exists is equivalent to wildcard for value, so that a pod can tolerate all taints of a particular category.\n\n","type":"string"},"tolerationSeconds":{"description":"TolerationSeconds represents the period of time the toleration (which must be of effect NoExecute, otherwise this field is ignored) tolerates the taint. By default, it is not set, which means tolerate the taint forever (do not evict). Zero and negative values will be treated as 0 (evict immediately) by the system.","format":"int64","type":"integer"},"value":{"description":"Value is the taint value the toleration matches to. If the operator is Exists, the value should be empty, otherwise just a regular string.","type":"string"}},"type":"object"}}
                            nodeAffinity: &node-affinity
                              {"description":"Node affinity is a group of node affinity scheduling rules.\n\nSee: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#nodeaffinity-v1-core\n","properties":{"preferredDuringSchedulingIgnoredDuringExecution":{"description":"The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node matches the corresponding matchExpressions; the node(s) with the highest sum are the most preferred.","items":{"description":"An empty preferred scheduling term matches all objects with implicit weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no objects (i.e. is also a no-op).","properties":{"preference":{"description":"A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.","properties":{"matchExpressions":{"description":"A list of node selector requirements by node's labels.","items":{"description":"A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.","properties":{"key":{"description":"The label key that the selector applies to.","type":"string"},"operator":{"description":"Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.\n\n","type":"string"},"values":{"description":"An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchFields":{"description":"A list of node selector requirements by node's fields.","items":{"description":"A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.","properties":{"key":{"description":"The label key that the selector applies to.","type":"string"},"operator":{"description":"Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.\n\n","type":"string"},"values":{"description":"An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"}},"type":"object"},"weight":{"description":"Weight associated with matching the corresponding nodeSelectorTerm, in the range 1-100.","format":"int32","type":"integer"}},"required":["weight","preference"],"type":"object"},"type":"array"},"requiredDuringSchedulingIgnoredDuringExecution":{"description":"A node selector represents the union of the results of one or more label queries over a set of nodes; that is, it represents the OR of the selectors represented by the node selector terms.","properties":{"nodeSelectorTerms":{"description":"Required. A list of node selector terms. The terms are ORed.","items":{"description":"A null or empty node selector term matches no objects. The requirements of them are ANDed. The TopologySelectorTerm type implements a subset of the NodeSelectorTerm.","properties":{"matchExpressions":{"description":"A list of node selector requirements by node's labels.","items":{"description":"A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.","properties":{"key":{"description":"The label key that the selector applies to.","type":"string"},"operator":{"description":"Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.\n\n","type":"string"},"values":{"description":"An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchFields":{"description":"A list of node selector requirements by node's fields.","items":{"description":"A node selector requirement is a selector that contains values, a key, and an operator that relates the key and values.","properties":{"key":{"description":"The label key that the selector applies to.","type":"string"},"operator":{"description":"Represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt.\n\n","type":"string"},"values":{"description":"An array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. If the operator is Gt or Lt, the values array must have a single element, which will be interpreted as an integer. This array is replaced during a strategic merge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"}},"type":"object"},"type":"array"}},"required":["nodeSelectorTerms"],"type":"object"}},"type":"object"}
                            priorityClassName: &priority-class-name
                              type: string
                              description: |
                                Priority indicates the importance of a Pod relative to other Pods. If a Pod cannot be scheduled, the scheduler tries to preempt (evict) lower priority Pods to make scheduling of the pending Pod possible.
                            podAffinity: &pod-affinity
                              {"description":"Pod affinity is a group of inter pod affinity scheduling rules.\n\nSee: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#podaffinity-v1-core\n","properties":{"preferredDuringSchedulingIgnoredDuringExecution":{"description":"The scheduler will prefer to schedule pods to nodes that satisfy the affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.","items":{"description":"The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)","properties":{"podAffinityTerm":{"description":"Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running","properties":{"labelSelector":{"description":"A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object"},"namespaceSelector":{"description":"A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object"},"namespaces":{"description":"namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \"this pod's namespace\".","items":{"type":"string"},"type":"array"},"topologyKey":{"description":"This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.","type":"string"}},"required":["topologyKey"],"type":"object"},"weight":{"description":"weight associated with matching the corresponding podAffinityTerm, in the range 1-100.","format":"int32","type":"integer"}},"required":["weight","podAffinityTerm"],"type":"object"},"type":"array"},"requiredDuringSchedulingIgnoredDuringExecution":{"description":"If the affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.","items":{"description":"Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running","properties":{"labelSelector":{"description":"A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object"},"namespaceSelector":{"description":"A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object"},"namespaces":{"description":"namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \"this pod's namespace\".","items":{"type":"string"},"type":"array"},"topologyKey":{"description":"This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.","type":"string"}},"required":["topologyKey"],"type":"object"},"type":"array"}},"type":"object"}
                            podAntiAffinity: &pod-anti-affinity
                              {"description":"Pod anti affinity is a group of inter pod anti affinity scheduling rules.\n\nSee: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#podantiaffinity-v1-core\n","properties":{"preferredDuringSchedulingIgnoredDuringExecution":{"description":"The scheduler will prefer to schedule pods to nodes that satisfy the anti-affinity expressions specified by this field, but it may choose a node that violates one or more of the expressions. The node that is most preferred is the one with the greatest sum of weights, i.e. for each node that meets all of the scheduling requirements (resource request, requiredDuringScheduling anti-affinity expressions, etc.), compute a sum by iterating through the elements of this field and adding \"weight\" to the sum if the node has pods which matches the corresponding podAffinityTerm; the node(s) with the highest sum are the most preferred.","items":{"description":"The weights of all of the matched WeightedPodAffinityTerm fields are added per-node to find the most preferred node(s)","properties":{"podAffinityTerm":{"description":"Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running","properties":{"labelSelector":{"description":"A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object"},"namespaceSelector":{"description":"A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object"},"namespaces":{"description":"namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \"this pod's namespace\".","items":{"type":"string"},"type":"array"},"topologyKey":{"description":"This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.","type":"string"}},"required":["topologyKey"],"type":"object"},"weight":{"description":"weight associated with matching the corresponding podAffinityTerm, in the range 1-100.","format":"int32","type":"integer"}},"required":["weight","podAffinityTerm"],"type":"object"},"type":"array"},"requiredDuringSchedulingIgnoredDuringExecution":{"description":"If the anti-affinity requirements specified by this field are not met at scheduling time, the pod will not be scheduled onto the node. If the anti-affinity requirements specified by this field cease to be met at some point during pod execution (e.g. due to a pod label update), the system may or may not try to eventually evict the pod from its node. When there are multiple elements, the lists of nodes corresponding to each podAffinityTerm are intersected, i.e. all terms must be satisfied.","items":{"description":"Defines a set of pods (namely those matching the labelSelector relative to the given namespace(s)) that this pod should be co-located (affinity) or not co-located (anti-affinity) with, where co-located is defined as running on a node whose value of the label with key <topologyKey> matches that of any node on which a pod of the set of pods is running","properties":{"labelSelector":{"description":"A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object"},"namespaceSelector":{"description":"A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object"},"namespaces":{"description":"namespaces specifies a static list of namespace names that the term applies to. The term is applied to the union of the namespaces listed in this field and the ones selected by namespaceSelector. null or empty namespaces list and null namespaceSelector means \"this pod's namespace\".","items":{"type":"string"},"type":"array"},"topologyKey":{"description":"This pod should be co-located (affinity) or not co-located (anti-affinity) with the pods matching the labelSelector in the specified namespaces, where co-located is defined as running on a node whose value of the label with key topologyKey matches that of any node on which any of the selected pods is running. Empty topologyKey is not allowed.","type":"string"}},"required":["topologyKey"],"type":"object"},"type":"array"}},"type":"object"}
                            topologySpreadConstraints:
                              {"type":"array","description":"TopologySpreadConstraints describes how a group of pods ought to spread across topology domains. Scheduler will schedule pods in a way which abides by the constraints. All topologySpreadConstraints are ANDed.\n","items":{"description":"TopologySpreadConstraint specifies how to spread matching pods among the given topology.\n\nSee: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#topologyspreadconstraint-v1-core\n","properties":{"labelSelector":{"description":"A label selector is a label query over a set of resources. The result of matchLabels and matchExpressions are ANDed. An empty label selector matches all objects. A null label selector matches no objects.","properties":{"matchExpressions":{"description":"matchExpressions is a list of label selector requirements. The requirements are ANDed.","items":{"description":"A label selector requirement is a selector that contains values, a key, and an operator that relates the key and values.","properties":{"key":{"description":"key is the label key that the selector applies to.","type":"string"},"operator":{"description":"operator represents a key's relationship to a set of values. Valid operators are In, NotIn, Exists and DoesNotExist.","type":"string"},"values":{"description":"values is an array of string values. If the operator is In or NotIn, the values array must be non-empty. If the operator is Exists or DoesNotExist, the values array must be empty. This array is replaced during a strategic merge patch.","items":{"type":"string"},"type":"array"}},"required":["key","operator"],"type":"object"},"type":"array"},"matchLabels":{"additionalProperties":{"type":"string"},"description":"matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels map is equivalent to an element of matchExpressions, whose key field is \"key\", the operator is \"In\", and the values array contains only \"value\". The requirements are ANDed.","type":"object"}},"type":"object"},"matchLabelKeys":{"description":"MatchLabelKeys is a set of pod label keys to select the pods over which spreading will be calculated. The keys are used to lookup values from the incoming pod labels, those key-value labels are ANDed with labelSelector to select the group of existing pods over which spreading will be calculated for the incoming pod. Keys that don't exist in the incoming pod labels will be ignored. A null or empty list means only match against labelSelector.","items":{"type":"string"},"type":"array"},"maxSkew":{"description":"MaxSkew describes the degree to which pods may be unevenly distributed. When `whenUnsatisfiable=DoNotSchedule`, it is the maximum permitted difference between the number of matching pods in the target topology and the global minimum. The global minimum is the minimum number of matching pods in an eligible domain or zero if the number of eligible domains is less than MinDomains. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 2/2/1: In this case, the global minimum is 1. | zone1 | zone2 | zone3 | |  P P  |  P P  |   P   | - if MaxSkew is 1, incoming pod can only be scheduled to zone3 to become 2/2/2; scheduling it onto zone1(zone2) would make the ActualSkew(3-1) on zone1(zone2) violate MaxSkew(1). - if MaxSkew is 2, incoming pod can be scheduled onto any zone. When `whenUnsatisfiable=ScheduleAnyway`, it is used to give higher precedence to topologies that satisfy it. It's a required field. Default value is 1 and 0 is not allowed.","format":"int32","type":"integer"},"minDomains":{"description":"MinDomains indicates a minimum number of eligible domains. When the number of eligible domains with matching topology keys is less than minDomains, Pod Topology Spread treats \"global minimum\" as 0, and then the calculation of Skew is performed. And when the number of eligible domains with matching topology keys equals or greater than minDomains, this value has no effect on scheduling. As a result, when the number of eligible domains is less than minDomains, scheduler won't schedule more than maxSkew Pods to those domains. If value is nil, the constraint behaves as if MinDomains is equal to 1. Valid values are integers greater than 0. When value is not nil, WhenUnsatisfiable must be DoNotSchedule.\n\nFor example, in a 3-zone cluster, MaxSkew is set to 2, MinDomains is set to 5 and pods with the same labelSelector spread as 2/2/2: | zone1 | zone2 | zone3 | |  P P  |  P P  |  P P  | The number of domains is less than 5(MinDomains), so \"global minimum\" is treated as 0. In this situation, new pod with the same labelSelector cannot be scheduled, because computed skew will be 3(3 - 0) if new Pod is scheduled to any of the three zones, it will violate MaxSkew.\n\nThis is a beta field and requires the MinDomainsInPodTopologySpread feature gate to be enabled (enabled by default).","format":"int32","type":"integer"},"nodeAffinityPolicy":{"description":"NodeAffinityPolicy indicates how we will treat Pod's nodeAffinity/nodeSelector when calculating pod topology spread skew. Options are: - Honor: only nodes matching nodeAffinity/nodeSelector are included in the calculations. - Ignore: nodeAffinity/nodeSelector are ignored. All nodes are included in the calculations.\n\nIf this value is nil, the behavior is equivalent to the Honor policy. This is a alpha-level feature enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.","type":"string"},"nodeTaintsPolicy":{"description":"NodeTaintsPolicy indicates how we will treat node taints when calculating pod topology spread skew. Options are: - Honor: nodes without taints, along with tainted nodes for which the incoming pod has a toleration, are included. - Ignore: node taints are ignored. All nodes are included.\n\nIf this value is nil, the behavior is equivalent to the Ignore policy. This is a alpha-level feature enabled by the NodeInclusionPolicyInPodTopologySpread feature flag.","type":"string"},"topologyKey":{"description":"TopologyKey is the key of node labels. Nodes that have a label with this key and identical values are considered to be in the same topology. We consider each <key, value> as a \"bucket\", and try to put balanced number of pods into each bucket. We define a domain as a particular instance of a topology. Also, we define an eligible domain as a domain whose nodes meet the requirements of nodeAffinityPolicy and nodeTaintsPolicy. e.g. If TopologyKey is \"kubernetes.io/hostname\", each Node is a domain of that topology. And, if TopologyKey is \"topology.kubernetes.io/zone\", each zone is a domain of that topology. It's a required field.","type":"string"},"whenUnsatisfiable":{"description":"WhenUnsatisfiable indicates how to deal with a pod if it doesn't satisfy the spread constraint. - DoNotSchedule (default) tells the scheduler not to schedule it. - ScheduleAnyway tells the scheduler to schedule the pod in any location,\n  but giving higher precedence to topologies that would help reduce the\n  skew.\nA constraint is considered \"Unsatisfiable\" for an incoming pod if and only if every possible node assignment for that pod would violate \"MaxSkew\" on some topology. For example, in a 3-zone cluster, MaxSkew is set to 1, and pods with the same labelSelector spread as 3/1/1: | zone1 | zone2 | zone3 | | P P P |   P   |   P   | If WhenUnsatisfiable is set to DoNotSchedule, incoming pod can only be scheduled to zone2(zone3) to become 3/2/1(3/1/2) as ActualSkew(2-1) on zone2(zone3) satisfies MaxSkew(1). In other words, the cluster can still be imbalanced, but scheduler won't make it *more* imbalanced. It's a required field.\n\n","type":"string"}},"required":["maxSkew","topologyKey","whenUnsatisfiable"],"type":"object"}}
                            backup:
                              type: object
                              description: Backup Pod custom scheduling and affinity configuration.
                              properties:
                                nodeSelector: *node-affinity
                                tolerations: *node-affinity
                                nodeAffinity: *node-affinity
                                priorityClassName: *priority-class-name
                                podAffinity: *pod-affinity
                                podAntiAffinity: *pod-anti-affinity
                        managementPolicy:
                          type: string
                          description: |
                            managementPolicy controls how pods are created during initial scale up, when replacing pods
                             on nodes, or when scaling down. The default policy is `OrderedReady`, where pods are created
                             in increasing order (pod-0, then pod-1, etc) and the controller will wait until each pod is
                             ready before continuing. When scaling down, the pods are removed in the opposite order.
                             The alternative policy is `Parallel` which will create pods in parallel to match the desired
                             scale without waiting, and on scale down will delete all pods at once.
                        customVolumes:
                          type: array
                          description: |
                            A list of custom volumes that may be used along with any container defined in
                             customInitContainers or customContainers sections for the coordinator.
                            
                            The name used in this section will be prefixed with the string `custom-` so that when
                             referencing them in the customInitContainers or customContainers sections the name used
                             have to be prepended with the same prefix.
                            
                            Only the following volume types are allowed: configMap, downwardAPI, emptyDir,
                             gitRepo, glusterfs, hostPath, nfs, projected and secret
                             
                            See: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#volume-v1-core
                          items: &volume-items
                            {"type":"object","description":"A custom volume that may be used along with any container defined in\n customInitContainers or customContainers sections.\n\nThe name used in this section will be prefixed with the string `custom-` so that when\n referencing them in the customInitContainers or customContainers sections the name used\n have to be prepended with the same prefix.\n\nOnly the following volume types are allowed: configMap, downwardAPI, emptyDir,\n gitRepo, glusterfs, hostPath, nfs, projected and secret\n \nSee: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#volume-v1-core\n","properties":{"name":{"description":"Volumes name. Must be a DNS_LABEL and unique within the pod.\n More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names\n\nThe name will be prefixed with the string `custom-` so that when referencing them in the\n customInitContainers or customContainers sections the name used have to be prepended with\n the same prefix.\n","type":"string"},"configMap":{"description":"Adapts a ConfigMap into a volume.\n\nThe contents of the target ConfigMap's Data field will be presented in a volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. ConfigMap volumes support ownership management and SELinux relabeling.","properties":{"defaultMode":{"description":"Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.","format":"int32","type":"integer"},"items":{"description":"If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.","items":{"description":"Maps a string key to a path within a volume.","properties":{"key":{"description":"The key to project.","type":"string"},"mode":{"description":"Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.","format":"int32","type":"integer"},"path":{"description":"The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.","type":"string"}},"required":["key","path"],"type":"object"},"type":"array"},"name":{"description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names","type":"string"},"optional":{"description":"Specify whether the ConfigMap or its keys must be defined","type":"boolean"}},"type":"object"},"downwardAPI":{"description":"DownwardAPIVolumeSource represents a volume containing downward API info. Downward API volumes support ownership management and SELinux relabeling.","properties":{"defaultMode":{"description":"Optional: mode bits to use on created files by default. Must be a Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.","format":"int32","type":"integer"},"items":{"description":"Items is a list of downward API volume file","items":{"description":"DownwardAPIVolumeFile represents information to create the file containing the pod field","properties":{"fieldRef":{"description":"ObjectFieldSelector selects an APIVersioned field of an object.","properties":{"apiVersion":{"description":"Version of the schema the FieldPath is written in terms of, defaults to \"v1\".","type":"string"},"fieldPath":{"description":"Path of the field to select in the specified API version.","type":"string"}},"required":["fieldPath"],"type":"object"},"mode":{"description":"Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.","format":"int32","type":"integer"},"path":{"description":"Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'","type":"string"},"resourceFieldRef":{"description":"ResourceFieldSelector represents container resources (cpu, memory) and their output format","properties":{"containerName":{"description":"Container name: required for volumes, optional for env vars","type":"string"},"divisor":{"description":"Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.\n\nThe serialization format is:\n\n<quantity>        ::= <signedNumber><suffix>\n  (Note that <suffix> may be empty, from the \"\" case in <decimalSI>.)\n<digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= \"+\" | \"-\" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei\n  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)\n<decimalSI>       ::= m | \"\" | k | M | G | T | P | E\n  (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)\n<decimalExponent> ::= \"e\" <signedNumber> | \"E\" <signedNumber>\n\nNo matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.\n\nWhen a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.\n\nBefore serializing, Quantity will be put in \"canonical form\". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:\n  a. No precision is lost\n  b. No fractional digits will be emitted\n  c. The exponent (or suffix) is as large as possible.\nThe sign will be omitted unless the number is negative.\n\nExamples:\n  1.5 will be serialized as \"1500m\"\n  1.5Gi will be serialized as \"1536Mi\"\n\nNote that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.\n\nNon-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)\n\nThis format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.","type":"string"},"resource":{"description":"Required: resource to select","type":"string"}},"required":["resource"],"type":"object"}},"required":["path"],"type":"object"},"type":"array"}},"type":"object"},"emptyDir":{"description":"Represents an empty directory for a pod. Empty directory volumes support ownership management and SELinux relabeling.","properties":{"medium":{"description":"What type of storage medium should back this directory. The default is \"\" which means to use the node's default medium. Must be an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir","type":"string"},"sizeLimit":{"description":"Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.\n\nThe serialization format is:\n\n<quantity>        ::= <signedNumber><suffix>\n  (Note that <suffix> may be empty, from the \"\" case in <decimalSI>.)\n<digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= \"+\" | \"-\" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei\n  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)\n<decimalSI>       ::= m | \"\" | k | M | G | T | P | E\n  (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)\n<decimalExponent> ::= \"e\" <signedNumber> | \"E\" <signedNumber>\n\nNo matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.\n\nWhen a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.\n\nBefore serializing, Quantity will be put in \"canonical form\". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:\n  a. No precision is lost\n  b. No fractional digits will be emitted\n  c. The exponent (or suffix) is as large as possible.\nThe sign will be omitted unless the number is negative.\n\nExamples:\n  1.5 will be serialized as \"1500m\"\n  1.5Gi will be serialized as \"1536Mi\"\n\nNote that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.\n\nNon-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)\n\nThis format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.","type":"string"}},"type":"object"},"gitRepo":{"description":"Represents a volume that is populated with the contents of a git repository. Git repo volumes do not support ownership management. Git repo volumes support SELinux relabeling.\n\nDEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.","properties":{"directory":{"description":"Target directory name. Must not contain or start with '..'.  If '.' is supplied, the volume directory will be the git repository.  Otherwise, if specified, the volume will contain the git repository in the subdirectory with the given name.","type":"string"},"repository":{"description":"Repository URL","type":"string"},"revision":{"description":"Commit hash for the specified revision.","type":"string"}},"required":["repository"],"type":"object"},"glusterfs":{"description":"Represents a Glusterfs mount that lasts the lifetime of a pod. Glusterfs volumes do not support ownership management or SELinux relabeling.","properties":{"endpoints":{"description":"EndpointsName is the endpoint name that details Glusterfs topology. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod","type":"string"},"path":{"description":"Path is the Glusterfs volume path. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod","type":"string"},"readOnly":{"description":"ReadOnly here will force the Glusterfs volume to be mounted with read-only permissions. Defaults to false. More info: https://examples.k8s.io/volumes/glusterfs/README.md#create-a-pod","type":"boolean"}},"required":["endpoints","path"],"type":"object"},"hostPath":{"description":"Represents a host path mapped into a pod. Host path volumes do not support ownership management or SELinux relabeling.","properties":{"path":{"description":"Path of the directory on the host. If the path is a symlink, it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath","type":"string"},"type":{"description":"Type for HostPath Volume Defaults to \"\" More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath","type":"string"}},"required":["path"],"type":"object"},"nfs":{"description":"Represents an NFS mount that lasts the lifetime of a pod. NFS volumes do not support ownership management or SELinux relabeling.","properties":{"path":{"description":"Path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs","type":"string"},"readOnly":{"description":"ReadOnly here will force the NFS export to be mounted with read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs","type":"boolean"},"server":{"description":"Server is the hostname or IP address of the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs","type":"string"}},"required":["server","path"],"type":"object"},"projected":{"description":"Represents a projected volume source","properties":{"defaultMode":{"description":"Mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.","format":"int32","type":"integer"},"sources":{"description":"list of volume projections","items":{"description":"Projection that may be projected along with other supported volume types","properties":{"configMap":{"description":"Adapts a ConfigMap into a projected volume.\n\nThe contents of the target ConfigMap's Data field will be presented in a projected volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. Note that this is identical to a configmap volume source without the default mode.","properties":{"items":{"description":"If unspecified, each key-value pair in the Data field of the referenced ConfigMap will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the ConfigMap, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.","items":{"description":"Maps a string key to a path within a volume.","properties":{"key":{"description":"The key to project.","type":"string"},"mode":{"description":"Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.","format":"int32","type":"integer"},"path":{"description":"The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.","type":"string"}},"required":["key","path"],"type":"object"},"type":"array"},"name":{"description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names","type":"string"},"optional":{"description":"Specify whether the ConfigMap or its keys must be defined","type":"boolean"}},"type":"object"},"downwardAPI":{"description":"Represents downward API info for projecting into a projected volume. Note that this is identical to a downwardAPI volume source without the default mode.","properties":{"items":{"description":"Items is a list of DownwardAPIVolume file","items":{"description":"DownwardAPIVolumeFile represents information to create the file containing the pod field","properties":{"fieldRef":{"description":"ObjectFieldSelector selects an APIVersioned field of an object.","properties":{"apiVersion":{"description":"Version of the schema the FieldPath is written in terms of, defaults to \"v1\".","type":"string"},"fieldPath":{"description":"Path of the field to select in the specified API version.","type":"string"}},"required":["fieldPath"],"type":"object"},"mode":{"description":"Optional: mode bits used to set permissions on this file, must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.","format":"int32","type":"integer"},"path":{"description":"Required: Path is  the relative path name of the file to be created. Must not be absolute or contain the '..' path. Must be utf-8 encoded. The first item of the relative path must not start with '..'","type":"string"},"resourceFieldRef":{"description":"ResourceFieldSelector represents container resources (cpu, memory) and their output format","properties":{"containerName":{"description":"Container name: required for volumes, optional for env vars","type":"string"},"divisor":{"description":"Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.\n\nThe serialization format is:\n\n<quantity>        ::= <signedNumber><suffix>\n  (Note that <suffix> may be empty, from the \"\" case in <decimalSI>.)\n<digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= \"+\" | \"-\" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei\n  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)\n<decimalSI>       ::= m | \"\" | k | M | G | T | P | E\n  (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)\n<decimalExponent> ::= \"e\" <signedNumber> | \"E\" <signedNumber>\n\nNo matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.\n\nWhen a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.\n\nBefore serializing, Quantity will be put in \"canonical form\". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:\n  a. No precision is lost\n  b. No fractional digits will be emitted\n  c. The exponent (or suffix) is as large as possible.\nThe sign will be omitted unless the number is negative.\n\nExamples:\n  1.5 will be serialized as \"1500m\"\n  1.5Gi will be serialized as \"1536Mi\"\n\nNote that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.\n\nNon-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)\n\nThis format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.","type":"string"},"resource":{"description":"Required: resource to select","type":"string"}},"required":["resource"],"type":"object"}},"required":["path"],"type":"object"},"type":"array"}},"type":"object"},"secret":{"description":"Adapts a secret into a projected volume.\n\nThe contents of the target Secret's Data field will be presented in a projected volume as files using the keys in the Data field as the file names. Note that this is identical to a secret volume source without the default mode.","properties":{"items":{"description":"If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.","items":{"description":"Maps a string key to a path within a volume.","properties":{"key":{"description":"The key to project.","type":"string"},"mode":{"description":"Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.","format":"int32","type":"integer"},"path":{"description":"The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.","type":"string"}},"required":["key","path"],"type":"object"},"type":"array"},"name":{"description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names","type":"string"},"optional":{"description":"Specify whether the Secret or its key must be defined","type":"boolean"}},"type":"object"},"serviceAccountToken":{"description":"ServiceAccountTokenProjection represents a projected service account token volume. This projection can be used to insert a service account token into the pods runtime filesystem for use against APIs (Kubernetes API Server or otherwise).","properties":{"audience":{"description":"Audience is the intended audience of the token. A recipient of a token must identify itself with an identifier specified in the audience of the token, and otherwise should reject the token. The audience defaults to the identifier of the apiserver.","type":"string"},"expirationSeconds":{"description":"ExpirationSeconds is the requested duration of validity of the service account token. As the token approaches expiration, the kubelet volume plugin will proactively rotate the service account token. The kubelet will start trying to rotate the token if the token is older than 80 percent of its time to live or if the token is older than 24 hours.Defaults to 1 hour and must be at least 10 minutes.","format":"int64","type":"integer"},"path":{"description":"Path is the path relative to the mount point of the file to project the token into.","type":"string"}},"required":["path"],"type":"object"}},"type":"object"},"type":"array"}},"type":"object"},"secret":{"description":"Adapts a Secret into a volume.\n\nThe contents of the target Secret's Data field will be presented in a volume as files using the keys in the Data field as the file names. Secret volumes support ownership management and SELinux relabeling.","properties":{"defaultMode":{"description":"Optional: mode bits used to set permissions on created files by default. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. Defaults to 0644. Directories within the path are not affected by this setting. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.","format":"int32","type":"integer"},"items":{"description":"If unspecified, each key-value pair in the Data field of the referenced Secret will be projected into the volume as a file whose name is the key and content is the value. If specified, the listed keys will be projected into the specified paths, and unlisted keys will not be present. If a key is specified which is not present in the Secret, the volume setup will error unless it is marked optional. Paths must be relative and may not contain the '..' path or start with '..'.","items":{"description":"Maps a string key to a path within a volume.","properties":{"key":{"description":"The key to project.","type":"string"},"mode":{"description":"Optional: mode bits used to set permissions on this file. Must be an octal value between 0000 and 0777 or a decimal value between 0 and 511. YAML accepts both octal and decimal values, JSON requires decimal values for mode bits. If not specified, the volume defaultMode will be used. This might be in conflict with other options that affect the file mode, like fsGroup, and the result can be other mode bits set.","format":"int32","type":"integer"},"path":{"description":"The relative path of the file to map the key to. May not be an absolute path. May not contain the path element '..'. May not start with the string '..'.","type":"string"}},"required":["key","path"],"type":"object"},"type":"array"},"optional":{"description":"Specify whether the Secret or its keys must be defined","type":"boolean"},"secretName":{"description":"Name of the secret in the pod's namespace to use. More info: https://kubernetes.io/docs/concepts/storage/volumes#secret","type":"string"}},"type":"object"}}}
                        customInitContainers:
                          type: array
                          description: |
                            A list of custom application init containers that run within the shards cluster's Pods. The
                             custom init containers will run following the defined sequence as the end of
                             cluster's Pods init containers.
                            
                            The name used in this section will be prefixed with the string `custom-` so that when
                             referencing them in the .spec.containers section of SGInstanceProfile the name used
                             have to be prepended with the same prefix.
                             
                            See: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#container-v1-core
                          items: &containers-items
                            {"description":"A custom application init container that run within the cluster's Pods. The custom init\n containers will run following the defined sequence as the end of cluster's Pods init\n containers.\n\nThe name used in this section will be prefixed with the string `custom-` so that when\n referencing them in the .spec.containers section of SGInstanceProfile the name used\n have to be prepended with the same prefix.\n \nSee: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#container-v1-core\n","properties":{"args":{"description":"Arguments to the entrypoint. The docker image's CMD is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell","items":{"type":"string"},"type":"array"},"command":{"description":"Entrypoint array. Not executed within a shell. The docker image's ENTRYPOINT is used if this is not provided. Variable references $(VAR_NAME) are expanded using the container's environment. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell","items":{"type":"string"},"type":"array"},"env":{"description":"List of environment variables to set in the container. Cannot be updated.","items":{"description":"EnvVar represents an environment variable present in a Container.","properties":{"name":{"description":"Name of the environment variable. Must be a C_IDENTIFIER.","type":"string"},"value":{"description":"Variable references $(VAR_NAME) are expanded using the previously defined environment variables in the container and any service environment variables. If a variable cannot be resolved, the reference in the input string will be unchanged. Double $$ are reduced to a single $, which allows for escaping the $(VAR_NAME) syntax: i.e. \"$$(VAR_NAME)\" will produce the string literal \"$(VAR_NAME)\". Escaped references will never be expanded, regardless of whether the variable exists or not. Defaults to \"\".","type":"string"},"valueFrom":{"description":"EnvVarSource represents a source for the value of an EnvVar.","properties":{"configMapKeyRef":{"description":"Selects a key from a ConfigMap.","properties":{"key":{"description":"The key to select.","type":"string"},"name":{"description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names","type":"string"},"optional":{"description":"Specify whether the ConfigMap or its key must be defined","type":"boolean"}},"required":["key"],"type":"object"},"fieldRef":{"description":"ObjectFieldSelector selects an APIVersioned field of an object.","properties":{"apiVersion":{"description":"Version of the schema the FieldPath is written in terms of, defaults to \"v1\".","type":"string"},"fieldPath":{"description":"Path of the field to select in the specified API version.","type":"string"}},"required":["fieldPath"],"type":"object"},"resourceFieldRef":{"description":"ResourceFieldSelector represents container resources (cpu, memory) and their output format","properties":{"containerName":{"description":"Container name: required for volumes, optional for env vars","type":"string"},"divisor":{"description":"Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.\n\nThe serialization format is:\n\n<quantity>        ::= <signedNumber><suffix>\n  (Note that <suffix> may be empty, from the \"\" case in <decimalSI>.)\n<digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= \"+\" | \"-\" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei\n  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)\n<decimalSI>       ::= m | \"\" | k | M | G | T | P | E\n  (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)\n<decimalExponent> ::= \"e\" <signedNumber> | \"E\" <signedNumber>\n\nNo matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.\n\nWhen a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.\n\nBefore serializing, Quantity will be put in \"canonical form\". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:\n  a. No precision is lost\n  b. No fractional digits will be emitted\n  c. The exponent (or suffix) is as large as possible.\nThe sign will be omitted unless the number is negative.\n\nExamples:\n  1.5 will be serialized as \"1500m\"\n  1.5Gi will be serialized as \"1536Mi\"\n\nNote that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.\n\nNon-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)\n\nThis format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.","type":"string"},"resource":{"description":"Required: resource to select","type":"string"}},"required":["resource"],"type":"object"},"secretKeyRef":{"description":"SecretKeySelector selects a key of a Secret.","properties":{"key":{"description":"The key of the secret to select from.  Must be a valid secret key.","type":"string"},"name":{"description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names","type":"string"},"optional":{"description":"Specify whether the Secret or its key must be defined","type":"boolean"}},"required":["key"],"type":"object"}},"type":"object"}},"required":["name"],"type":"object"},"type":"array"},"envFrom":{"description":"List of sources to populate environment variables in the container. The keys defined within a source must be a C_IDENTIFIER. All invalid keys will be reported as an event when the container is starting. When a key exists in multiple sources, the value associated with the last source will take precedence. Values defined by an Env with a duplicate key will take precedence. Cannot be updated.","items":{"description":"EnvFromSource represents the source of a set of ConfigMaps","properties":{"configMapRef":{"description":"ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.\n\nThe contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.","properties":{"name":{"description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names","type":"string"},"optional":{"description":"Specify whether the ConfigMap must be defined","type":"boolean"}},"type":"object"},"prefix":{"description":"An optional identifier to prepend to each key in the ConfigMap. Must be a C_IDENTIFIER.","type":"string"},"secretRef":{"description":"SecretEnvSource selects a Secret to populate the environment variables with.\n\nThe contents of the target Secret's Data field will represent the key-value pairs as environment variables.","properties":{"name":{"description":"Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names","type":"string"},"optional":{"description":"Specify whether the Secret must be defined","type":"boolean"}},"type":"object"}},"type":"object"},"type":"array"},"image":{"description":"Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images This field is optional to allow higher level config management to default or override container images in workload controllers like Deployments and StatefulSets.","type":"string"},"imagePullPolicy":{"description":"Image pull policy. One of Always, Never, IfNotPresent. Defaults to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images","type":"string"},"lifecycle":{"description":"Lifecycle describes actions that the management system should take in response to container lifecycle events. For the PostStart and PreStop lifecycle handlers, management of the container blocks until the action is complete, unless the container process fails, in which case the handler is aborted.","properties":{"postStart":{"description":"Handler defines a specific action that should be taken","properties":{"exec":{"description":"ExecAction describes a \"run in container\" action.","properties":{"command":{"description":"Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.","items":{"type":"string"},"type":"array"}},"type":"object"},"httpGet":{"description":"HTTPGetAction describes an action based on HTTP Get requests.","properties":{"host":{"description":"Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.","type":"string"},"httpHeaders":{"description":"Custom headers to set in the request. HTTP allows repeated headers.","items":{"description":"HTTPHeader describes a custom header to be used in HTTP probes","properties":{"name":{"description":"The header field name","type":"string"},"value":{"description":"The header field value","type":"string"}},"required":["name","value"],"type":"object"},"type":"array"},"path":{"description":"Path to access on the HTTP server.","type":"string"},"port":{"description":"IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.","format":"int-or-string","type":"string"},"scheme":{"description":"Scheme to use for connecting to the host. Defaults to HTTP.","type":"string"}},"required":["port"],"type":"object"},"tcpSocket":{"description":"TCPSocketAction describes an action based on opening a socket","properties":{"host":{"description":"Optional: Host name to connect to, defaults to the pod IP.","type":"string"},"port":{"description":"IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.","format":"int-or-string","type":"string"}},"required":["port"],"type":"object"}},"type":"object"},"preStop":{"description":"Handler defines a specific action that should be taken","properties":{"exec":{"description":"ExecAction describes a \"run in container\" action.","properties":{"command":{"description":"Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.","items":{"type":"string"},"type":"array"}},"type":"object"},"httpGet":{"description":"HTTPGetAction describes an action based on HTTP Get requests.","properties":{"host":{"description":"Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.","type":"string"},"httpHeaders":{"description":"Custom headers to set in the request. HTTP allows repeated headers.","items":{"description":"HTTPHeader describes a custom header to be used in HTTP probes","properties":{"name":{"description":"The header field name","type":"string"},"value":{"description":"The header field value","type":"string"}},"required":["name","value"],"type":"object"},"type":"array"},"path":{"description":"Path to access on the HTTP server.","type":"string"},"port":{"description":"IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.","format":"int-or-string","type":"string"},"scheme":{"description":"Scheme to use for connecting to the host. Defaults to HTTP.","type":"string"}},"required":["port"],"type":"object"},"tcpSocket":{"description":"TCPSocketAction describes an action based on opening a socket","properties":{"host":{"description":"Optional: Host name to connect to, defaults to the pod IP.","type":"string"},"port":{"description":"IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.","format":"int-or-string","type":"string"}},"required":["port"],"type":"object"}},"type":"object"}},"type":"object"},"livenessProbe":{"description":"Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.","properties":{"exec":{"description":"ExecAction describes a \"run in container\" action.","properties":{"command":{"description":"Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.","items":{"type":"string"},"type":"array"}},"type":"object"},"failureThreshold":{"description":"Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.","format":"int32","type":"integer"},"httpGet":{"description":"HTTPGetAction describes an action based on HTTP Get requests.","properties":{"host":{"description":"Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.","type":"string"},"httpHeaders":{"description":"Custom headers to set in the request. HTTP allows repeated headers.","items":{"description":"HTTPHeader describes a custom header to be used in HTTP probes","properties":{"name":{"description":"The header field name","type":"string"},"value":{"description":"The header field value","type":"string"}},"required":["name","value"],"type":"object"},"type":"array"},"path":{"description":"Path to access on the HTTP server.","type":"string"},"port":{"description":"IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.","format":"int-or-string","type":"string"},"scheme":{"description":"Scheme to use for connecting to the host. Defaults to HTTP.","type":"string"}},"required":["port"],"type":"object"},"initialDelaySeconds":{"description":"Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes","format":"int32","type":"integer"},"periodSeconds":{"description":"How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.","format":"int32","type":"integer"},"successThreshold":{"description":"Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.","format":"int32","type":"integer"},"tcpSocket":{"description":"TCPSocketAction describes an action based on opening a socket","properties":{"host":{"description":"Optional: Host name to connect to, defaults to the pod IP.","type":"string"},"port":{"description":"IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.","format":"int-or-string","type":"string"}},"required":["port"],"type":"object"},"terminationGracePeriodSeconds":{"description":"Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.","format":"int64","type":"integer"},"timeoutSeconds":{"description":"Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes","format":"int32","type":"integer"}},"type":"object"},"name":{"description":"Name of the container specified as a DNS_LABEL. Each\n container in a pod must have a unique name (DNS_LABEL). Cannot\n be updated.\n\nThe name will be prefixed with the string `custom-` so that when referencing it\n in the .spec.containers section of SGInstanceProfile the name used have to be\n prepended with the same prefix.\n","type":"string"},"ports":{"description":"List of ports to expose from the container. Exposing a port here gives the system additional information about the network connections a container uses, but is primarily informational. Not specifying a port here DOES NOT prevent that port from being exposed. Any port which is listening on the default \"0.0.0.0\" address inside a container will be accessible from the network. Cannot be updated.","items":{"description":"ContainerPort represents a network port in a single container.","properties":{"containerPort":{"description":"Number of port to expose on the pod's IP address. This must be a valid port number, 0 < x < 65536.","format":"int32","type":"integer"},"hostIP":{"description":"What host IP to bind the external port to.","type":"string"},"hostPort":{"description":"Number of port to expose on the host. If specified, this must be a valid port number, 0 < x < 65536. If HostNetwork is specified, this must match ContainerPort. Most containers do not need this.","format":"int32","type":"integer"},"name":{"description":"If specified, this must be an IANA_SVC_NAME and unique within the pod. Each named port in a pod must have a unique name. Name for the port that can be referred to by services.","type":"string"},"protocol":{"description":"Protocol for port. Must be UDP, TCP, or SCTP. Defaults to \"TCP\".","type":"string"}},"required":["containerPort"],"type":"object"},"type":"array"},"readinessProbe":{"description":"Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.","properties":{"exec":{"description":"ExecAction describes a \"run in container\" action.","properties":{"command":{"description":"Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.","items":{"type":"string"},"type":"array"}},"type":"object"},"failureThreshold":{"description":"Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.","format":"int32","type":"integer"},"httpGet":{"description":"HTTPGetAction describes an action based on HTTP Get requests.","properties":{"host":{"description":"Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.","type":"string"},"httpHeaders":{"description":"Custom headers to set in the request. HTTP allows repeated headers.","items":{"description":"HTTPHeader describes a custom header to be used in HTTP probes","properties":{"name":{"description":"The header field name","type":"string"},"value":{"description":"The header field value","type":"string"}},"required":["name","value"],"type":"object"},"type":"array"},"path":{"description":"Path to access on the HTTP server.","type":"string"},"port":{"description":"IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.","format":"int-or-string","type":"string"},"scheme":{"description":"Scheme to use for connecting to the host. Defaults to HTTP.","type":"string"}},"required":["port"],"type":"object"},"initialDelaySeconds":{"description":"Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes","format":"int32","type":"integer"},"periodSeconds":{"description":"How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.","format":"int32","type":"integer"},"successThreshold":{"description":"Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.","format":"int32","type":"integer"},"tcpSocket":{"description":"TCPSocketAction describes an action based on opening a socket","properties":{"host":{"description":"Optional: Host name to connect to, defaults to the pod IP.","type":"string"},"port":{"description":"IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.","format":"int-or-string","type":"string"}},"required":["port"],"type":"object"},"terminationGracePeriodSeconds":{"description":"Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.","format":"int64","type":"integer"},"timeoutSeconds":{"description":"Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes","format":"int32","type":"integer"}},"type":"object"},"resources":{"description":"ResourceRequirements describes the compute resource requirements.","properties":{"limits":{"additionalProperties":{"description":"Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.\n\nThe serialization format is:\n\n<quantity>        ::= <signedNumber><suffix>\n  (Note that <suffix> may be empty, from the \"\" case in <decimalSI>.)\n<digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= \"+\" | \"-\" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei\n  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)\n<decimalSI>       ::= m | \"\" | k | M | G | T | P | E\n  (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)\n<decimalExponent> ::= \"e\" <signedNumber> | \"E\" <signedNumber>\n\nNo matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.\n\nWhen a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.\n\nBefore serializing, Quantity will be put in \"canonical form\". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:\n  a. No precision is lost\n  b. No fractional digits will be emitted\n  c. The exponent (or suffix) is as large as possible.\nThe sign will be omitted unless the number is negative.\n\nExamples:\n  1.5 will be serialized as \"1500m\"\n  1.5Gi will be serialized as \"1536Mi\"\n\nNote that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.\n\nNon-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)\n\nThis format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.","type":"string"},"description":"Limits describes the maximum amount of compute resources allowed. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/","type":"object"},"requests":{"additionalProperties":{"description":"Quantity is a fixed-point representation of a number. It provides convenient marshaling/unmarshaling in JSON and YAML, in addition to String() and AsInt64() accessors.\n\nThe serialization format is:\n\n<quantity>        ::= <signedNumber><suffix>\n  (Note that <suffix> may be empty, from the \"\" case in <decimalSI>.)\n<digit>           ::= 0 | 1 | ... | 9 <digits>          ::= <digit> | <digit><digits> <number>          ::= <digits> | <digits>.<digits> | <digits>. | .<digits> <sign>            ::= \"+\" | \"-\" <signedNumber>    ::= <number> | <sign><number> <suffix>          ::= <binarySI> | <decimalExponent> | <decimalSI> <binarySI>        ::= Ki | Mi | Gi | Ti | Pi | Ei\n  (International System of units; See: http://physics.nist.gov/cuu/Units/binary.html)\n<decimalSI>       ::= m | \"\" | k | M | G | T | P | E\n  (Note that 1024 = 1Ki but 1000 = 1k; I didn't choose the capitalization.)\n<decimalExponent> ::= \"e\" <signedNumber> | \"E\" <signedNumber>\n\nNo matter which of the three exponent forms is used, no quantity may represent a number greater than 2^63-1 in magnitude, nor may it have more than 3 decimal places. Numbers larger or more precise will be capped or rounded up. (E.g.: 0.1m will rounded up to 1m.) This may be extended in the future if we require larger or smaller quantities.\n\nWhen a Quantity is parsed from a string, it will remember the type of suffix it had, and will use the same type again when it is serialized.\n\nBefore serializing, Quantity will be put in \"canonical form\". This means that Exponent/suffix will be adjusted up or down (with a corresponding increase or decrease in Mantissa) such that:\n  a. No precision is lost\n  b. No fractional digits will be emitted\n  c. The exponent (or suffix) is as large as possible.\nThe sign will be omitted unless the number is negative.\n\nExamples:\n  1.5 will be serialized as \"1500m\"\n  1.5Gi will be serialized as \"1536Mi\"\n\nNote that the quantity will NEVER be internally represented by a floating point number. That is the whole point of this exercise.\n\nNon-canonical values will still parse as long as they are well formed, but will be re-emitted in their canonical form. (So always use canonical form, or don't diff.)\n\nThis format is intended to make it difficult to use these numbers without writing some sort of special handling code in the hopes that that will cause implementors to also use a fixed point implementation.","type":"string"},"description":"Requests describes the minimum amount of compute resources required. If Requests is omitted for a container, it defaults to Limits if that is explicitly specified, otherwise to an implementation-defined value. More info: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/","type":"object"}},"type":"object"},"securityContext":{"description":"SecurityContext holds security configuration that will be applied to a container. Some fields are present in both SecurityContext and PodSecurityContext.  When both are set, the values in SecurityContext take precedence.","properties":{"allowPrivilegeEscalation":{"description":"AllowPrivilegeEscalation controls whether a process can gain more privileges than its parent process. This bool directly controls if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN","type":"boolean"},"capabilities":{"description":"Adds and removes POSIX capabilities from running containers.","properties":{"add":{"description":"Added capabilities","items":{"type":"string"},"type":"array"},"drop":{"description":"Removed capabilities","items":{"type":"string"},"type":"array"}},"type":"object"},"privileged":{"description":"Run container in privileged mode. Processes in privileged containers are essentially equivalent to root on the host. Defaults to false.","type":"boolean"},"procMount":{"description":"procMount denotes the type of proc mount to use for the containers. The default is DefaultProcMount which uses the container runtime defaults for readonly paths and masked paths. This requires the ProcMountType feature flag to be enabled.","type":"string"},"readOnlyRootFilesystem":{"description":"Whether this container has a read-only root filesystem. Default is false.","type":"boolean"},"runAsGroup":{"description":"The GID to run the entrypoint of the container process. Uses runtime default if unset. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.","format":"int64","type":"integer"},"runAsNonRoot":{"description":"Indicates that the container must run as a non-root user. If true, the Kubelet will validate the image at runtime to ensure that it does not run as UID 0 (root) and fail to start the container if it does. If unset or false, no such validation will be performed. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.","type":"boolean"},"runAsUser":{"description":"The UID to run the entrypoint of the container process. Defaults to user specified in image metadata if unspecified. May also be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.","format":"int64","type":"integer"},"seLinuxOptions":{"description":"SELinuxOptions are the labels to be applied to the container","properties":{"level":{"description":"Level is SELinux level label that applies to the container.","type":"string"},"role":{"description":"Role is a SELinux role label that applies to the container.","type":"string"},"type":{"description":"Type is a SELinux type label that applies to the container.","type":"string"},"user":{"description":"User is a SELinux user label that applies to the container.","type":"string"}},"type":"object"},"seccompProfile":{"description":"SeccompProfile defines a pod/container's seccomp profile settings. Only one profile source may be set.","properties":{"localhostProfile":{"description":"localhostProfile indicates a profile defined in a file on the node should be used. The profile must be preconfigured on the node to work. Must be a descending path, relative to the kubelet's configured seccomp profile location. Must only be set if type is \"Localhost\".","type":"string"},"type":{"description":"type indicates which kind of seccomp profile will be applied. Valid options are:\n\nLocalhost - a profile defined in a file on the node should be used. RuntimeDefault - the container runtime default profile should be used. Unconfined - no profile should be applied.","type":"string"}},"required":["type"],"type":"object"},"windowsOptions":{"description":"WindowsSecurityContextOptions contain Windows-specific options and credentials.","properties":{"gmsaCredentialSpec":{"description":"GMSACredentialSpec is where the GMSA admission webhook (https://github.com/kubernetes-sigs/windows-gmsa) inlines the contents of the GMSA credential spec named by the GMSACredentialSpecName field.","type":"string"},"gmsaCredentialSpecName":{"description":"GMSACredentialSpecName is the name of the GMSA credential spec to use.","type":"string"},"hostProcess":{"description":"HostProcess determines if a container should be run as a 'Host Process' container. This field is alpha-level and will only be honored by components that enable the WindowsHostProcessContainers feature flag. Setting this field without the feature flag will result in errors when validating the Pod. All of a Pod's containers must have the same effective HostProcess value (it is not allowed to have a mix of HostProcess containers and non-HostProcess containers).  In addition, if HostProcess is true then HostNetwork must also be set to true.","type":"boolean"},"runAsUserName":{"description":"The UserName in Windows to run the entrypoint of the container process. Defaults to the user specified in image metadata if unspecified. May also be set in PodSecurityContext. If set in both SecurityContext and PodSecurityContext, the value specified in SecurityContext takes precedence.","type":"string"}},"type":"object"}},"type":"object"},"startupProbe":{"description":"Probe describes a health check to be performed against a container to determine whether it is alive or ready to receive traffic.","properties":{"exec":{"description":"ExecAction describes a \"run in container\" action.","properties":{"command":{"description":"Command is the command line to execute inside the container, the working directory for the command  is root ('/') in the container's filesystem. The command is simply exec'd, it is not run inside a shell, so traditional shell instructions ('|', etc) won't work. To use a shell, you need to explicitly call out to that shell. Exit status of 0 is treated as live/healthy and non-zero is unhealthy.","items":{"type":"string"},"type":"array"}},"type":"object"},"failureThreshold":{"description":"Minimum consecutive failures for the probe to be considered failed after having succeeded. Defaults to 3. Minimum value is 1.","format":"int32","type":"integer"},"httpGet":{"description":"HTTPGetAction describes an action based on HTTP Get requests.","properties":{"host":{"description":"Host name to connect to, defaults to the pod IP. You probably want to set \"Host\" in httpHeaders instead.","type":"string"},"httpHeaders":{"description":"Custom headers to set in the request. HTTP allows repeated headers.","items":{"description":"HTTPHeader describes a custom header to be used in HTTP probes","properties":{"name":{"description":"The header field name","type":"string"},"value":{"description":"The header field value","type":"string"}},"required":["name","value"],"type":"object"},"type":"array"},"path":{"description":"Path to access on the HTTP server.","type":"string"},"port":{"description":"IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.","format":"int-or-string","type":"string"},"scheme":{"description":"Scheme to use for connecting to the host. Defaults to HTTP.","type":"string"}},"required":["port"],"type":"object"},"initialDelaySeconds":{"description":"Number of seconds after the container has started before liveness probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes","format":"int32","type":"integer"},"periodSeconds":{"description":"How often (in seconds) to perform the probe. Default to 10 seconds. Minimum value is 1.","format":"int32","type":"integer"},"successThreshold":{"description":"Minimum consecutive successes for the probe to be considered successful after having failed. Defaults to 1. Must be 1 for liveness and startup. Minimum value is 1.","format":"int32","type":"integer"},"tcpSocket":{"description":"TCPSocketAction describes an action based on opening a socket","properties":{"host":{"description":"Optional: Host name to connect to, defaults to the pod IP.","type":"string"},"port":{"description":"IntOrString is a type that can hold an int32 or a string.  When used in JSON or YAML marshalling and unmarshalling, it produces or consumes the inner type.  This allows you to have, for example, a JSON field that can accept a name or number.","format":"int-or-string","type":"string"}},"required":["port"],"type":"object"},"terminationGracePeriodSeconds":{"description":"Optional duration in seconds the pod needs to terminate gracefully upon probe failure. The grace period is the duration in seconds after the processes running in the pod are sent a termination signal and the time when the processes are forcibly halted with a kill signal. Set this value longer than the expected cleanup time for your process. If this value is nil, the pod's terminationGracePeriodSeconds will be used. Otherwise, this value overrides the value provided by the pod spec. Value must be non-negative integer. The value zero indicates stop immediately via the kill signal (no opportunity to shut down). This is a beta field and requires enabling ProbeTerminationGracePeriod feature gate. Minimum value is 1. spec.terminationGracePeriodSeconds is used if unset.","format":"int64","type":"integer"},"timeoutSeconds":{"description":"Number of seconds after which the probe times out. Defaults to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes","format":"int32","type":"integer"}},"type":"object"},"stdin":{"description":"Whether this container should allocate a buffer for stdin in the container runtime. If this is not set, reads from stdin in the container will always result in EOF. Default is false.","type":"boolean"},"stdinOnce":{"description":"Whether the container runtime should close the stdin channel after it has been opened by a single attach. When stdin is true the stdin stream will remain open across multiple attach sessions. If stdinOnce is set to true, stdin is opened on container start, is empty until the first client attaches to stdin, and then remains open and accepts data until the client disconnects, at which time stdin is closed and remains closed until the container is restarted. If this flag is false, a container processes that reads from stdin will never receive an EOF. Default is false","type":"boolean"},"terminationMessagePath":{"description":"Optional: Path at which the file to which the container's termination message will be written is mounted into the container's filesystem. Message written is intended to be brief final status, such as an assertion failure message. Will be truncated by the node if greater than 4096 bytes. The total message length across all containers will be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated.","type":"string"},"terminationMessagePolicy":{"description":"Indicate how the termination message should be populated. File will use the contents of terminationMessagePath to populate the container status message on both success and failure. FallbackToLogsOnError will use the last chunk of container log output if the termination message file is empty and the container exited with an error. The log output is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults to File. Cannot be updated.","type":"string"},"tty":{"description":"Whether this container should allocate a TTY for itself, also requires 'stdin' to be true. Default is false.","type":"boolean"},"volumeDevices":{"description":"volumeDevices is the list of block devices to be used by the container.","items":{"description":"volumeDevice describes a mapping of a raw block device within a container.","properties":{"devicePath":{"description":"devicePath is the path inside of the container that the device will be mapped to.","type":"string"},"name":{"description":"name must match the name of a persistentVolumeClaim in the pod","type":"string"}},"required":["name","devicePath"],"type":"object"},"type":"array"},"volumeMounts":{"description":"Pod volumes to mount into the container's filesystem. Cannot be updated.","items":{"description":"VolumeMount describes a mounting of a Volume within a container.","properties":{"mountPath":{"description":"Path within the container at which the volume should be mounted.  Must not contain ':'.","type":"string"},"mountPropagation":{"description":"mountPropagation determines how mounts are propagated from the host to container and the other way around. When not set, MountPropagationNone is used. This field is beta in 1.10.","type":"string"},"name":{"description":"This must match the Name of a Volume.","type":"string"},"readOnly":{"description":"Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.","type":"boolean"},"subPath":{"description":"Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).","type":"string"},"subPathExpr":{"description":"Expanded path within the volume from which the container's volume should be mounted. Behaves similarly to SubPath but environment variable references $(VAR_NAME) are expanded using the container's environment. Defaults to \"\" (volume's root). SubPathExpr and SubPath are mutually exclusive.","type":"string"}},"required":["name","mountPath"],"type":"object"},"type":"array"},"workingDir":{"description":"Container's working directory. If not specified, the container runtime's default will be used, which might be configured in the container image. Cannot be updated.","type":"string"}},"required":["name"],"type":"object"}
                        customContainers:
                          type: array
                          description: |
                            A list of custom application containers that run within the coordinator cluster's Pods.
                            
                            The name used in this section will be prefixed with the string `custom-` so that when
                             referencing them in the .spec.containers section of SGInstanceProfile the name used
                             have to be prepended with the same prefix.
                             
                            See: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#container-v1-core
                          items: *containers-items
                      required: ["persistentVolume"]
                    configurations:
                      type: object
                      description: |
                        Coordinator custom configurations.
                      properties:
                        sgPostgresConfig:
                          type: string
                          description: |
                            Name of the [SGPostgresConfig](https://stackgres.io/doc/latest/reference/crd/sgpgconfig) used for the cluster. It must exist. When not set, a default Postgres config, for the major version selected, is used.
                        sgPoolingConfig:
                          type: string
                          description: |
                            Name of the [SGPoolingConfig](https://stackgres.io/doc/latest/reference/crd/sgpoolconfig) used for this cluster. Each pod contains a sidecar with a connection pooler (currently: [PgBouncer](https://www.pgbouncer.org/)). The connection pooler is implemented as a sidecar.
    
                            If not set, a default configuration will be used. Disabling connection pooling altogether is possible if the disableConnectionPooling property of the pods object is set to true.
                    replication:
                      type: object
                      description: |
                        This section allows to configure the global Postgres replication mode.
    
                        The main replication group is implicit and contains the total number of instances less the sum of all
                         instances in other replication groups.
    
                        The total number of instances is always specified by `.spec.instances`.
                      properties:
                        mode:
                          type: string
                          description: |
                            The replication mode applied to the whole cluster.
                            Possible values are:
                            * `async`
                            * `sync`
                            * `strict-sync`
                            * `sync-all` (default)
                            * `strict-sync-all`
                            
                            ### `async` Mode
                            
                            When in asynchronous mode the cluster is allowed to lose some committed transactions.
                             When the primary server fails or becomes unavailable for any other reason a sufficiently healthy standby
                             will automatically be promoted to primary. Any transactions that have not been replicated to that standby
                             remain in a "forked timeline" on the primary, and are effectively unrecoverable (the data is still there,
                             but recovering it requires a manual recovery effort by data recovery specialists).
                            
                            ### `sync` Mode
                            
                            When in synchronous mode a standby will not be promoted unless it is certain that the standby contains all
                             transactions that may have returned a successful commit status to client (clients can change the behavior
                             per transaction using PostgreSQL’s `synchronous_commit` setting. Transactions with `synchronous_commit`
                             values of `off` and `local` may be lost on fail over, but will not be blocked by replication delays). This
                             means that the system may be unavailable for writes even though some servers are available. System
                             administrators can still use manual failover commands to promote a standby even if it results in transaction
                             loss.
                            
                            Synchronous mode does not guarantee multi node durability of commits under all circumstances. When no suitable
                             standby is available, primary server will still accept writes, but does not guarantee their replication. When
                             the primary fails in this mode no standby will be promoted. When the host that used to be the primary comes
                             back it will get promoted automatically, unless system administrator performed a manual failover. This behavior
                             makes synchronous mode usable with 2 node clusters.
                            
                            When synchronous mode is used and a standby crashes, commits will block until the primary is switched to standalone
                             mode. Manually shutting down or restarting a standby will not cause a commit service interruption. Standby will
                             signal the primary to release itself from synchronous standby duties before PostgreSQL shutdown is initiated.
                            
                            ### `strict-sync` Mode
                            
                            When it is absolutely necessary to guarantee that each write is stored durably on at least two nodes, use the strict
                             synchronous mode. This mode prevents synchronous replication to be switched off on the primary when no synchronous
                             standby candidates are available. As a downside, the primary will not be available for writes (unless the Postgres
                             transaction explicitly turns off `synchronous_mode` parameter), blocking all client write requests until at least one
                             synchronous replica comes up.
    
                            **Note**: Because of the way synchronous replication is implemented in PostgreSQL it is still possible to lose
                             transactions even when using strict synchronous mode. If the PostgreSQL backend is cancelled while waiting to acknowledge
                             replication (as a result of packet cancellation due to client timeout or backend failure) transaction changes become
                             visible for other backends. Such changes are not yet replicated and may be lost in case of standby promotion.
                            
                            ### `sync-all` Mode
                            
                            The same as `sync` but `syncInstances` is ignored and the number of synchronous instances is equals to the total number
                             of instances less one.
                            
                            ### `strict-sync-all` Mode
                            
                            The same as `strict-sync` but `syncInstances` is ignored and the number of synchronous instances is equals to the total number
                             of instances less one.
                        syncInstances:
                          type: integer
                          minimum: 1
                          description: |
                            Number of synchronous standby instances. Must be less than the total number of instances. It is set to 1 by default.
                             Only setteable if mode is `sync` or `strict-sync`.
                    metadata:
                      type: object
                      description: Metadata information from coordinator cluster created resources.
                      properties:
                        annotations:
                          type: object
                          description: Custom Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/) to be passed to resources created and managed by StackGres.
                          properties:
                            allResources:
                              type: object
                              description: Annotations to attach to any resource created or managed by StackGres.
                              additionalProperties:
                                type: string
                            clusterPods:
                              type: object
                              description: Annotations to attach to pods created or managed by StackGres.
                              additionalProperties:
                                type: string
                            services:
                              type: object
                              description: Annotations to attach to all services created or managed by StackGres.
                              additionalProperties:
                                type: string
                            primaryService:
                              type: object
                              description: Custom Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/) passed to the `-primary` service.
                              additionalProperties:
                                type: string
                            replicasService:
                              type: object
                              description: Custom Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/) passed to the `-replicas` service.
                              additionalProperties:
                                type: string
                        labels:
                          type: object
                          description: Custom Kubernetes [labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/) to be passed to resources created and managed by StackGres.
                          properties:
                            clusterPods:
                              type: object
                              description: Labels to attach to Pods created or managed by StackGres.
                              additionalProperties:
                                type: string 
                            services:
                              type: object
                              description: Labels to attach to Services and Endpoints created or managed by StackGres.
                              additionalProperties:
                                type: string 
                  required: ["instances", "pods"]
                shards:
                  type: object
                  description: |
                    The shards are a group of StackGres clusters where the partitioned data chunks are stored.
                    
                    When referring to the cluster in the descriptions belove it apply to any shard's StackGres cluster.
                  properties:
                    clusters:
                      type: integer
                      minimum: 1
                      maximum: 16
                      description: |
                        Number of shard's StackGres clusters
                    instancesPerCluster:
                      type: integer
                      minimum: 1
                      maximum: 16
                      description: |
                        Number of StackGres instances per shard's StackGres cluster. Each instance contains one Postgres server.
                         Out of all of the Postgres servers, one is elected as the primary, the rest remain as read-only replicas.
                    sgInstanceProfile:
                      type: string
                      description: |
                        Name of the [SGInstanceProfile](https://stackgres.io/doc/latest/04-postgres-cluster-management/03-resource-profiles/). A SGInstanceProfile defines CPU and memory limits. Must exist before creating a cluster. When no profile is set, a default (currently: 1 core, 2 GiB RAM) one is used.
                    managedSql:
                      type: object
                      description: |
                        This section allows to reference SQL scripts that will be applied to the cluster live.
                      properties:
                        continueOnSGScriptError:
                          type: boolean
                          description: If true, when any entry of any `SGScript` fail will not prevent subsequent `SGScript` from being executed. By default is `false`.
                        scripts:
                          type: array
                          description: |
                            A list of script references that will be executed in sequence.
                          items:
                            type: object
                            description: |
                              A script reference. Each version of each entry of the script referenced will be executed exactly once following the sequence defined
                               in the referenced script and skipping any script entry that have already been executed.
                            properties:
                              id:
                                type: integer
                                description: The id is immutable and must be unique across all the `SGScript` entries. It is replaced by the operator and is used to identify the `SGScript` entry.
                              sgScript:
                                type: string
                                description: A reference to an `SGScript`
                    pods:
                      type: object
                      description: Cluster pod's configuration.
                      properties:
                        persistentVolume:
                          type: object
                          description: Pod's persistent volume configuration.
                          properties:
                            size:
                              type: string
                              pattern: '^[0-9]+(\.[0-9]+)?(Mi|Gi|Ti)$'
                              description: |
                                Size of the PersistentVolume set for each instance of the cluster. This size is specified either in Mebibytes, Gibibytes or Tebibytes (multiples of 2^20, 2^30 or 2^40, respectively).
                            storageClass:
                              type: string
                              description: |
                                Name of an existing StorageClass in the Kubernetes cluster, used to create the PersistentVolumes for the instances of the cluster.
                          required: ["size"]
                        disableConnectionPooling:
                          type: boolean
                          description: If set to `true`, avoids creating a connection pooling (using [PgBouncer](https://www.pgbouncer.org/)) sidecar.
                        disableMetricsExporter:
                          type: boolean
                          description: If set to `true`, avoids creating the Prometheus exporter sidecar. Recommended when there's no intention to use Prometheus for monitoring.
                        disablePostgresUtil:
                          type: boolean
                          description: If set to `true`, avoids creating the `postgres-util` sidecar. This sidecar contains usual Postgres administration utilities *that are not present in the main (`patroni`) container*, like `psql`. Only disable if you know what you are doing.
                        resources:
                          type: object
                          description: Pod custom resources configuration.
                          properties:
                            enableClusterLimitsRequirements:
                              type: boolean
                              description: When enabled resource limits for containers other than the patroni container wil be set just like for patroni contianer as specified in the SGInstanceProfile.
                        scheduling: *scheduling
                        managementPolicy:
                          type: string
                          description: |
                            managementPolicy controls how pods are created during initial scale up, when replacing pods
                             on nodes, or when scaling down. The default policy is `OrderedReady`, where pods are created
                             in increasing order (pod-0, then pod-1, etc) and the controller will wait until each pod is
                             ready before continuing. When scaling down, the pods are removed in the opposite order.
                             The alternative policy is `Parallel` which will create pods in parallel to match the desired
                             scale without waiting, and on scale down will delete all pods at once.
                        customVolumes:
                          type: array
                          description: |
                            A list of custom volumes that may be used along with any container defined in
                             customInitContainers or customContainers sections for the shards.
                            
                            The name used in this section will be prefixed with the string `custom-` so that when
                             referencing them in the customInitContainers or customContainers sections the name used
                             have to be prepended with the same prefix.
                            
                            Only the following volume types are allowed: configMap, downwardAPI, emptyDir,
                             gitRepo, glusterfs, hostPath, nfs, projected and secret
                             
                            See: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#volume-v1-core
                          items: *volume-items
                        customInitContainers:
                          type: array
                          description: |
                            A list of custom application init containers that run within the coordinator cluster's Pods. The
                             custom init containers will run following the defined sequence as the end of
                             cluster's Pods init containers.
                            
                            The name used in this section will be prefixed with the string `custom-` so that when
                             referencing them in the .spec.containers section of SGInstanceProfile the name used
                             have to be prepended with the same prefix.
                             
                            See: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#container-v1-core
                          items: *containers-items
                        customContainers:
                          type: array
                          description: |
                            A list of custom application containers that run within the shards cluster's Pods.
                            
                            The name used in this section will be prefixed with the string `custom-` so that when
                             referencing them in the .spec.containers section of SGInstanceProfile the name used
                             have to be prepended with the same prefix.
                             
                            See: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#container-v1-core
                          items: *containers-items
                      required: ["persistentVolume"]
                    configurations:
                      type: object
                      description: |
                        Shards custom configurations.
                      properties:
                        sgPostgresConfig:
                          type: string
                          description: |
                            Name of the [SGPostgresConfig](https://stackgres.io/doc/latest/reference/crd/sgpgconfig) used for the cluster. It must exist. When not set, a default Postgres config, for the major version selected, is used.
                        sgPoolingConfig:
                          type: string
                          description: |
                            Name of the [SGPoolingConfig](https://stackgres.io/doc/latest/reference/crd/sgpoolconfig) used for this cluster. Each pod contains a sidecar with a connection pooler (currently: [PgBouncer](https://www.pgbouncer.org/)). The connection pooler is implemented as a sidecar.
    
                            If not set, a default configuration will be used. Disabling connection pooling altogether is possible if the disableConnectionPooling property of the pods object is set to true.
                    replication: *replication
                    metadata:
                      type: object
                      description: Metadata information from shards cluster created resources.
                      properties:
                        annotations:
                          type: object
                          description: Custom Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/) to be passed to resources created and managed by StackGres.
                          properties:
                            allResources:
                              type: object
                              description: Annotations to attach to any resource created or managed by StackGres.
                              additionalProperties:
                                type: string
                            clusterPods:
                              type: object
                              description: Annotations to attach to pods created or managed by StackGres.
                              additionalProperties:
                                type: string
                            services:
                              type: object
                              description: Annotations to attach to all services created or managed by StackGres.
                              additionalProperties:
                                type: string
                            primaryService:
                              type: object
                              description: Custom Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/) passed to the `-primary` service.
                              additionalProperties:
                                type: string
                            replicasService:
                              type: object
                              description: Custom Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/) passed to the `-replicas` service.
                              additionalProperties:
                                type: string
                        labels:
                          type: object
                          description: Custom Kubernetes [labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/) to be passed to resources created and managed by StackGres.
                          properties:
                            clusterPods:
                              type: object
                              description: Labels to attach to Pods created or managed by StackGres.
                              additionalProperties:
                                type: string 
                            services:
                              type: object
                              description: Labels to attach to Services and Endpoints created or managed by StackGres.
                              additionalProperties:
                                type: string 
                    overrides:
                      type: array
                      description: |
                        Any shard can be overriden by this section.
                      items:
                        type: object
                        description: |
                          Any shard can be overriden by this section.
                        properties:
                          index:
                            type: integer
                            minimum: 0
                            maximum: 15
                            description: |
                              Identifier of the shard StackGres cluster to override (starting from 0)
                          instancesPerCluster:
                            type: integer
                            minimum: 1
                            maximum: 16
                            description: |
                              Number of StackGres instances per shard's StackGres cluster. Each instance contains one Postgres server.
                               Out of all of the Postgres servers, one is elected as the primary, the rest remain as read-only replicas.
                          sgInstanceProfile:
                            type: string
                            description: |
                              Name of the [SGInstanceProfile](https://stackgres.io/doc/latest/04-postgres-cluster-management/03-resource-profiles/). A SGInstanceProfile defines CPU and memory limits. Must exist before creating a cluster. When no profile is set, a default (currently: 1 core, 2 GiB RAM) one is used.
                          managedSql:
                            type: object
                            description: |
                              This section allows to reference SQL scripts that will be applied to the cluster live.
                            properties:
                              continueOnSGScriptError:
                                type: boolean
                                description: If true, when any entry of any `SGScript` fail will not prevent subsequent `SGScript` from being executed. By default is `false`.
                              scripts:
                                type: array
                                description: |
                                  A list of script references that will be executed in sequence.
                                items:
                                  type: object
                                  description: |
                                    A script reference. Each version of each entry of the script referenced will be executed exactly once following the sequence defined
                                     in the referenced script and skipping any script entry that have already been executed.
                                  properties:
                                    id:
                                      type: integer
                                      description: The id is immutable and must be unique across all the `SGScript` entries. It is replaced by the operator and is used to identify the `SGScript` entry.
                                    sgScript:
                                      type: string
                                      description: A reference to an `SGScript`
                          pods:
                            type: object
                            description: Cluster pod's configuration.
                            properties:
                              persistentVolume:
                                type: object
                                description: Pod's persistent volume configuration.
                                properties:
                                  size:
                                    type: string
                                    pattern: '^[0-9]+(\.[0-9]+)?(Mi|Gi|Ti)$'
                                    description: |
                                      Size of the PersistentVolume set for each instance of the cluster. This size is specified either in Mebibytes, Gibibytes or Tebibytes (multiples of 2^20, 2^30 or 2^40, respectively).
                                  storageClass:
                                    type: string
                                    description: |
                                      Name of an existing StorageClass in the Kubernetes cluster, used to create the PersistentVolumes for the instances of the cluster.
                                required: ["size"]
                              disableConnectionPooling:
                                type: boolean
                                description: If set to `true`, avoids creating a connection pooling (using [PgBouncer](https://www.pgbouncer.org/)) sidecar.
                              disableMetricsExporter:
                                type: boolean
                                description: If set to `true`, avoids creating the Prometheus exporter sidecar. Recommended when there's no intention to use Prometheus for monitoring.
                              disablePostgresUtil:
                                type: boolean
                                description: If set to `true`, avoids creating the `postgres-util` sidecar. This sidecar contains usual Postgres administration utilities *that are not present in the main (`patroni`) container*, like `psql`. Only disable if you know what you are doing.
                              resources:
                                type: object
                                description: Pod custom resources configuration.
                                properties:
                                  enableClusterLimitsRequirements:
                                    type: boolean
                                    description: When enabled resource limits for containers other than the patroni container wil be set just like for patroni contianer as specified in the SGInstanceProfile.
                              scheduling: *scheduling
                              managementPolicy:
                                type: string
                                description: |
                                  managementPolicy controls how pods are created during initial scale up, when replacing pods
                                   on nodes, or when scaling down. The default policy is `OrderedReady`, where pods are created
                                   in increasing order (pod-0, then pod-1, etc) and the controller will wait until each pod is
                                   ready before continuing. When scaling down, the pods are removed in the opposite order.
                                   The alternative policy is `Parallel` which will create pods in parallel to match the desired
                                   scale without waiting, and on scale down will delete all pods at once.
                              customVolumes:
                                type: array
                                description: |
                                  A list of custom volumes that may be used along with any container defined in
                                   customInitContainers or customContainers sections for the shards.
                                  
                                  The name used in this section will be prefixed with the string `custom-` so that when
                                   referencing them in the customInitContainers or customContainers sections the name used
                                   have to be prepended with the same prefix.
                                  
                                  Only the following volume types are allowed: configMap, downwardAPI, emptyDir,
                                   gitRepo, glusterfs, hostPath, nfs, projected and secret
                                   
                                  See: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#volume-v1-core
                                items: *volume-items
                              customInitContainers:
                                type: array
                                description: |
                                  A list of custom application init containers that run within the coordinator cluster's Pods. The
                                   custom init containers will run following the defined sequence as the end of
                                   cluster's Pods init containers.
                                  
                                  The name used in this section will be prefixed with the string `custom-` so that when
                                   referencing them in the .spec.containers section of SGInstanceProfile the name used
                                   have to be prepended with the same prefix.
                                   
                                  See: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#container-v1-core
                                items: *containers-items
                              customContainers:
                                type: array
                                description: |
                                  A list of custom application containers that run within the shards cluster's Pods.
                                  
                                  The name used in this section will be prefixed with the string `custom-` so that when
                                   referencing them in the .spec.containers section of SGInstanceProfile the name used
                                   have to be prepended with the same prefix.
                                   
                                  See: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#container-v1-core
                                items: *containers-items
                          configurations:
                            type: object
                            description: |
                              Shards custom configurations.
                            properties:
                              sgPostgresConfig:
                                type: string
                                description: |
                                  Name of the [SGPostgresConfig](https://stackgres.io/doc/latest/reference/crd/sgpgconfig) used for the cluster. It must exist. When not set, a default Postgres config, for the major version selected, is used.
                              sgPoolingConfig:
                                type: string
                                description: |
                                  Name of the [SGPoolingConfig](https://stackgres.io/doc/latest/reference/crd/sgpoolconfig) used for this cluster. Each pod contains a sidecar with a connection pooler (currently: [PgBouncer](https://www.pgbouncer.org/)). The connection pooler is implemented as a sidecar.
          
                                  If not set, a default configuration will be used. Disabling connection pooling altogether is possible if the disableConnectionPooling property of the pods object is set to true.
                          replication: *replication
                          metadata:
                            type: object
                            description: Metadata information from shards cluster created resources.
                            properties:
                              annotations:
                                type: object
                                description: Custom Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/) to be passed to resources created and managed by StackGres.
                                properties:
                                  allResources:
                                    type: object
                                    description: Annotations to attach to any resource created or managed by StackGres.
                                    additionalProperties:
                                      type: string
                                  clusterPods:
                                    type: object
                                    description: Annotations to attach to pods created or managed by StackGres.
                                    additionalProperties:
                                      type: string
                                  services:
                                    type: object
                                    description: Annotations to attach to all services created or managed by StackGres.
                                    additionalProperties:
                                      type: string
                                  primaryService:
                                    type: object
                                    description: Custom Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/) passed to the `-primary` service.
                                    additionalProperties:
                                      type: string
                                  replicasService:
                                    type: object
                                    description: Custom Kubernetes [annotations](https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/) passed to the `-replicas` service.
                                    additionalProperties:
                                      type: string
                              labels:
                                type: object
                                description: Custom Kubernetes [labels](https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/) to be passed to resources created and managed by StackGres.
                                properties:
                                  clusterPods:
                                    type: object
                                    description: Labels to attach to Pods created or managed by StackGres.
                                    additionalProperties:
                                      type: string 
                                  services:
                                    type: object
                                    description: Labels to attach to Services and Endpoints created or managed by StackGres.
                                    additionalProperties:
                                      type: string 
                        required: ["index"]
                  required: ["clusters", "instancesPerCluster", "pods"]
                prometheusAutobind:
                  type: boolean
                  description: |
                    If enabled, a ServiceMonitor is created for each Prometheus instance found in order to collect metrics.
                distributedLogs:
                  type: object
                  description: StackGres features a functionality for all pods to send Postgres, Patroni and PgBouncer logs to a central (distributed) location, which is in turn another Postgres database. Logs can then be accessed via SQL interface or from the web UI. This section controls whether to enable this feature or not. If not enabled, logs are send to the pod's standard output.
                  properties:
                    sgDistributedLogs:
                      type: string
                      description: |
                        Name of the [SGDistributedLogs](https://stackgres.io/doc/latest/04-postgres-cluster-management/06-distributed-logs/) to use for this cluster. It must exist.
                    retention:
                      type: string
                      pattern: '^[0-9]+ (minutes?|hours?|days?|months?)'
                      description: |
                        Define a retention window with the syntax `<integer> (minutes|hours|days|months)` in which log entries are kept.
                         Log entries will be removed when they get older more than the double of the specified retention window.

                        When this field is changed the retention will be applied only to log entries that are newer than the end of
                         the retention window previously specified. If no retention window was previously specified it is considered
                         to be of 7 days. This means that if previous retention window is of `7 days` new retention configuration will
                         apply after UTC timestamp calculated with: `SELECT date_trunc('days', now() at time zone 'UTC') - INTERVAL '7 days'`.
                nonProductionOptions:
                  type: object
                  properties:
                    disableClusterPodAntiAffinity:
                      type: boolean
                      description: |
                        It is a best practice, on non-containerized environments, when running production workloads, to run each database server on a different server (virtual or physical), i.e., not to co-locate more than one database server per host.

                        The same best practice applies to databases on containers. By default, StackGres will not allow to run more than one StackGres pod on a given Kubernetes node. Set this property to true to allow more than one StackGres pod per node.
                    disablePatroniResourceRequirements:
                      type: boolean
                      description: |
                        It is a best practice, on containerized environments, when running production workloads, to enforce container's resources requirements.

                        The same best practice applies to databases on containers. By default, StackGres will configure resource requirements for patroni container. Set this property to true to prevent StackGres from setting patroni container's resources requirement.
                    disableClusterResourceRequirements:
                      type: boolean
                      description: |
                        It is a best practice, on containerized environments, when running production workloads, to enforce container's resources requirements.

                        By default, StackGres will configure resource requirements for all the containers. Set this property to true to prevent StackGres from setting container's resources requirements (except for patroni container, see `disablePatroniResourceRequirements`).
                    enableSetPatroniCpuRequests:
                      type: boolean
                      description: |
                        On containerized environments, when running production workloads, enforcing container's cpu requirements request to be equals to the limit allow to achieve the highest level of performance. Doing so, reduces the chances of leaving
                         the workload with less cpu than it requires. It also allow to set [static CPU management policy](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/#static-policy) that allows to guarantee a pod the usage exclusive CPUs on the node.

                        By default, StackGres will configure cpu requirements to have the same limit and request for the patroni container. Set this property to true to prevent StackGres from setting patroni container's cpu requirements request equals to the limit
                         when `.spec.requests.cpu` is configured in the referenced `SGInstanceProfile`.
                    enableSetClusterCpuRequests:
                      type: boolean
                      description: |
                        On containerized environments, when running production workloads, enforcing container's cpu requirements request to be equals to the limit allow to achieve the highest level of performance. Doing so, reduces the chances of leaving
                         the workload with less cpu than it requires. It also allow to set [static CPU management policy](https://kubernetes.io/docs/tasks/administer-cluster/cpu-management-policies/#static-policy) that allows to guarantee a pod the usage exclusive CPUs on the node.

                        By default, StackGres will configure cpu requirements to have the same limit and request for all the containers. Set this property to true to prevent StackGres from setting container's cpu requirements request equals to the limit (except for patroni container, see `enablePatroniCpuRequests`)
                         when `.spec.requests.containers.<container name>.cpu` `.spec.requests.initContainers.<container name>.cpu` is configured in the referenced `SGInstanceProfile`.
                    enableSetPatroniMemoryRequests:
                      type: boolean
                      description: |
                        On containerized environments, when running production workloads, enforcing container's memory requirements request to be equals to the limit allow to achieve the highest level of performance. Doing so, reduces the chances of leaving
                         the workload with less memory than it requires.

                        By default, StackGres will configure memory requirements to have the same limit and request for the patroni container. Set this property to true to prevent StackGres from setting patroni container's memory requirements request equals to the limit
                         when `.spec.requests.memory` is configured in the referenced `SGInstanceProfile`.
                    enableSetClusterMemoryRequests:
                      type: boolean
                      description: |
                        On containerized environments, when running production workloads, enforcing container's memory requirements request to be equals to the limit allow to achieve the highest level of performance. Doing so, reduces the chances of leaving
                         the workload with less memory than it requires.

                        By default, StackGres will configure memory requirements to have the same limit and request for all the containers. Set this property to true to prevent StackGres from setting container's memory requirements request equals to the limit (except for patroni container, see `enablePatroniCpuRequests`)
                         when `.spec.requests.containers.<container name>.memory` `.spec.requests.initContainers.<container name>.memory` is configured in the referenced `SGInstanceProfile`.
                    enabledFeatureGates:
                      type: array
                      description: |
                        A list of StackGres feature gates to enable (not suitable for a production environment).
                        
                        Available feature gates are:
                        * `babelfish-flavor`: Allow to use `babelfish` flavor.
                      items:
                        type: string
                        description: The name of the fature gate to enable.
              required: ["database", "postgres", "coordinator", "shards"]
            status:
              type: object
              properties:
                conditions:
                  type: array
                  items:
                    type: object
                    properties:
                      lastTransitionTime:
                        description: Last time the condition transitioned from one status to another.
                        type: string
                      message:
                        description: A human readable message indicating details about the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: Type of deployment condition.
                        type: string
                clusterStatuses:
                  type: array
                  description: The list of cluster statuses.
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        description: The name of the cluster.
                      pendingRestart:
                        type: boolean
                        description: Indicates if the cluster requires restart
                    required: ["name"]
                toInstallPostgresExtensions:
                  type: array
                  description: The list of Postgres extensions to install
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                        description: The name of the extension to install.
                      publisher:
                        type: string
                        description: The id of the publisher of the extension to install.
                      version:
                        type: string
                        description: The version of the extension to install.
                      repository:
                        type: string
                        description: The repository base URL from where the extension will be installed from.
                      postgresVersion:
                        type: string
                        description: The postgres major version of the extension to install.
                      build:
                        type: string
                        description: The build version of the extension to install.
                      extraMounts:
                        type: array
                        description: The extra mounts of the extension to install.
                        items:
                          type: string
                          description: The extra mount of the installed extension.
                    required: ["name", "publisher", "version", "repository", "postgresVersion"]


---
# Source: stackgres-operator/templates/webapi-authorization-rbac.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: stackgres-restapi-admin
  namespace: stackgres
  annotations:
    meta.helm.sh/release-name: stackgres-operator
    meta.helm.sh/release-namespace: stackgres
  labels:
    app.kubernetes.io/managed-by: Helm
    api.stackgres.io/auth: rolebinding
roleRef:
  kind: ClusterRole
  name: cluster-admin
  apiGroup: rbac.authorization.k8s.io
subjects:
- kind: User
  name: admin

---
# Source: stackgres-operator/templates/webapi-service-account.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: stackgres-restapi
  annotations:
    meta.helm.sh/release-name: stackgres-operator
    meta.helm.sh/release-namespace: stackgres
  labels:
    app.kubernetes.io/managed-by: Helm
subjects:
- kind: ServiceAccount
  name: stackgres-restapi
  namespace: stackgres
roleRef:
  kind: ClusterRole
  name: stackgres-restapi
  apiGroup: rbac.authorization.k8s.io

---
# Source: stackgres-operator/templates/operator-service.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: stackgres
  name: stackgres-operator
spec:
  type: ClusterIP
  selector:
    app: stackgres-operator
  ports:
    - name: https
      protocol: TCP
      port: 443
      targetPort: https

---
# Source: stackgres-operator/templates/webapi-service.yaml
apiVersion: v1
kind: Service
metadata:
  namespace: stackgres
  name: stackgres-restapi
  annotations:
    meta.helm.sh/release-name: stackgres-operator
    meta.helm.sh/release-namespace: stackgres
  labels:
    app.kubernetes.io/managed-by: Helm
spec:
  type: 'LoadBalancer'
  selector:
    app: stackgres-restapi
  ports:
    - name: https
      protocol: TCP
      port: 443
      targetPort: https

---
# Source: stackgres-operator/templates/operator-deployment.yaml
apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  labels:
    app: stackgres-operator
    version: "1.5.0"
    group:  stackgres.io
  name: stackgres-operator
  namespace: stackgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: stackgres-operator
      group:  stackgres.io
  template:
    metadata:
      labels:
        app: stackgres-operator
        group:  stackgres.io
    spec:
      serviceAccountName: stackgres-operator
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: stackgres-operator
        image: "quay.io/stackgres/operator:1.5.0"
        imagePullPolicy: IfNotPresent
        env:
          - name: RESET_CERTS
            value: "true"
          - name: DISABLE_RECONCILIATION
            value: "true"
          - name: OPERATOR_NAME
            value: "stackgres-operator"
          - name: OPERATOR_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: OPERATOR_IMAGE_VERSION
            value: "1.5.0"
          - name: PROMETHEUS_AUTOBIND
            value: "true"
          - name: OPERATOR_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: AUTHENTICATION_SECRET_NAME
            value: "stackgres-restapi"
          - name: SG_CONTAINER_REGISTRY
            value: "quay.io"
          - name: SG_IMAGE_PULL_POLICY
            value: "IfNotPresent"
          - name: EXTENSIONS_REPOSITORY_URLS
            value: "https://extensions.stackgres.io/postgres/repository"
        ports:
        - containerPort: 8080
          name: "http"
          protocol: "TCP"
        - containerPort: 8443
          name: "https"
          protocol: "TCP"
        livenessProbe:
          httpGet:
            path: "/q/health/live"
            port: 8080
            scheme: "HTTP"
          initialDelaySeconds: 10
          periodSeconds: 60
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: "/q/health/ready"
            port: 8080
            scheme: "HTTP"
          initialDelaySeconds: 0
          periodSeconds: 2
          timeoutSeconds: 1
        volumeMounts:
          - name: operator-certs
            mountPath: /etc/operator/certs
            readOnly: true
      volumes:
        - name: operator-certs
          secret:
            secretName: stackgres-operator-certs
            optional: false

---
# Source: stackgres-operator/templates/webapi-deployment.yaml
apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  annotations:
    meta.helm.sh/release-name: stackgres-operator
    meta.helm.sh/release-namespace: stackgres
  labels:
    app.kubernetes.io/managed-by: Helm
    app: stackgres-restapi
    version: "1.5.0"
    group:  stackgres.io
  name: stackgres-restapi
  namespace: stackgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: stackgres-restapi
      group:  stackgres.io
  template:
    metadata:
      labels:
        app: stackgres-restapi
        group:  stackgres.io
    spec:
      serviceAccountName: stackgres-restapi
      securityContext:
        runAsNonRoot: true
        fsGroup: 1000
      containers:
      - name: stackgres-restapi
        image: "quay.io/stackgres/restapi:1.5.0"
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
        env:
          - name: RESET_CERTS
            value: "true"
          - name: RESTAPI_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: RESTAPI_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: AUTHENTICATION_SECRET_NAME
            value: "stackgres-restapi"
          - name: EXTENSIONS_REPOSITORY_URLS
            value: "https://extensions.stackgres.io/postgres/repository"
          - name: STACKGRES_AUTH_TYPE
            value: "jwt"
        ports:
        - containerPort: 8080
          name: "resthttp"
          protocol: "TCP"
        - containerPort: 8443
          name: "resthttps"
          protocol: "TCP"
        livenessProbe:
          httpGet:
            path: "/q/health/live"
            port: 8080
            scheme: "HTTP"
          initialDelaySeconds: 5
          periodSeconds: 30
          timeoutSeconds: 10
        readinessProbe:
          httpGet:
            path: "/q/health/ready"
            port: 8080
            scheme: "HTTP"
          initialDelaySeconds: 0
          periodSeconds: 2
          timeoutSeconds: 1
        volumeMounts:
          - name: web-certs
            mountPath: /etc/operator/certs
            readOnly: true
      - name: stackgres-adminui
        image: "quay.io/stackgres/admin-ui:1.5.0"
        imagePullPolicy: IfNotPresent
        securityContext:
          runAsNonRoot: true
          runAsUser: 998
          runAsGroup: 996
        env:
          - name: GRAFANA_URL_PATH
            value: "/"
          - name: GRAFANA_SCHEMA
            value: "http"
          - name: GRAFANA_WEB_HOST
            value: "localhost:8080"
          - name: GRAFANA_TOKEN
            value: "unknown"
        args:
          - '/bin/sh'
          - '-ec'
          - |
            envsubst '
              $GRAFANA_EMBEDDED
              $GRAFANA_URL_PATH
              $GRAFANA_SCHEMA
              $GRAFANA_WEB_HOST
              $GRAFANA_TOKEN' \
              < /etc/nginx/template.d/stackgres-restapi.template \
              > /etc/nginx/conf.d/stackgres-restapi.conf
            exec nginx -g 'daemon off;'
        ports:
        - containerPort: 9443
          name: "https"
          protocol: "TCP"
        - containerPort: 9080
          name: "http"
          protocol: "TCP"
        volumeMounts:
          - name: web-certs
            mountPath: /etc/operator/certs
            readOnly: true
          - name: operator-nginx
            mountPath: /etc/nginx/nginx.conf
            subPath: nginx.conf
            readOnly: true
          - name: operator-nginx
            mountPath: /etc/nginx/template.d
            readOnly: true
          - name: operator-nginx-etc
            subPath: etc/nginx/conf.d
            mountPath: /etc/nginx/conf.d
            readOnly: false
          - name: operator-nginx-etc
            subPath: var/cache/nginx
            mountPath: /var/cache/nginx
            readOnly: false
          - name: operator-nginx-etc
            subPath: var/run
            mountPath: /var/run
            readOnly: false
      volumes:
        - name: web-certs
          secret:
            secretName: stackgres-operator-web-certs
            optional: false
        - name: operator-nginx
          configMap:
            name: stackgres-restapi-nginx
            optional: false
            items:
              - key: nginx.conf
                path: nginx.conf
              - key: stackgres-restapi.template
                path: stackgres-restapi.template
        - name: operator-nginx-etc
          emptyDir: {}

---
# Source: stackgres-operator/templates/init-service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: stackgres-operator-init
  namespace: stackgres
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "-100"

---
# Source: stackgres-operator/templates/init-service-account.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: stackgres-operator-init
  namespace: stackgres
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "-100"
subjects:
- kind: ServiceAccount
  name: stackgres-operator-init
  namespace: stackgres
roleRef:
  kind: ClusterRole
  name: 'cluster-admin'
  apiGroup: rbac.authorization.k8s.io

---
# Source: stackgres-operator/templates/cr-updater-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: "stackgres-operator-cr-updater"
  namespace: stackgres
  labels:
    app: stackgres-operator-init
    job: cr-updater
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "50"    
spec:
  template:
    metadata:
      labels:
        app: stackgres-operator-init
        job: cr-updater
    spec:
      serviceAccountName: stackgres-operator-init
      restartPolicy: OnFailure
      terminationGracePeriodSeconds: 0
      securityContext:
        runAsNonRoot: true
        fsGroup: 1000
      containers:
      - name: cr-updater
        image: "quay.io/stackgres/jobs:1.5.0"
        imagePullPolicy: "IfNotPresent"
        securityContext:
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
        env:
          - name: OPERATOR_NAME
            value: "stackgres-operator"
          - name: OPERATOR_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: CR_UPDATER
            value: "true"

---
# Source: stackgres-operator/templates/crd-upgrade-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: "stackgres-operator-crd-upgrade"
  namespace: stackgres
  labels:
    app: stackgres-operator-init
    job: upgrade-crd
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "20"
spec:
  template:
    metadata:
      labels:
        app: stackgres-operator-init
        job: upgrade-crd
    spec:
      serviceAccountName: stackgres-operator-init
      restartPolicy: OnFailure
      terminationGracePeriodSeconds: 0
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: "crd-upgrade"
        image: "quay.io/stackgres/jobs:1.5.0"
        imagePullPolicy: "IfNotPresent"
        env:
          - name: OPERATOR_NAME
            value: "stackgres-operator"
          - name: OPERATOR_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: CRD_UPGRADE
            value: "true"
          - name: CONVERSION_WEBHOOKS
            value: "false"

---
# Source: stackgres-operator/templates/crd-webhooks-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: "stackgres-operator-conversion-webhooks"
  namespace: stackgres
  labels:
    app: stackgres-operator-init
    job: configure-crd-webhooks
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "30"
spec:
  template:
    metadata:
      labels:
        app: stackgres-operator-init
        job: configure-crd-webhooks
    spec:
      serviceAccountName: stackgres-operator-init
      restartPolicy: OnFailure
      terminationGracePeriodSeconds: 0
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: "conversion-webhooks"
        image: "quay.io/stackgres/jobs:1.5.0"
        imagePullPolicy: "IfNotPresent"
        env:
          - name: OPERATOR_NAME
            value: "stackgres-operator"
          - name: OPERATOR_NAMESPACE
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: metadata.namespace
          - name: OPERATOR_CERTIFICATE_SECRET_NAME
            value: "stackgres-operator-certs"
          - name: CRD_UPGRADE
            value: "false"
          - name: CONVERSION_WEBHOOKS
            value: "true"

---
# Source: stackgres-operator/templates/create-certificate-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: "stackgres-operator-create-certificate"
  namespace: stackgres
  labels:
    app: "stackgres-operator-create-certificate"
    scope: init
    job: create-certificate
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "10"
spec:
  template:
    metadata:
      labels:
        app: "stackgres-operator-create-certificate"
        scope: init
        job: create-certificate
    spec:
      serviceAccountName: stackgres-operator-init
      restartPolicy: OnFailure
      terminationGracePeriodSeconds: 0
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: "create-certificate"
        image: quay.io/ongres/kubectl:v1.25.9-build-6.22
        imagePullPolicy: "IfNotPresent"
        command:
          - "/bin/bash"
          - "-ecx"
          - |
            kubectl delete csr --ignore-not-found 'stackgres-operator'
            cat << EOF > /tmp/csr.conf
            [req]
            req_extensions = v3_req
            distinguished_name = req_distinguished_name
            [req_distinguished_name]
            [ v3_req ]
            basicConstraints = CA:FALSE
            keyUsage = nonRepudiation, digitalSignature, keyEncipherment
            extendedKeyUsage = serverAuth
            subjectAltName = @alt_names
            [alt_names]
            DNS.1 = stackgres-operator
            DNS.2 = stackgres-operator.stackgres
            DNS.3 = stackgres-operator.stackgres.svc
            DNS.4 = stackgres-operator.stackgres.svc.cluster.local
            EOF
            
            K8S_VERSION="$(kubectl get node --template '{{ (index .items 0).status.nodeInfo.kubeletVersion }}')"
            IS_EKS="$(printf %s "$K8S_VERSION" | grep -q -eks- && echo true || echo false)"
            K8S_VERSION="${K8S_VERSION#v}"
            K8S_VERSION="${K8S_VERSION%-*}"
            
            if [ "$(echo "$K8S_VERSION" | tr . '\n' \
                | while read NUMBER; do printf '%05d' "$NUMBER"; done)" \
              -ge "$(echo "1.22.0" | tr . '\n' \
                | while read NUMBER; do printf '%05d' "$NUMBER"; done)" ]
            then
              openssl req -new -nodes -text -keyout /tmp/root.key \
                  -subj "/CN=system:node:stackgres-operator.stackgres;/O=system:nodes" \
                  -out /tmp/server.csr \
                  -config /tmp/csr.conf
            else
              openssl req -new -nodes -text -keyout /tmp/root.key \
                  -subj "/CN=stackgres-operator.stackgres" \
                  -out /tmp/server.csr \
                  -config /tmp/csr.conf
            fi
            openssl rsa -in /tmp/root.key -pubout -out /tmp/root.pem
            
            cat << EOF | kubectl create -f -
            $(
            if [ "$(echo "$K8S_VERSION" | tr . '\n' \
                | while read NUMBER; do printf '%05d' "$NUMBER"; done)" \
              -ge "$(echo "1.22.0" | tr . '\n' \
                | while read NUMBER; do printf '%05d' "$NUMBER"; done)" ]
            then
              echo "apiVersion: certificates.k8s.io/v1"
            else
              echo "apiVersion: certificates.k8s.io/v1beta1"
            fi
            )
            kind: CertificateSigningRequest
            metadata:
              name: stackgres-operator
            spec:
              request: "$(cat /tmp/server.csr | base64 | tr -d '\n')"
              usages:
              - digital signature
              - key encipherment
              - server auth
            $(
            if [ "$(echo "$K8S_VERSION" | tr . '\n' \
                | while read NUMBER; do printf '%05d' "$NUMBER"; done)" \
              -ge "$(echo "1.22.0" | tr . '\n' \
                | while read NUMBER; do printf '%05d' "$NUMBER"; done)" ]
            then
              if "$IS_EKS"
              then
                echo "  signerName: beta.eks.amazonaws.com/app-serving"
              else
                echo "  signerName: kubernetes.io/kubelet-serving"
              fi
            fi
            )
            EOF
            
            if ! kubectl get csr 'stackgres-operator' -o yaml|grep -q '^    type: Approved$'
            then
              kubectl certificate approve 'stackgres-operator'
              echo -n "Waiting for CSR approval..."
              until kubectl get csr 'stackgres-operator' -o yaml|grep -q '^    type: Approved$'
              do
                echo -n .
                sleep 2
              done
              echo "approved"
            fi
            echo -n "Waiting for CSR certificate generation..."
            until kubectl get csr 'stackgres-operator' \
              --template '{{ if .status }}{{ if .status.certificate }}true{{ end }}{{ end }}' \
              | grep -q '^true$'
            do
              echo -n .
              sleep 2
            done
            echo "certificate generated"
            
            KEY="$(cat /tmp/root.key | base64 | tr -d '\n')"
            PUB="$(cat /tmp/root.pem | base64 | tr -d '\n')"
            CRT="$(kubectl get csr 'stackgres-operator' --template '{{ .status.certificate }}' | tr -d '\n')"
            
            if [ -z "$CRT" ]
            then
              echo "Certificate not found in CSR!"
              exit 1
            fi
            
            kubectl delete csr 'stackgres-operator'
            cat << EOF > /tmp/certificate-secret.yaml            
            apiVersion: v1
            kind: Secret
            metadata:
              name: stackgres-operator-certs
              namespace: stackgres
              annotations:
                meta.helm.sh/release-name: stackgres-operator
                meta.helm.sh/release-namespace: stackgres
              labels:
                app.kubernetes.io/managed-by: Helm
            type: kubernetes.io/tls
            data:
              tls.key: ${KEY}
              tls.crt: ${CRT}
            EOF
            cat << EOF > /tmp/validating-webhook-configuration.yaml            
            apiVersion: admissionregistration.k8s.io/v1
            kind: ValidatingWebhookConfiguration
            metadata:
              name: stackgres-operator
              namespace: stackgres
              annotations:
                meta.helm.sh/release-name: stackgres-operator
                meta.helm.sh/release-namespace: stackgres
              labels:
                app.kubernetes.io/managed-by: Helm
            webhooks:
              - name: sgcluster.stackgres-operator.stackgres
                sideEffects: None
                rules:
                  - operations: ["CREATE", "UPDATE"]
                    apiGroups: ["stackgres.io"]
                    apiVersions: ["*"]
                    resources: ["sgclusters"]
                failurePolicy: Fail
                clientConfig:
                  service:
                    namespace: stackgres
                    name: stackgres-operator
                    path: '/stackgres/validation/sgcluster'
                  caBundle: '${CRT}'
                admissionReviewVersions: ["v1"]
              - name: sgpgconfig.stackgres-operator.stackgres
                sideEffects: None
                rules:
                  - operations: ["CREATE", "UPDATE", "DELETE"]
                    apiGroups: ["stackgres.io"]
                    apiVersions: ["*"]
                    resources: ["sgpgconfigs"]
                failurePolicy: Fail
                clientConfig:
                  service:
                    namespace: stackgres
                    name: stackgres-operator
                    path: '/stackgres/validation/sgpgconfig'
                  caBundle: '${CRT}'
                admissionReviewVersions: ["v1"]
              - name: sgpoolconfig.stackgres-operator.stackgres
                sideEffects: None
                rules:
                  - operations: ["CREATE", "UPDATE", "DELETE"]
                    apiGroups: ["stackgres.io"]
                    apiVersions: ["*"]
                    resources: ["sgpoolconfigs"]
                failurePolicy: Fail
                clientConfig:
                  service:
                    namespace: stackgres
                    name: stackgres-operator
                    path: '/stackgres/validation/sgpoolconfig'
                  caBundle: '${CRT}'
                admissionReviewVersions: ["v1"]
              - name: sginstanceprofile.stackgres-operator.stackgres
                sideEffects: None
                rules:
                  - operations: ["CREATE", "UPDATE", "DELETE"]
                    apiGroups: ["stackgres.io"]
                    apiVersions: ["*"]
                    resources: ["sginstanceprofiles"]
                failurePolicy: Fail
                clientConfig:
                  service:
                    namespace: stackgres
                    name: stackgres-operator
                    path: '/stackgres/validation/sginstanceprofile'
                  caBundle: '${CRT}'
                admissionReviewVersions: ["v1"]
              - name: sgbackupconfig.stackgres-operator.stackgres
                sideEffects: None
                rules:
                  - operations: ["CREATE", "UPDATE", "DELETE"]
                    apiGroups: ["stackgres.io"]
                    apiVersions: ["*"]
                    resources: ["sgbackupconfigs"]
                failurePolicy: Fail
                clientConfig:
                  service:
                    namespace: stackgres
                    name: stackgres-operator
                    path: '/stackgres/validation/sgbackupconfig'
                  caBundle: '${CRT}'
                admissionReviewVersions: ["v1"]
              - name: sgbackup.stackgres-operator.stackgres
                sideEffects: None
                rules:
                  - operations: ["CREATE", "UPDATE", "DELETE"]
                    apiGroups: ["stackgres.io"]
                    apiVersions: ["*"]
                    resources: ["sgbackups"]
                failurePolicy: Fail
                clientConfig:
                  service:
                    namespace: stackgres
                    name: stackgres-operator
                    path: '/stackgres/validation/sgbackup'
                  caBundle: '${CRT}'
                admissionReviewVersions: ["v1"]
              - name: sgdistributedlogs.stackgres-operator.stackgres
                sideEffects: None
                rules:
                  - operations: ["CREATE", "UPDATE", "DELETE"]
                    apiGroups: ["stackgres.io"]
                    apiVersions: ["*"]
                    resources: ["sgdistributedlogs"]
                failurePolicy: Fail
                clientConfig:
                  service:
                    namespace: stackgres
                    name: stackgres-operator
                    path: '/stackgres/validation/sgdistributedlogs'
                  caBundle: '${CRT}'
                admissionReviewVersions: ["v1"]
              - name: sgdbops.stackgres-operator.stackgres
                sideEffects: None
                rules:
                  - operations: ["CREATE", "UPDATE", "DELETE"]
                    apiGroups: ["stackgres.io"]
                    apiVersions: ["*"]
                    resources: ["sgdbops"]
                failurePolicy: Fail
                clientConfig:
                  service:
                    namespace: stackgres
                    name: stackgres-operator
                    path: '/stackgres/validation/sgdbops'
                  caBundle: '${CRT}'
                admissionReviewVersions: ["v1"]
              - name: sgobjectstorage.stackgres-operator.stackgres
                sideEffects: None
                rules:
                  - operations: ["CREATE", "UPDATE", "DELETE"]
                    apiGroups: ["stackgres.io"]
                    apiVersions: ["*"]
                    resources: ["sgobjectstorages"]
                failurePolicy: Fail
                clientConfig:
                  service:
                    namespace: stackgres
                    name: stackgres-operator
                    path: '/stackgres/validation/sgobjectstorage'
                  caBundle: '${CRT}'
                admissionReviewVersions: ["v1"]
              - name: sgscripts.stackgres-operator.stackgres
                sideEffects: None
                rules:
                  - operations: ["CREATE", "UPDATE", "DELETE"]
                    apiGroups: ["stackgres.io"]
                    apiVersions: ["*"]
                    resources: ["sgscripts"]
                failurePolicy: Fail
                clientConfig:
                  service:
                    namespace: stackgres
                    name: stackgres-operator
                    path: '/stackgres/validation/sgscript'
                  caBundle: ${CRT}
                admissionReviewVersions: ["v1"]
              - name: sgshardedclusters.stackgres-operator.stackgres
                sideEffects: None
                rules:
                  - operations: ["CREATE", "UPDATE", "DELETE"]
                    apiGroups: ["stackgres.io"]
                    apiVersions: ["*"]
                    resources: ["sgshardedclusters"]
                failurePolicy: Fail
                clientConfig:
                  service:
                    namespace: stackgres
                    name: stackgres-operator
                    path: '/stackgres/validation/sgshardedcluster'
                  caBundle: ${CRT}
                admissionReviewVersions: ["v1"]
            EOF
            cat << EOF > /tmp/mutating-webhook-configuration.yaml            
            apiVersion: admissionregistration.k8s.io/v1
            kind: MutatingWebhookConfiguration
            metadata:
              name: stackgres-operator
              namespace: stackgres
              annotations:
                meta.helm.sh/release-name: stackgres-operator
                meta.helm.sh/release-namespace: stackgres
              labels:
                app.kubernetes.io/managed-by: Helm
            webhooks:
              - name: sgcluster.stackgres-operator.stackgres
                sideEffects: None
                rules:
                  - operations: ["CREATE", "UPDATE"]
                    apiGroups: ["stackgres.io"]
                    apiVersions: ["*"]
                    resources: ["sgclusters"]
                failurePolicy: Fail
                clientConfig:
                  service:
                    namespace: stackgres
                    name: stackgres-operator
                    path: '/stackgres/mutation/sgcluster'
                  caBundle: '${CRT}'
                admissionReviewVersions: ["v1"]
              - name: sgpgconfig.stackgres-operator.stackgres
                sideEffects: None
                rules:
                  - operations: ["CREATE", "UPDATE"]
                    apiGroups: ["stackgres.io"]
                    apiVersions: ["*"]
                    resources: ["sgpgconfigs"]
                failurePolicy: Fail
                clientConfig:
                  service:
                    namespace: stackgres
                    name: stackgres-operator
                    path: '/stackgres/mutation/sgpgconfig'
                  caBundle: '${CRT}'
                admissionReviewVersions: ["v1"]
              - name: sgpoolconfig.stackgres-operator.stackgres
                sideEffects: None
                rules:
                  - operations: ["CREATE", "UPDATE"]
                    apiGroups: ["stackgres.io"]
                    apiVersions: ["*"]
                    resources: ["sgpoolconfigs"]
                failurePolicy: Fail
                clientConfig:
                  service:
                    namespace: stackgres
                    name: stackgres-operator
                    path: '/stackgres/mutation/sgpoolconfig'
                  caBundle: '${CRT}'
                admissionReviewVersions: ["v1"]
              - name: sginstanceprofile.stackgres-operator.stackgres
                sideEffects: None
                rules:
                  - operations: ["CREATE", "UPDATE"]
                    apiGroups: ["stackgres.io"]
                    apiVersions: ["*"]
                    resources: ["sginstanceprofiles"]
                failurePolicy: Fail
                clientConfig:
                  service:
                    namespace: stackgres
                    name: stackgres-operator
                    path: '/stackgres/mutation/sginstanceprofile'
                  caBundle: '${CRT}'
                admissionReviewVersions: ["v1"]
              - name: sgbackupconfig.stackgres-operator.stackgres
                sideEffects: None
                rules:
                  - operations: ["CREATE", "UPDATE"]
                    apiGroups: ["stackgres.io"]
                    apiVersions: ["*"]
                    resources: ["sgbackupconfigs"]
                failurePolicy: Fail
                clientConfig:
                  service:
                    namespace: stackgres
                    name: stackgres-operator
                    path: '/stackgres/mutation/sgbackupconfig'
                  caBundle: '${CRT}'
                admissionReviewVersions: ["v1"]
              - name: sgbackup.stackgres-operator.stackgres
                sideEffects: None
                rules:
                  - operations: ["CREATE", "UPDATE"]
                    apiGroups: ["stackgres.io"]
                    apiVersions: ["*"]
                    resources: ["sgbackups"]
                failurePolicy: Fail
                clientConfig:
                  service:
                    namespace: stackgres
                    name: stackgres-operator
                    path: '/stackgres/mutation/sgbackup'
                  caBundle: '${CRT}'
                admissionReviewVersions: ["v1"]
              - name: sgdistributedlogs.stackgres-operator.stackgres
                sideEffects: None
                rules:
                  - operations: ["CREATE", "UPDATE"]
                    apiGroups: ["stackgres.io"]
                    apiVersions: ["*"]
                    resources: ["sgdistributedlogs"]
                failurePolicy: Fail
                clientConfig:
                  service:
                    namespace: stackgres
                    name: stackgres-operator
                    path: '/stackgres/mutation/sgdistributedlogs'
                  caBundle: '${CRT}'
                admissionReviewVersions: ["v1"]
              - name: sgdbops.stackgres-operator.stackgres
                sideEffects: None
                rules:
                  - operations: ["CREATE", "UPDATE"]
                    apiGroups: ["stackgres.io"]
                    apiVersions: ["*"]
                    resources: ["sgdbops"]
                failurePolicy: Fail
                clientConfig:
                  service:
                    namespace: stackgres
                    name: stackgres-operator
                    path: '/stackgres/mutation/sgdbops'
                  caBundle: '${CRT}'
                admissionReviewVersions: ["v1"]
              - name: sgobjectstorage.stackgres-operator.stackgres
                sideEffects: None
                rules:
                  - operations: ["CREATE", "UPDATE"]
                    apiGroups: ["stackgres.io"]
                    apiVersions: ["*"]
                    resources: ["sgobjectstorages"]
                failurePolicy: Fail
                clientConfig:
                  service:
                    namespace: stackgres
                    name: stackgres-operator
                    path: '/stackgres/mutation/sgobjectstorage'
                  caBundle: '${CRT}'
                admissionReviewVersions: ["v1"]
              - name: sgscripts.stackgres-operator.stackgres
                sideEffects: None
                rules:
                  - operations: ["CREATE", "UPDATE"]
                    apiGroups: ["stackgres.io"]
                    apiVersions: ["*"]
                    resources: ["sgscripts"]
                failurePolicy: Fail
                clientConfig:
                  service:
                    namespace: stackgres
                    name: stackgres-operator
                    path: '/stackgres/mutation/sgscript'
                  caBundle: ${CRT}
                admissionReviewVersions: ["v1"]
              - name: sgshardedclusters.stackgres-operator.stackgres
                sideEffects: None
                rules:
                  - operations: ["CREATE", "UPDATE"]
                    apiGroups: ["stackgres.io"]
                    apiVersions: ["*"]
                    resources: ["sgshardedclusters"]
                failurePolicy: Fail
                clientConfig:
                  service:
                    namespace: stackgres
                    name: stackgres-operator
                    path: '/stackgres/mutation/sgshardedcluster'
                  caBundle: ${CRT}
                admissionReviewVersions: ["v1"]
            
            EOF
            
            kubectl delete -f /tmp/certificate-secret.yaml --ignore-not-found
            kubectl apply -f /tmp/certificate-secret.yaml
            kubectl apply -f /tmp/validating-webhook-configuration.yaml
            kubectl apply -f /tmp/mutating-webhook-configuration.yaml
            cat << EOF > /tmp/csr-web.conf
            [req]
            req_extensions = v3_req
            distinguished_name = req_distinguished_name
            [req_distinguished_name]
            [ v3_req ]
            basicConstraints = CA:FALSE
            keyUsage = nonRepudiation, digitalSignature, keyEncipherment
            extendedKeyUsage = serverAuth
            subjectAltName = @alt_names
            [alt_names]
            DNS.1 = stackgres-restapi
            DNS.2 = stackgres-restapi.stackgres
            DNS.3 = stackgres-restapi.stackgres.svc
            DNS.4 = stackgres-restapi.stackgres.svc.cluster.local
            EOF
            
            openssl req -new -nodes -text -keyout /tmp/web.key \
                -subj "/CN=stackgres-restapi.stackgres" \
                -out /tmp/server-web.csr \
                -config /tmp/csr-web.conf
            openssl rsa -in /tmp/web.key -pubout -out /tmp/web.pem
            openssl x509 -signkey /tmp/web.key -in /tmp/server-web.csr \
              -req -days 365 -out /tmp/server-web.crt
            WEB_KEY="$(cat /tmp/web.key | base64 | tr -d '\n')"
            WEB_PUB="$(cat /tmp/web.pem | base64 | tr -d '\n')"
            WEB_CRT="$(cat /tmp/server-web.crt | base64 | tr -d '\n')"
            cat << EOF > /tmp/web-certificate-secret.yaml            
            apiVersion: v1
            kind: Secret
            metadata:
              name: stackgres-operator-web-certs
              namespace: stackgres
              annotations:
                meta.helm.sh/release-name: stackgres-operator
                meta.helm.sh/release-namespace: stackgres
              labels:
                app.kubernetes.io/managed-by: Helm
            type: kubernetes.io/tls
            data:
              tls.key: ${WEB_KEY}
              tls.crt: ${WEB_CRT}
              jwt-rsa.key: ${WEB_KEY}
              jwt-rsa.pub: ${WEB_PUB}
            EOF
            
            kubectl delete -f /tmp/web-certificate-secret.yaml --ignore-not-found
            kubectl apply -f /tmp/web-certificate-secret.yaml

---
# Source: stackgres-operator/templates/integrate-grafana-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  namespace: stackgres
  name: "stackgres-operator-integrate-grafana"
  labels:
    app: stackgres-operator-init
    job: integrate-grafana
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "10"
spec:
  template:
    metadata:
      labels:
        app: stackgres-operator-init
        job: integrate-grafana
    spec:
      serviceAccountName: stackgres-operator-init
      restartPolicy: OnFailure
      terminationGracePeriodSeconds: 0
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: "integrate-grafana"
        image: quay.io/ongres/kubectl:v1.25.9-build-6.22
        imagePullPolicy: "IfNotPresent"
        command:
          - "/bin/bash"
          - "-ecx"
          - |
            GRAFANA_CREDENTIALS="admin:prom-operator"
            GRAFANA_HOST="http://stackgres-operator-grafana"
            curl_grafana_api() {
              curl -svk -H "Accept: application/json" -H "Content-Type: application/json" --user "$GRAFANA_CREDENTIALS" --fail "$@"
            }
            GRAFANA_PROMETHEUS_DATASOURCE_NAME="Prometheus"
            cat << EOF > /tmp/grafana-dashboard-import.json
            {
              "dashboard": $(sed "s/\${DS_PROMETHEUS}/$GRAFANA_PROMETHEUS_DATASOURCE_NAME/g" /etc/grafana/grafana-dashboard.json | jq .),
              "overwrite": true,
              "inputs": [{
                "name": "DS_PROMETHEUS",
                "type": "datasource",
                "pluginId": "prometheus",
                "value": "$GRAFANA_PROMETHEUS_DATASOURCE_NAME"
              }],
              "folderId": null
            }
            EOF
            GRAFANA_DASHBOARD_URL="$(curl_grafana_api -d "@/tmp/grafana-dashboard-import.json" "$GRAFANA_HOST/api/dashboards/db" | jq -M -r .url)"
            [ -n "$GRAFANA_DASHBOARD_URL" ]
            [ "$GRAFANA_DASHBOARD_URL" != null ]
            GRAFANA_API_KEY_ID="$(curl_grafana_api "$GRAFANA_HOST/api/auth/keys" | jq -r '.[]|select(.name == "stackgres")|.id|select(.!=null)')"
            [ -z "$GRAFANA_API_KEY_ID" ] || curl_grafana_api -X DELETE "$GRAFANA_HOST/api/auth/keys/$GRAFANA_API_KEY_ID" > /dev/null
            GRAFANA_API_KEY_TOKEN="$(curl_grafana_api -d '{"name":"stackgres", "role": "Viewer"}' "$GRAFANA_HOST/api/auth/keys" | jq -r .key)"
            [ -n "$GRAFANA_API_KEY_TOKEN" ]
            kubectl set env -n stackgres deployment/stackgres-restapi \
              GRAFANA_EMBEDDED=true \
              GRAFANA_URL_PATH="$GRAFANA_DASHBOARD_URL" \
              GRAFANA_SCHEMA="http" \
              GRAFANA_WEB_HOST="stackgres-operator-grafana" \
              GRAFANA_TOKEN="$GRAFANA_API_KEY_TOKEN"
        volumeMounts:
        - name: grafana-dashboard
          mountPath: /etc/grafana/grafana-dashboard.json
          readOnly: true
          subPath: grafana-dashboard.json
      volumes:
        - name: grafana-dashboard
          configMap:
            name: stackgres-operator-grafana-dashboard

---
# Source: stackgres-operator/templates/set-crd-version-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: "stackgres-operator-set-crd-version"
  namespace: stackgres
  labels:
    app: "stackgres-operator-set-crd-version"
    scope: init
    job: set-crd-version
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "60"
spec:
  template:
    metadata:
      labels:
        app: "stackgres-operator-set-crd-version"
        scope: init
        job: set-crd-version
    spec:
      serviceAccountName: stackgres-operator-init
      restartPolicy: OnFailure
      terminationGracePeriodSeconds: 0
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: "set-crd-version"
        image: quay.io/ongres/kubectl:v1.25.9-build-6.22
        imagePullPolicy: "IfNotPresent"
        command:
          - "/bin/bash"
          - "-ecx"
          - |
            kubectl get crd -o name | grep '\.stackgres\.io$' \
              | while read -r CRD
                do
                  kubectl annotate --overwrite "$CRD" stackgres.io/operatorVersion=1.5.0
                done

---
# Source: stackgres-operator/templates/wait-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: "stackgres-operator-wait"
  namespace: stackgres
  labels:
    app: stackgres-operator-init
    job: wait
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
    "helm.sh/hook-weight": "100"
spec:
  template:
    metadata:
      labels:
        app: stackgres-operator-init
        job: wait
    spec:
      serviceAccountName: stackgres-operator-init
      restartPolicy: OnFailure
      terminationGracePeriodSeconds: 0
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      containers:
      - name: "stackgres-operator-wait"
        image: quay.io/ongres/kubectl:v1.25.9-build-6.22
        imagePullPolicy: "IfNotPresent"
        command:
          - "/bin/bash"
          - "-ecx"
          - |
            kubectl set env -n 'stackgres' 'deployment/stackgres-operator' DISABLE_RECONCILIATION- RESET_CERTS-
            kubectl set env -n 'stackgres' 'deployment/stackgres-restapi' RESET_CERTS-
            kubectl rollout status -n 'stackgres' 'deployment/stackgres-operator'
            kubectl rollout status -n 'stackgres' 'deployment/stackgres-restapi'

---
# Source: stackgres-operator/templates/operator-service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: stackgres-operator
  namespace: stackgres

---
# Source: stackgres-operator/templates/webapi-service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: stackgres-restapi
  namespace: stackgres
  annotations:
    meta.helm.sh/release-name: stackgres-operator
    meta.helm.sh/release-namespace: stackgres
  labels:
    app.kubernetes.io/managed-by: Helm

---
# Source: stackgres-operator/templates/webapi-authentication-secret.yaml
apiVersion: v1
kind: Secret
metadata:
  name: stackgres-restapi
  namespace: stackgres
  annotations:
    meta.helm.sh/release-name: stackgres-operator
    meta.helm.sh/release-namespace: stackgres
  labels:
    app.kubernetes.io/managed-by: Helm
    api.stackgres.io/auth: user
type: Opaque
data:
  k8sUsername: "YWRtaW4="
  password: MTA1ODg5NjQ0MzZhNDFiZmYyZWFkYmVjYzZmMjJmY2MyMTcwNWIzZTE2YzIzYzJjOWNiZGQ1ZmZiMmMzMzI5ZA==
  clearPassword: RjdvTFJ5YlJmeGl2d20xWEtib21EaVRnQ2pucExSRzlkR3Y2cUkwRA==

---
# Source: stackgres-operator/templates/grafana-dashboard-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: stackgres-operator-grafana-dashboard
  namespace: stackgres
data:
  grafana-dashboard.json: |
    {
      "__inputs": [
        {
          "name": "DS_PROMETHEUS",
          "label": "Prometheus",
          "description": "",
          "type": "datasource",
          "pluginId": "prometheus",
          "pluginName": "Prometheus"
        }
      ],
      "__requires": [
        {
          "type": "panel",
          "id": "gauge",
          "name": "Gauge",
          "version": ""
        },
        {
          "type": "grafana",
          "id": "grafana",
          "name": "Grafana",
          "version": "8.1.2"
        },
        {
          "type": "panel",
          "id": "graph",
          "name": "Graph (old)",
          "version": ""
        },
        {
          "type": "datasource",
          "id": "prometheus",
          "name": "Prometheus",
          "version": "1.0.0"
        },
        {
          "type": "panel",
          "id": "stat",
          "name": "Stat",
          "version": ""
        },
        {
          "type": "panel",
          "id": "table-old",
          "name": "Table (old)",
          "version": ""
        }
      ],
      "annotations": {
        "list": [
          {
            "builtIn": 1,
            "datasource": "-- Grafana --",
            "enable": true,
            "hide": true,
            "iconColor": "rgba(0, 211, 255, 1)",
            "name": "Annotations & Alerts",
            "target": {
              "limit": 100,
              "matchAny": false,
              "tags": [],
              "type": "dashboard"
            },
            "type": "dashboard"
          }
        ]
      },
      "description": "This dashboard works with StackGres",
      "editable": true,
      "gnetId": null,
      "graphTooltip": 0,
      "id": null,
      "links": [],
      "panels": [
        {
          "collapsed": true,
          "datasource": "${DS_PROMETHEUS}",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 0
          },
          "id": 30,
          "panels": [
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 7,
                "w": 8,
                "x": 0,
                "y": 1
              },
              "hiddenSeries": false,
              "id": 1,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "max": true,
                "min": false,
                "rightSide": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "links": [],
              "nullPointMode": "connected",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "pg_stat_activity_count{datname=~\"$datname\", instance=~\"${instance}:9187\", state=\"active\"} !=0",
                  "format": "time_series",
                  "interval": "",
                  "intervalFactor": 2,
                  "legendFormat": "Database: {{datname}}, State: {{state}}",
                  "refId": "A",
                  "step": 2
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Active sessions",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 7,
                "w": 8,
                "x": 8,
                "y": 1
              },
              "hiddenSeries": false,
              "id": 4,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "hideZero": true,
                "max": true,
                "min": false,
                "rightSide": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "links": [],
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 5,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "pg_stat_activity_count{datname=~\"$datname\", instance=~\"${instance}:9187\", state=~\"idle|idle in transaction|idle in transaction (aborted)\"}",
                  "format": "time_series",
                  "interval": "",
                  "intervalFactor": 2,
                  "legendFormat": "Database: {{datname}}, State: {{state}}",
                  "refId": "A",
                  "step": 2
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Idle sessions",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": "0",
                  "show": true
                },
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 7,
                "w": 8,
                "x": 16,
                "y": 1
              },
              "hiddenSeries": false,
              "id": 8,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "hideZero": true,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "sideWidth": null,
                "sort": "current",
                "sortDesc": true,
                "total": true,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "links": [],
              "nullPointMode": "null as zero",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 5,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "rate(pg_stat_database_tup_updated{datname=~\"$datname\", instance=~\"${instance}:9187\"}[5m]) != 0",
                  "format": "time_series",
                  "interval": "",
                  "intervalFactor": 2,
                  "legendFormat": "Database: {{datname}}",
                  "refId": "A",
                  "step": 2
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Updated data (Rows)",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 7,
                "w": 8,
                "x": 0,
                "y": 8
              },
              "hiddenSeries": false,
              "id": 5,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": true,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "links": [],
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 5,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "rate(pg_stat_database_tup_fetched{datname=~\"$datname\", instance=~\"${instance}:9187\"}[5m]) != 0",
                  "format": "time_series",
                  "interval": "",
                  "intervalFactor": 2,
                  "legendFormat": "Database: {{datname}}",
                  "refId": "A",
                  "step": 2
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Fetched data (Rows)",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 7,
                "w": 8,
                "x": 8,
                "y": 8
              },
              "hiddenSeries": false,
              "id": 60,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "hideZero": true,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "links": [],
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 5,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "rate(pg_stat_database_xact_commit{instance=~\"${instance}:9187\", datname=~\"$datname\"}[5m])",
                  "format": "time_series",
                  "interval": "",
                  "intervalFactor": 1,
                  "legendFormat": "Database: {{datname}} - COMMIT",
                  "refId": "A"
                },
                {
                  "expr": "rate(pg_stat_database_xact_rollback{instance=~\"${instance}:9187\", datname=~\"$datname\"}[5m])",
                  "format": "time_series",
                  "interval": "",
                  "intervalFactor": 1,
                  "legendFormat": "Database: {{datname}} - ROLLBACK",
                  "refId": "B"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Transactions",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 7,
                "w": 8,
                "x": 16,
                "y": 8
              },
              "hiddenSeries": false,
              "id": 3,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": false,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "links": [],
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 5,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "pg_locks_count{datname=~\"$datname\", instance=~\"${instance}:9187\"} != 0",
                  "format": "time_series",
                  "interval": "",
                  "intervalFactor": 2,
                  "legendFormat": "Database: {{datname}}, Type:{{mode}}",
                  "refId": "A",
                  "step": 2
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Lock tables",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": "0",
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 7,
                "w": 8,
                "x": 0,
                "y": 15
              },
              "hiddenSeries": false,
              "id": 14,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "hideZero": true,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "sort": "total",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "links": [],
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 5,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "rate(pg_stat_database_tup_returned{datname=~\"$datname\", instance=~\"${instance}:9187\"}[5m]) != 0",
                  "format": "time_series",
                  "interval": "",
                  "intervalFactor": 2,
                  "legendFormat": "Database: {{datname}}",
                  "refId": "A",
                  "step": 2
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Returned data (Rows)",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 7,
                "w": 8,
                "x": 8,
                "y": 15
              },
              "hiddenSeries": false,
              "id": 6,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "sideWidth": null,
                "sort": "current",
                "sortDesc": true,
                "total": true,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "links": [],
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 5,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "rate(pg_stat_database_tup_inserted{datname=~\"$datname\", instance=~\"${instance}:9187\"}[5m]) != 0",
                  "format": "time_series",
                  "interval": "",
                  "intervalFactor": 2,
                  "legendFormat": "Database: {{datname}}",
                  "refId": "A",
                  "step": 2
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Inserted data (Rows)",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 7,
                "w": 8,
                "x": 16,
                "y": 15
              },
              "hiddenSeries": false,
              "id": 7,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "hideZero": true,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "links": [],
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 5,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "rate(pg_stat_database_tup_deleted{datname=~\"$datname\", instance=~\"${instance}:9187\"}[5m]) != 0",
                  "format": "time_series",
                  "interval": "",
                  "intervalFactor": 2,
                  "legendFormat": "Database: {{datname}}",
                  "refId": "A",
                  "step": 2
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Deleted data (Rows)",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 2,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 7,
                "w": 8,
                "x": 0,
                "y": 22
              },
              "hiddenSeries": false,
              "id": 62,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "sort": "current",
                "sortDesc": false,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "links": [],
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 5,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "pg_stat_database_blks_hit{instance=~\"${instance}:9187\", datname=~\"$datname\"} / (pg_stat_database_blks_read{instance=~\"${instance}:9187\", datname=~\"$datname\"} + pg_stat_database_blks_hit{instance=~\"${instance}:9187\", datname=~\"$datname\"})",
                  "format": "time_series",
                  "interval": "",
                  "intervalFactor": 1,
                  "legendFormat": "Database: {{ datname }}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Cache Hit Rate",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 2,
                  "format": "percentunit",
                  "label": "",
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 7,
                "w": 8,
                "x": 8,
                "y": 22
              },
              "hiddenSeries": false,
              "id": 64,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "hideZero": true,
                "max": true,
                "min": true,
                "rightSide": false,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "links": [],
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 5,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "rate(pg_stat_bgwriter_buffers_backend{instance=~\"${instance}:9187\"}[5m])",
                  "format": "time_series",
                  "intervalFactor": 1,
                  "legendFormat": "buffers_backend",
                  "refId": "A"
                },
                {
                  "expr": "rate(pg_stat_bgwriter_buffers_alloc{instance=~\"${instance}:9187\"}[5m])",
                  "format": "time_series",
                  "intervalFactor": 1,
                  "legendFormat": "buffers_alloc",
                  "refId": "B"
                },
                {
                  "expr": "rate(pg_stat_bgwriter_buffers_backend_fsync{instance=~\"${instance}:9187\"}[5m])",
                  "format": "time_series",
                  "intervalFactor": 1,
                  "legendFormat": "backend_fsync",
                  "refId": "C"
                },
                {
                  "expr": "rate(pg_stat_bgwriter_buffers_checkpoint{instance=~\"${instance}:9187\"}[5m])",
                  "format": "time_series",
                  "intervalFactor": 1,
                  "legendFormat": "buffers_checkpoint",
                  "refId": "D"
                },
                {
                  "expr": "rate(pg_stat_bgwriter_buffers_clean{instance=~\"${instance}:9187\"}[5m])",
                  "format": "time_series",
                  "intervalFactor": 1,
                  "legendFormat": "buffers_clean",
                  "refId": "E"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Buffers (bgwriter)",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 7,
                "w": 8,
                "x": 16,
                "y": 22
              },
              "hiddenSeries": false,
              "id": 66,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "max": false,
                "min": false,
                "rightSide": true,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": true,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "links": [],
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 5,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "rate(pg_stat_database_conflicts{instance=~\"${instance}:9187\", datname=~\"$datname\"}[5m])",
                  "format": "time_series",
                  "intervalFactor": 1,
                  "legendFormat": "Database {{datname}} conflicts",
                  "refId": "B"
                },
                {
                  "expr": "rate(pg_stat_database_deadlocks{instance=~\"${instance}:9187\", datname=~\"$datname\"}[5m])",
                  "format": "time_series",
                  "intervalFactor": 1,
                  "legendFormat": "Database {{datname}} deadlocks",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Conflicts/Deadlocks",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": "0",
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 2,
              "description": "Total amount of data written to temporary files by queries in this database. All temporary files are counted, regardless of why the temporary file was created, and regardless of the log_temp_files setting.",
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 7,
                "w": 13,
                "x": 0,
                "y": 29
              },
              "hiddenSeries": false,
              "id": 68,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "hideZero": true,
                "max": true,
                "min": false,
                "rightSide": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "links": [],
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 5,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "rate(pg_stat_database_temp_bytes{instance=~\"${instance}:9187\", datname=~\"$datname\"}[5m])",
                  "format": "time_series",
                  "interval": "",
                  "intervalFactor": 1,
                  "legendFormat": "Database: {{datname}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Temp File (Bytes)",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "format": "bytes",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": "0",
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 7,
                "w": 11,
                "x": 13,
                "y": 29
              },
              "hiddenSeries": false,
              "id": 243,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": false,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "links": [],
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 5,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "exemplar": true,
                  "expr": "pg_vaccuum_wraparound_percent{datname=~\"$datname\", instance=~\"${instance}:9187\"} != 0",
                  "format": "time_series",
                  "interval": "",
                  "intervalFactor": 2,
                  "legendFormat": "Database: {{datname}}, Table:{{full_table_name}}",
                  "refId": "A",
                  "step": 2
                }
              ],
              "thresholds": [
                {
                  "colorMode": "warning",
                  "fill": true,
                  "line": true,
                  "op": "gt",
                  "value": 90,
                  "yaxis": "left"
                }
              ],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Tables near to vacuum wraparound",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": "0",
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 13,
                "x": 0,
                "y": 36
              },
              "hiddenSeries": false,
              "id": 70,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "max": true,
                "min": true,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "links": [],
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 5,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "rate(pg_stat_bgwriter_checkpoint_write_time{instance=~\"${instance}:9187\"}[5m])",
                  "format": "time_series",
                  "interval": "",
                  "intervalFactor": 1,
                  "legendFormat": "write_time - Total amount of time that has been spent in the portion of checkpoint processing where files are written to disk.",
                  "refId": "B"
                },
                {
                  "expr": "rate(pg_stat_bgwriter_checkpoint_sync_time{instance=~\"${instance}:9187\"}[5m])",
                  "format": "time_series",
                  "intervalFactor": 1,
                  "legendFormat": "sync_time - Total amount of time that has been spent in the portion of checkpoint processing where files are synchronized to disk.",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Checkpoint Duration Stats",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "format": "ms",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 11,
                "x": 13,
                "y": 36
              },
              "hiddenSeries": false,
              "id": 238,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": false,
                "hideZero": false,
                "max": true,
                "min": false,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 2,
              "nullPointMode": "null as zero",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "label_replace(sum(rate(pg_stat_bgwriter_checkpoints_timed{instance=~\"${instance}:9187\"}[5m])) by (instance), \"distinct\", \"Timed\", \"timed\", \".*\")*300 or label_replace(sum(rate(pg_stat_bgwriter_checkpoints_req{instance=~\"${instance}:9187\"}[5m])) by (instance), \"distinct\", \"Requested\", \"requested\", \".*\")*300",
                  "interval": "",
                  "legendFormat": "{{distinct}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Checkpoint frequency",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            }
          ],
          "title": "Database Stats",
          "type": "row"
        },
        {
          "collapsed": true,
          "datasource": "${DS_PROMETHEUS}",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 1
          },
          "id": 211,
          "panels": [
            {
              "aliasColors": {
                "Database: mminventory, User: mminventory_pro": "light-blue"
              },
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 0,
                "y": 2
              },
              "hiddenSeries": false,
              "id": 213,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "hideZero": true,
                "max": true,
                "min": false,
                "rightSide": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 2,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "pgbouncer_show_pools_cl_active{instance=~\"${instance}:9187\",database!~\"pgbouncer\"}",
                  "interval": "",
                  "legendFormat": "Database: {{database}}, User: {{user}}",
                  "refId": "A"
                }
              ],
              "thresholds": [
                {
                  "colorMode": "warning",
                  "fill": true,
                  "fillColor": "rgba(51, 162, 229, 0.2)",
                  "line": true,
                  "lineColor": "rgba(31, 96, 196, 0.6)",
                  "op": "gt",
                  "value": 185,
                  "yaxis": "left"
                },
                {
                  "colorMode": "critical",
                  "fill": true,
                  "line": true,
                  "op": "gt",
                  "value": 250,
                  "yaxis": "left"
                }
              ],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Active Clients",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 12,
                "y": 2
              },
              "hiddenSeries": false,
              "id": 214,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "hideZero": true,
                "max": true,
                "min": false,
                "rightSide": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "pgbouncer_show_pools_cl_waiting{instance=~\"${instance}:9187\",database!~\"pgbouncer\"}",
                  "interval": "",
                  "legendFormat": "Database: {{database}}, User: {{user}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Waiting Clients",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 0,
                "y": 10
              },
              "hiddenSeries": false,
              "id": 215,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "hideZero": true,
                "max": true,
                "min": false,
                "rightSide": false,
                "show": true,
                "sort": "current",
                "sortDesc": false,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "pgbouncer_show_pools_sv_active{instance=~\"${instance}:9187\",database!~\"pgbouncer\"}",
                  "interval": "",
                  "legendFormat": "Database: {{database}}, User: {{user}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Server Active",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 12,
                "y": 10
              },
              "hiddenSeries": false,
              "id": 216,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "hideZero": true,
                "max": true,
                "min": false,
                "rightSide": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "pgbouncer_show_pools_sv_idle{instance=~\"${instance}:9187\",database!~\"pgbouncer\"}",
                  "interval": "",
                  "legendFormat": "Database: {{database}}, User: {{user}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Server Idle",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 0,
                "y": 18
              },
              "hiddenSeries": false,
              "id": 217,
              "legend": {
                "alignAsTable": true,
                "avg": false,
                "current": true,
                "hideEmpty": false,
                "hideZero": false,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "pgbouncer_show_stats_avg_xact_time{instance=~\"${instance}:9187\",database!~\"pgbouncer\"}",
                  "interval": "",
                  "legendFormat": "Database: {{database}}  - XACT",
                  "refId": "A"
                },
                {
                  "expr": "pgbouncer_show_stats_avg_query_time{instance=~\"${instance}:9187\",database!~\"pgbouncer\"}",
                  "interval": "",
                  "legendFormat": "Database: {{database}} - QUERY",
                  "refId": "B"
                },
                {
                  "expr": "pgbouncer_show_stats_avg_wait_time{instance=~\"${instance}:9187\",database!~\"pgbouncer\"}",
                  "interval": "",
                  "legendFormat": "Database: {{database}} - WAIT",
                  "refId": "C"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Average Time",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": null,
                  "format": "µs",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": null,
                  "format": "µs",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 12,
                "y": 18
              },
              "hiddenSeries": false,
              "id": 218,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": false,
                "hideZero": false,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "pgbouncer_show_stats_avg_recv{instance=~\"${instance}:9187\",database!~\"pgbouncer\"}",
                  "interval": "",
                  "legendFormat": "Database: {{database}} - RECV",
                  "refId": "A"
                },
                {
                  "expr": "pgbouncer_show_stats_avg_query_time{instance=~\"${instance}:9187\",database!~\"pgbouncer\"}",
                  "interval": "",
                  "legendFormat": "Database: {{database}}  - SENT",
                  "refId": "B"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Average traffic",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": null,
                  "format": "bytes",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": null,
                  "format": "bytes",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            }
          ],
          "title": "Connection Pooling",
          "type": "row"
        },
        {
          "collapsed": true,
          "datasource": "${DS_PROMETHEUS}",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 2
          },
          "id": 190,
          "panels": [
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 0,
                "y": 3
              },
              "hiddenSeries": false,
              "id": 192,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "hideZero": false,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_transactions_commit{pod=~\"${instance}:8001\"}[5m])",
                  "interval": "",
                  "legendFormat": "COMMIT",
                  "refId": "A"
                },
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_transactions_rollback{instance=~\"${instance}:8001\"}[5m])",
                  "interval": "",
                  "legendFormat": "ROLLBACK",
                  "refId": "B"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Transactions ( 5min rate )",
              "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": "",
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 12,
                "y": 3
              },
              "hiddenSeries": false,
              "id": 184,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 2,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_statements_update{instance=~\"${instance}:8001\"}[5m])",
                  "interval": "",
                  "legendFormat": "UPDATE",
                  "refId": "A"
                },
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_statements_insert{instance=~\"${instance}:8001\"}[5m])",
                  "interval": "",
                  "legendFormat": "INSERT",
                  "refId": "B"
                },
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_statements_delete{instance=~\"${instance}:8001\"}[5m])",
                  "interval": "",
                  "legendFormat": "DELETE",
                  "refId": "C"
                },
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_statements_select{instance=~\"${instance}:8001\"}[5m])",
                  "interval": "",
                  "legendFormat": "SELECT",
                  "refId": "D"
                },
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_statements_other{instance=~\"${instance}:8001\"}[5m])",
                  "interval": "",
                  "legendFormat": "OTHER",
                  "refId": "E"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "SQL statements ( 5min rate )",
              "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            }
          ],
          "title": "Transactions",
          "type": "row"
        },
        {
          "collapsed": true,
          "datasource": "${DS_PROMETHEUS}",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 3
          },
          "id": 160,
          "panels": [
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "custom": {},
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 24,
                "x": 0,
                "y": 4
              },
              "hiddenSeries": false,
              "id": 164,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "max": false,
                "min": false,
                "rightSide": true,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 2,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "7.3.5",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_messages_backend{instance=~\"${instance}:8001\"}[5m])",
                  "interval": "",
                  "legendFormat": "BACKEND",
                  "refId": "A"
                },
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_messages_frontend{instance=~\"${instance}:8001\"}[5m])",
                  "interval": "",
                  "legendFormat": "FRONTEND",
                  "refId": "B"
                },
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_messages_unknown{instance=~\"${instance}:8001\"}[5m])",
                  "interval": "",
                  "legendFormat": "UNKNOWN",
                  "refId": "C"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Messages ( 5min rate )",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": null,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": null,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "custom": {},
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 0,
                "y": 12
              },
              "hiddenSeries": false,
              "id": 146,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 2,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "7.3.5",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_errors_fatal{instance=~\"${instance}:8001\"}[5m])*300",
                  "interval": "",
                  "legendFormat": "FATAL",
                  "refId": "A"
                },
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_errors_error{instance=~\"${instance}:8001\"}[5m])*300",
                  "interval": "",
                  "legendFormat": "ERROR",
                  "refId": "B"
                },
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_errors_unknown{instance=~\"${instance}:8001\"}[5m])*300",
                  "interval": "",
                  "legendFormat": "UNKNOWN",
                  "refId": "C"
                },
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_errors_panic{instance=~\"${instance}:8001\"}[5m])*300",
                  "interval": "",
                  "legendFormat": "PANIC",
                  "refId": "D"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "ERROR messages ( 5min rate )",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "custom": {},
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 12,
                "y": 12
              },
              "hiddenSeries": false,
              "id": 170,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "7.3.5",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_notices_unknown{instance=~\"${instance}:8001\"}[5m])",
                  "interval": "",
                  "legendFormat": "UNKNOWN",
                  "refId": "A"
                },
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_notices_notice{instance=~\"${instance}:8001\"}[5m])",
                  "interval": "",
                  "legendFormat": "NOTICE",
                  "refId": "B"
                },
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_notices_warning{instance=~\"${instance}:8001\"}[5m])",
                  "interval": "",
                  "legendFormat": "WARNING",
                  "refId": "C"
                },
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_notices_info{instance=~\"${instance}:8001\"}[5m])",
                  "interval": "",
                  "legendFormat": "INFO",
                  "refId": "D"
                },
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_notices_log{instance=~\"${instance}:8001\"}[5m])",
                  "interval": "",
                  "legendFormat": "LOG",
                  "refId": "E"
                },
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_notices_debug{instance=~\"${instance}:8001\"}[5m])",
                  "interval": "",
                  "legendFormat": "DEBUG",
                  "refId": "F"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "NOTICE ( 5min rate )",
              "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            }
          ],
          "title": "Messages",
          "type": "row"
        },
        {
          "collapsed": true,
          "datasource": "${DS_PROMETHEUS}",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 4
          },
          "id": 152,
          "panels": [
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "custom": {},
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 0,
                "y": 5
              },
              "hiddenSeries": false,
              "id": 154,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "hideZero": true,
                "max": true,
                "min": false,
                "rightSide": false,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "7.3.5",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_sessions{instance=~\"${instance}:8001\"}[5m])*300",
                  "interval": "",
                  "legendFormat": "namespace: {{namespace}}, pod: {{pod}} ",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Successful logins",
              "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "custom": {},
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 12,
                "y": 5
              },
              "hiddenSeries": false,
              "id": 156,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "max": true,
                "min": false,
                "rightSide": false,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 2,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "7.3.5",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_sessions_encrypted{instance=~\"${instance}:8001\"}[5m])*300",
                  "interval": "",
                  "legendFormat": "namespace: {{namespace}}, pod: {{pod}} - ENCRYPTED",
                  "refId": "A"
                },
                {
                  "expr": "rate(envoy_postgres_ingress_postgres_sessions_unencrypted{instance=~\"${instance}:8001\"}[5m])*300",
                  "interval": "",
                  "legendFormat": "namespace: {{namespace}}, pod: {{pod}} - UNENCRYPTED",
                  "refId": "B"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Sessions Encryption",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            }
          ],
          "title": "Sessions",
          "type": "row"
        },
        {
          "collapsed": true,
          "datasource": "${DS_PROMETHEUS}",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 5
          },
          "id": 34,
          "panels": [
            {
              "cacheTimeout": null,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "color": {
                    "mode": "thresholds"
                  },
                  "mappings": [
                    {
                      "options": {
                        "match": "null",
                        "result": {
                          "text": "N/A"
                        }
                      },
                      "type": "special"
                    }
                  ],
                  "thresholds": {
                    "mode": "absolute",
                    "steps": [
                      {
                        "color": "green",
                        "value": null
                      },
                      {
                        "color": "red",
                        "value": 80
                      }
                    ]
                  },
                  "unit": "none"
                },
                "overrides": []
              },
              "gridPos": {
                "h": 2,
                "w": 4,
                "x": 0,
                "y": 6
              },
              "id": 36,
              "interval": null,
              "links": [],
              "maxDataPoints": 100,
              "options": {
                "colorMode": "value",
                "graphMode": "none",
                "justifyMode": "auto",
                "orientation": "horizontal",
                "reduceOptions": {
                  "calcs": [
                    "mean"
                  ],
                  "fields": "",
                  "values": false
                },
                "text": {},
                "textMode": "name"
              },
              "pluginVersion": "8.1.2",
              "targets": [
                {
                  "expr": "pg_static{instance=~\"${instance}:9187\"}",
                  "format": "time_series",
                  "instant": true,
                  "interval": "",
                  "intervalFactor": 1,
                  "legendFormat": "{{short_version}}",
                  "refId": "A"
                }
              ],
              "title": "Version",
              "type": "stat"
            },
            {
              "cacheTimeout": null,
              "datasource": "${DS_PROMETHEUS}",
              "description": "start time of the process",
              "fieldConfig": {
                "defaults": {
                  "color": {
                    "mode": "thresholds"
                  },
                  "mappings": [
                    {
                      "options": {
                        "match": "null",
                        "result": {
                          "text": "N/A"
                        }
                      },
                      "type": "special"
                    }
                  ],
                  "thresholds": {
                    "mode": "absolute",
                    "steps": [
                      {
                        "color": "green",
                        "value": null
                      },
                      {
                        "color": "red",
                        "value": 80
                      }
                    ]
                  },
                  "unit": "dateTimeFromNow"
                },
                "overrides": []
              },
              "gridPos": {
                "h": 2,
                "w": 4,
                "x": 4,
                "y": 6
              },
              "id": 28,
              "interval": null,
              "links": [],
              "maxDataPoints": 100,
              "options": {
                "colorMode": "none",
                "graphMode": "none",
                "justifyMode": "auto",
                "orientation": "horizontal",
                "reduceOptions": {
                  "calcs": [
                    "mean"
                  ],
                  "fields": "",
                  "values": false
                },
                "text": {},
                "textMode": "auto"
              },
              "pluginVersion": "8.1.2",
              "targets": [
                {
                  "expr": "process_start_time_seconds{instance=~\"${instance}:9187\"} * 1000",
                  "format": "time_series",
                  "interval": "",
                  "intervalFactor": 2,
                  "legendFormat": "",
                  "refId": "A"
                }
              ],
              "title": "Start Time",
              "type": "stat"
            },
            {
              "cacheTimeout": null,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "color": {
                    "mode": "thresholds"
                  },
                  "mappings": [
                    {
                      "options": {
                        "match": "null",
                        "result": {
                          "text": "N/A"
                        }
                      },
                      "type": "special"
                    }
                  ],
                  "thresholds": {
                    "mode": "absolute",
                    "steps": [
                      {
                        "color": "green",
                        "value": null
                      },
                      {
                        "color": "red",
                        "value": 80
                      }
                    ]
                  },
                  "unit": "decbytes"
                },
                "overrides": []
              },
              "gridPos": {
                "h": 2,
                "w": 4,
                "x": 8,
                "y": 6
              },
              "id": 10,
              "interval": null,
              "links": [],
              "maxDataPoints": 100,
              "options": {
                "colorMode": "none",
                "graphMode": "none",
                "justifyMode": "auto",
                "orientation": "horizontal",
                "reduceOptions": {
                  "calcs": [
                    "lastNotNull"
                  ],
                  "fields": "",
                  "values": false
                },
                "text": {},
                "textMode": "auto"
              },
              "pluginVersion": "8.1.2",
              "targets": [
                {
                  "expr": "SUM(pg_stat_database_tup_fetched{datname=~\"$datname\", instance=~\"${instance}:9187\"})",
                  "format": "time_series",
                  "intervalFactor": 2,
                  "refId": "A",
                  "step": 4
                }
              ],
              "title": "Current fetch data",
              "type": "stat"
            },
            {
              "cacheTimeout": null,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "color": {
                    "mode": "thresholds"
                  },
                  "mappings": [
                    {
                      "options": {
                        "match": "null",
                        "result": {
                          "text": "N/A"
                        }
                      },
                      "type": "special"
                    }
                  ],
                  "thresholds": {
                    "mode": "absolute",
                    "steps": [
                      {
                        "color": "green",
                        "value": null
                      },
                      {
                        "color": "red",
                        "value": 80
                      }
                    ]
                  },
                  "unit": "decbytes"
                },
                "overrides": []
              },
              "gridPos": {
                "h": 2,
                "w": 4,
                "x": 12,
                "y": 6
              },
              "id": 11,
              "interval": null,
              "links": [],
              "maxDataPoints": 100,
              "options": {
                "colorMode": "none",
                "graphMode": "none",
                "justifyMode": "auto",
                "orientation": "horizontal",
                "reduceOptions": {
                  "calcs": [
                    "lastNotNull"
                  ],
                  "fields": "",
                  "values": false
                },
                "text": {},
                "textMode": "auto"
              },
              "pluginVersion": "8.1.2",
              "targets": [
                {
                  "expr": "SUM(pg_stat_database_tup_inserted{datname=~\"$datname\", instance=~\"${instance}:9187\"})",
                  "format": "time_series",
                  "interval": "",
                  "intervalFactor": 2,
                  "legendFormat": "",
                  "refId": "A",
                  "step": 4
                }
              ],
              "title": "Current insert data",
              "type": "stat"
            },
            {
              "cacheTimeout": null,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "color": {
                    "mode": "thresholds"
                  },
                  "mappings": [
                    {
                      "options": {
                        "match": "null",
                        "result": {
                          "text": "N/A"
                        }
                      },
                      "type": "special"
                    }
                  ],
                  "thresholds": {
                    "mode": "absolute",
                    "steps": [
                      {
                        "color": "green",
                        "value": null
                      },
                      {
                        "color": "red",
                        "value": 80
                      }
                    ]
                  },
                  "unit": "decbytes"
                },
                "overrides": []
              },
              "gridPos": {
                "h": 2,
                "w": 4,
                "x": 16,
                "y": 6
              },
              "id": 12,
              "interval": null,
              "links": [],
              "maxDataPoints": 100,
              "options": {
                "colorMode": "none",
                "graphMode": "none",
                "justifyMode": "auto",
                "orientation": "horizontal",
                "reduceOptions": {
                  "calcs": [
                    "lastNotNull"
                  ],
                  "fields": "",
                  "values": false
                },
                "text": {},
                "textMode": "auto"
              },
              "pluginVersion": "8.1.2",
              "targets": [
                {
                  "expr": "SUM(pg_stat_database_tup_updated{datname=~\"$datname\", instance=~\"${instance}:9187\"})",
                  "format": "time_series",
                  "intervalFactor": 2,
                  "refId": "A",
                  "step": 4
                }
              ],
              "title": "Current update data",
              "type": "stat"
            },
            {
              "cacheTimeout": null,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "color": {
                    "mode": "thresholds"
                  },
                  "mappings": [
                    {
                      "options": {
                        "match": "null",
                        "result": {
                          "text": "N/A"
                        }
                      },
                      "type": "special"
                    }
                  ],
                  "thresholds": {
                    "mode": "absolute",
                    "steps": [
                      {
                        "color": "green",
                        "value": null
                      },
                      {
                        "color": "red",
                        "value": 80
                      }
                    ]
                  },
                  "unit": "none"
                },
                "overrides": []
              },
              "gridPos": {
                "h": 2,
                "w": 4,
                "x": 20,
                "y": 6
              },
              "id": 38,
              "interval": null,
              "links": [],
              "maxDataPoints": 100,
              "options": {
                "colorMode": "none",
                "graphMode": "none",
                "justifyMode": "auto",
                "orientation": "horizontal",
                "reduceOptions": {
                  "calcs": [
                    "mean"
                  ],
                  "fields": "",
                  "values": false
                },
                "text": {},
                "textMode": "auto"
              },
              "pluginVersion": "8.1.2",
              "targets": [
                {
                  "expr": "pg_settings_max_connections{instance=~\"${instance}:9187\"}",
                  "format": "time_series",
                  "interval": "",
                  "intervalFactor": 1,
                  "legendFormat": "",
                  "refId": "A"
                }
              ],
              "title": "Max Connections",
              "type": "stat"
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "description": "Average user and system CPU time spent in seconds.",
              "fieldConfig": {
                "defaults": {
                  "custom": {},
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 7,
                "w": 8,
                "x": 0,
                "y": 8
              },
              "hiddenSeries": false,
              "id": 22,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "max": true,
                "min": true,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "links": [],
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "7.3.5",
              "pointradius": 5,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "avg(rate(process_cpu_seconds_total{instance=~\"${instance}:9187\"}[5m]) * 1000)",
                  "format": "time_series",
                  "interval": "",
                  "intervalFactor": 2,
                  "legendFormat": "CPU Time",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Average CPU Usage",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "format": "s",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "description": "Virtual and Resident memory size in bytes, averages over 5 min interval",
              "fieldConfig": {
                "defaults": {
                  "custom": {},
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 7,
                "w": 8,
                "x": 8,
                "y": 8
              },
              "hiddenSeries": false,
              "id": 24,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "max": true,
                "min": true,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "links": [],
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "7.3.5",
              "pointradius": 5,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "avg(rate(process_resident_memory_bytes{instance=~\"${instance}:9187\"}[5m]))",
                  "format": "time_series",
                  "interval": "",
                  "intervalFactor": 2,
                  "legendFormat": "Resident Mem",
                  "refId": "A"
                },
                {
                  "expr": "avg(rate(process_virtual_memory_bytes{instance=~\"${instance}:9187\"}[5m]))",
                  "format": "time_series",
                  "interval": "",
                  "intervalFactor": 2,
                  "legendFormat": "Virtual Mem",
                  "refId": "B"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Average Memory Usage",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": null,
                  "format": "decbytes",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "description": "Number of open file descriptors",
              "fieldConfig": {
                "defaults": {
                  "custom": {},
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 7,
                "w": 8,
                "x": 16,
                "y": 8
              },
              "hiddenSeries": false,
              "id": 26,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "max": true,
                "min": true,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "links": [],
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "7.3.5",
              "pointradius": 5,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "process_open_fds{instance=~\"${instance}:9187\"}",
                  "format": "time_series",
                  "interval": "",
                  "intervalFactor": 2,
                  "legendFormat": "Open FD",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Open File Descriptors",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": null,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "custom": {},
                  "links": []
                },
                "overrides": []
              },
              "fill": 0,
              "fillGradient": 0,
              "gridPos": {
                "h": 7,
                "w": 12,
                "x": 0,
                "y": 15
              },
              "hiddenSeries": false,
              "id": 228,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "max": true,
                "min": true,
                "show": true,
                "sort": "current",
                "sortDesc": false,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "7.3.5",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "node_filesystem_avail_bytes{instance=~\"${instance}:9187\",fstype!=\"\"}",
                  "interval": "",
                  "legendFormat": "{{mountpoint}} Available",
                  "refId": "A"
                },
                {
                  "expr": "node_filesystem_size_bytes{instance=~\"${instance}:9187\",fstype!=\"\"}",
                  "format": "time_series",
                  "instant": false,
                  "interval": "",
                  "legendFormat": "{{mountpoint}} Total",
                  "refId": "B"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Total / Available Disk Size",
              "tooltip": {
                "shared": false,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "format": "bytes",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": null,
                  "format": "percent",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": false
                }
              ],
              "yaxis": {
                "align": true,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "custom": {},
                  "links": []
                },
                "overrides": []
              },
              "fill": 0,
              "fillGradient": 0,
              "gridPos": {
                "h": 7,
                "w": 12,
                "x": 12,
                "y": 15
              },
              "hiddenSeries": false,
              "id": 230,
              "legend": {
                "alignAsTable": true,
                "avg": false,
                "current": true,
                "max": false,
                "min": false,
                "show": true,
                "sort": "current",
                "sortDesc": false,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "7.3.5",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "node_filesystem_files_free{instance=~\"${instance}:9187\",fstype!=\"\"}",
                  "interval": "",
                  "legendFormat": "{{mountpoint}} inodes free",
                  "refId": "A"
                },
                {
                  "expr": "node_filesystem_files{instance=~\"${instance}:9187\",fstype!=\"\"}",
                  "interval": "",
                  "legendFormat": "{{mountpoint}} inodes",
                  "refId": "B"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Total / Available Disk inodes",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            }
          ],
          "title": "General Counters, Disks, CPU, Memory and File Descriptor Stats",
          "type": "row"
        },
        {
          "collapsed": true,
          "datasource": "${DS_PROMETHEUS}",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 6
          },
          "id": 32,
          "panels": [
            {
              "cacheTimeout": null,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "color": {
                    "mode": "thresholds"
                  },
                  "custom": {},
                  "mappings": [
                    {
                      "options": {
                        "0": {
                          "index": 0,
                          "text": "Leader"
                        },
                        "1": {
                          "index": 1,
                          "text": "Replica"
                        }
                      },
                      "text": "Leader",
                      "type": 1,
                      "value": "0"
                    },
                    {
                      "from": "",
                      "id": null,
                      "operator": "",
                      "text": "Replica",
                      "to": "",
                      "type": 1,
                      "value": "1"
                    }
                  ],
                  "thresholds": {
                    "mode": "absolute",
                    "steps": [
                      {
                        "color": "green",
                        "value": null
                      },
                      {
                        "color": "red",
                        "value": 80
                      }
                    ]
                  },
                  "unit": "string"
                },
                "overrides": []
              },
              "gridPos": {
                "h": 3,
                "w": 6,
                "x": 0,
                "y": 7
              },
              "id": 42,
              "interval": null,
              "links": [],
              "maxDataPoints": 100,
              "options": {
                "colorMode": "none",
                "graphMode": "none",
                "justifyMode": "auto",
                "orientation": "horizontal",
                "reduceOptions": {
                  "calcs": [
                    "lastNotNull"
                  ],
                  "fields": "",
                  "values": false
                },
                "text": {},
                "textMode": "auto"
              },
              "pluginVersion": "7.0.6",
              "targets": [
                {
                  "exemplar": true,
                  "expr": "pg_replication_is_replica{instance=~\"${instance}:9187\"}",
                  "format": "time_series",
                  "interval": "",
                  "intervalFactor": 1,
                  "legendFormat": "",
                  "refId": "A"
                }
              ],
              "title": "Role",
              "type": "stat"
            },
            {
              "cacheTimeout": null,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "color": {
                    "mode": "thresholds"
                  },
                  "custom": {},
                  "mappings": [
                    {
                      "options": {
                        "match": "null",
                        "result": {
                          "text": "N/A"
                        }
                      },
                      "type": "special"
                    }
                  ],
                  "thresholds": {
                    "mode": "absolute",
                    "steps": [
                      {
                        "color": "green",
                        "value": null
                      },
                      {
                        "color": "red",
                        "value": 80
                      }
                    ]
                  },
                  "unit": "bytes"
                },
                "overrides": []
              },
              "gridPos": {
                "h": 3,
                "w": 3,
                "x": 6,
                "y": 7
              },
              "id": 44,
              "interval": null,
              "links": [],
              "maxDataPoints": 100,
              "options": {
                "colorMode": "none",
                "graphMode": "none",
                "justifyMode": "auto",
                "orientation": "horizontal",
                "reduceOptions": {
                  "calcs": [
                    "lastNotNull"
                  ],
                  "fields": "",
                  "values": false
                },
                "text": {},
                "textMode": "auto"
              },
              "pluginVersion": "7.0.6",
              "targets": [
                {
                  "expr": "pg_settings_maintenance_work_mem_bytes{instance=~\"${instance}:9187\"}",
                  "format": "time_series",
                  "intervalFactor": 1,
                  "refId": "A"
                }
              ],
              "title": "Maintenance Work Mem",
              "type": "stat"
            },
            {
              "cacheTimeout": null,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "color": {
                    "mode": "thresholds"
                  },
                  "custom": {},
                  "mappings": [
                    {
                      "options": {
                        "match": "null",
                        "result": {
                          "text": "N/A"
                        }
                      },
                      "type": "special"
                    }
                  ],
                  "thresholds": {
                    "mode": "absolute",
                    "steps": [
                      {
                        "color": "green",
                        "value": null
                      },
                      {
                        "color": "red",
                        "value": 80
                      }
                    ]
                  },
                  "unit": "bytes"
                },
                "overrides": []
              },
              "gridPos": {
                "h": 3,
                "w": 3,
                "x": 9,
                "y": 7
              },
              "id": 46,
              "interval": null,
              "links": [],
              "maxDataPoints": 100,
              "options": {
                "colorMode": "none",
                "graphMode": "none",
                "justifyMode": "auto",
                "orientation": "horizontal",
                "reduceOptions": {
                  "calcs": [
                    "lastNotNull"
                  ],
                  "fields": "",
                  "values": false
                },
                "text": {},
                "textMode": "auto"
              },
              "pluginVersion": "7.0.6",
              "targets": [
                {
                  "expr": "pg_settings_work_mem_bytes{instance=~\"${instance}:9187\"}",
                  "format": "time_series",
                  "intervalFactor": 1,
                  "legendFormat": "",
                  "refId": "A"
                }
              ],
              "title": "Work Mem",
              "type": "stat"
            },
            {
              "cacheTimeout": null,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "color": {
                    "mode": "thresholds"
                  },
                  "custom": {},
                  "decimals": 1,
                  "mappings": [
                    {
                      "options": {
                        "match": "null",
                        "result": {
                          "text": "N/A"
                        }
                      },
                      "type": "special"
                    }
                  ],
                  "thresholds": {
                    "mode": "absolute",
                    "steps": [
                      {
                        "color": "green",
                        "value": null
                      },
                      {
                        "color": "red",
                        "value": 80
                      }
                    ]
                  },
                  "unit": "bytes"
                },
                "overrides": []
              },
              "gridPos": {
                "h": 3,
                "w": 3,
                "x": 12,
                "y": 7
              },
              "id": 48,
              "interval": null,
              "links": [],
              "maxDataPoints": 100,
              "options": {
                "colorMode": "none",
                "graphMode": "none",
                "justifyMode": "auto",
                "orientation": "horizontal",
                "reduceOptions": {
                  "calcs": [
                    "lastNotNull"
                  ],
                  "fields": "",
                  "values": false
                },
                "text": {},
                "textMode": "auto"
              },
              "pluginVersion": "7.0.6",
              "targets": [
                {
                  "expr": "pg_settings_max_wal_size_bytes{instance=~\"${instance}:9187\"}",
                  "format": "time_series",
                  "intervalFactor": 1,
                  "refId": "A"
                }
              ],
              "title": "Max WAL Size",
              "type": "stat"
            },
            {
              "cacheTimeout": null,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "color": {
                    "mode": "thresholds"
                  },
                  "custom": {},
                  "mappings": [
                    {
                      "options": {
                        "match": "null",
                        "result": {
                          "text": "N/A"
                        }
                      },
                      "type": "special"
                    }
                  ],
                  "thresholds": {
                    "mode": "absolute",
                    "steps": [
                      {
                        "color": "green",
                        "value": null
                      },
                      {
                        "color": "red",
                        "value": 80
                      }
                    ]
                  },
                  "unit": "none"
                },
                "overrides": []
              },
              "gridPos": {
                "h": 3,
                "w": 3,
                "x": 15,
                "y": 7
              },
              "id": 50,
              "interval": null,
              "links": [],
              "maxDataPoints": 100,
              "options": {
                "colorMode": "none",
                "graphMode": "none",
                "justifyMode": "auto",
                "orientation": "horizontal",
                "reduceOptions": {
                  "calcs": [
                    "lastNotNull"
                  ],
                  "fields": "",
                  "values": false
                },
                "text": {},
                "textMode": "auto"
              },
              "pluginVersion": "7.0.6",
              "targets": [
                {
                  "expr": "pg_settings_random_page_cost{instance=~\"${instance}:9187\"}",
                  "format": "time_series",
                  "intervalFactor": 1,
                  "refId": "A"
                }
              ],
              "title": "Random Page Cost",
              "type": "stat"
            },
            {
              "cacheTimeout": null,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "color": {
                    "mode": "thresholds"
                  },
                  "custom": {},
                  "mappings": [
                    {
                      "options": {
                        "match": "null",
                        "result": {
                          "text": "N/A"
                        }
                      },
                      "type": "special"
                    }
                  ],
                  "thresholds": {
                    "mode": "absolute",
                    "steps": [
                      {
                        "color": "green",
                        "value": null
                      },
                      {
                        "color": "red",
                        "value": 80
                      }
                    ]
                  },
                  "unit": "none"
                },
                "overrides": []
              },
              "gridPos": {
                "h": 3,
                "w": 2,
                "x": 18,
                "y": 7
              },
              "id": 52,
              "interval": null,
              "links": [],
              "maxDataPoints": 100,
              "options": {
                "colorMode": "none",
                "graphMode": "none",
                "justifyMode": "auto",
                "orientation": "horizontal",
                "reduceOptions": {
                  "calcs": [
                    "lastNotNull"
                  ],
                  "fields": "",
                  "values": false
                },
                "text": {},
                "textMode": "auto"
              },
              "pluginVersion": "7.0.6",
              "targets": [
                {
                  "expr": "pg_settings_seq_page_cost{instance=~\"${instance}:9187\"}",
                  "format": "time_series",
                  "intervalFactor": 1,
                  "refId": "A"
                }
              ],
              "title": "Seq Page Cost",
              "type": "stat"
            },
            {
              "cacheTimeout": null,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "color": {
                    "mode": "thresholds"
                  },
                  "custom": {},
                  "mappings": [
                    {
                      "options": {
                        "match": "null",
                        "result": {
                          "text": "N/A"
                        }
                      },
                      "type": "special"
                    }
                  ],
                  "thresholds": {
                    "mode": "absolute",
                    "steps": [
                      {
                        "color": "green",
                        "value": null
                      },
                      {
                        "color": "red",
                        "value": 80
                      }
                    ]
                  },
                  "unit": "none"
                },
                "overrides": []
              },
              "gridPos": {
                "h": 3,
                "w": 4,
                "x": 20,
                "y": 7
              },
              "id": 56,
              "interval": null,
              "links": [],
              "maxDataPoints": 100,
              "options": {
                "colorMode": "none",
                "graphMode": "none",
                "justifyMode": "auto",
                "orientation": "horizontal",
                "reduceOptions": {
                  "calcs": [
                    "lastNotNull"
                  ],
                  "fields": "",
                  "values": false
                },
                "text": {},
                "textMode": "auto"
              },
              "pluginVersion": "7.0.6",
              "targets": [
                {
                  "expr": "pg_settings_max_parallel_workers{instance=~\"${instance}:9187\"}",
                  "format": "time_series",
                  "intervalFactor": 1,
                  "refId": "A"
                }
              ],
              "title": "Max Parallel Workers",
              "type": "stat"
            },
            {
              "cacheTimeout": null,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "color": {
                    "mode": "thresholds"
                  },
                  "custom": {},
                  "mappings": [
                    {
                      "options": {
                        "match": "null",
                        "result": {
                          "text": "N/A"
                        }
                      },
                      "type": "special"
                    }
                  ],
                  "thresholds": {
                    "mode": "absolute",
                    "steps": [
                      {
                        "color": "green",
                        "value": null
                      },
                      {
                        "color": "red",
                        "value": 80
                      }
                    ]
                  },
                  "unit": "bytes"
                },
                "overrides": []
              },
              "gridPos": {
                "h": 3,
                "w": 3,
                "x": 0,
                "y": 10
              },
              "id": 40,
              "interval": null,
              "links": [],
              "maxDataPoints": 100,
              "options": {
                "colorMode": "none",
                "graphMode": "none",
                "justifyMode": "auto",
                "orientation": "horizontal",
                "reduceOptions": {
                  "calcs": [
                    "lastNotNull"
                  ],
                  "fields": "",
                  "values": false
                },
                "text": {},
                "textMode": "auto"
              },
              "pluginVersion": "7.0.6",
              "targets": [
                {
                  "expr": "pg_settings_shared_buffers_bytes{instance=~\"${instance}:9187\"}",
                  "format": "time_series",
                  "intervalFactor": 1,
                  "refId": "A"
                }
              ],
              "title": "Shared Buffers",
              "type": "stat"
            },
            {
              "cacheTimeout": null,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "color": {
                    "mode": "thresholds"
                  },
                  "custom": {},
                  "mappings": [
                    {
                      "options": {
                        "match": "null",
                        "result": {
                          "text": "N/A"
                        }
                      },
                      "type": "special"
                    }
                  ],
                  "thresholds": {
                    "mode": "absolute",
                    "steps": [
                      {
                        "color": "green",
                        "value": null
                      },
                      {
                        "color": "red",
                        "value": 80
                      }
                    ]
                  },
                  "unit": "none"
                },
                "overrides": []
              },
              "gridPos": {
                "h": 3,
                "w": 3,
                "x": 3,
                "y": 10
              },
              "id": 54,
              "interval": null,
              "links": [],
              "maxDataPoints": 100,
              "options": {
                "colorMode": "none",
                "graphMode": "none",
                "justifyMode": "auto",
                "orientation": "horizontal",
                "reduceOptions": {
                  "calcs": [
                    "mean"
                  ],
                  "fields": "",
                  "values": false
                },
                "text": {},
                "textMode": "auto"
              },
              "pluginVersion": "7.0.6",
              "targets": [
                {
                  "expr": "pg_settings_max_worker_processes{instance=~\"${instance}:9187\"}",
                  "format": "time_series",
                  "intervalFactor": 1,
                  "refId": "A"
                }
              ],
              "title": "Max Worker Processes",
              "type": "stat"
            }
          ],
          "title": "Settings",
          "type": "row"
        },
        {
          "collapsed": true,
          "datasource": "${DS_PROMETHEUS}",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 7
          },
          "id": 92,
          "panels": [
            {
              "aliasColors": {},
              "bars": true,
              "cacheTimeout": null,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 17,
                "x": 0,
                "y": 8
              },
              "hiddenSeries": false,
              "id": 96,
              "legend": {
                "alignAsTable": true,
                "avg": false,
                "current": true,
                "max": false,
                "min": false,
                "rightSide": true,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": false,
              "linewidth": 1,
              "links": [],
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "pg_database_size{instance=~\"${instance}:9187\", datname!~\"template0|template1\"}",
                  "instant": false,
                  "interval": "",
                  "intervalFactor": 1,
                  "legendFormat": "{{datname}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Database Size",
              "tooltip": {
                "shared": false,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "series",
                "name": null,
                "show": true,
                "values": [
                  "current"
                ]
              },
              "yaxes": [
                {
                  "decimals": 1,
                  "format": "bytes",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 1,
                  "format": "bytes",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "columns": [
                {
                  "text": "Current",
                  "value": "current"
                }
              ],
              "datasource": "${DS_PROMETHEUS}",
              "fontSize": "100%",
              "gridPos": {
                "h": 4,
                "w": 4,
                "x": 17,
                "y": 8
              },
              "id": 234,
              "pageSize": 100,
              "showHeader": true,
              "sort": {
                "col": 0,
                "desc": true
              },
              "styles": [
                {
                  "alias": "",
                  "align": "left",
                  "colorMode": null,
                  "colors": [
                    "rgba(245, 54, 54, 0.9)",
                    "rgba(237, 129, 40, 0.89)",
                    "rgba(50, 172, 45, 0.97)"
                  ],
                  "dateFormat": "YYYY-MM-DD HH:mm:ss",
                  "decimals": 2,
                  "mappingType": 1,
                  "pattern": "Current",
                  "thresholds": [],
                  "type": "number",
                  "unit": "bytes"
                }
              ],
              "targets": [
                {
                  "expr": "node_filesystem_avail_bytes{instance=~\"${instance}:9187\",mountpoint=\"/var/lib/postgresql\",fstype!=\"\"}",
                  "interval": "",
                  "legendFormat": "Available",
                  "refId": "A"
                },
                {
                  "expr": "node_filesystem_size_bytes{instance=~\"${instance}:9187\",mountpoint=\"/var/lib/postgresql\",fstype!=\"\"}",
                  "interval": "",
                  "legendFormat": "Total",
                  "refId": "B"
                }
              ],
              "timeFrom": null,
              "timeShift": null,
              "title": "Database Disk Size",
              "transform": "timeseries_aggregations",
              "type": "table-old"
            },
            {
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "displayName": "",
                  "mappings": [],
                  "max": 100,
                  "min": 0,
                  "thresholds": {
                    "mode": "absolute",
                    "steps": [
                      {
                        "color": "green",
                        "value": null
                      },
                      {
                        "color": "orange",
                        "value": 75
                      },
                      {
                        "color": "red",
                        "value": 90
                      }
                    ]
                  },
                  "unit": "percent"
                },
                "overrides": []
              },
              "gridPos": {
                "h": 8,
                "w": 3,
                "x": 21,
                "y": 8
              },
              "id": 232,
              "options": {
                "orientation": "auto",
                "reduceOptions": {
                  "calcs": [
                    "last"
                  ],
                  "fields": "",
                  "values": false
                },
                "showThresholdLabels": false,
                "showThresholdMarkers": true,
                "text": {}
              },
              "pluginVersion": "8.1.2",
              "targets": [
                {
                  "expr": "(1.0 - node_filesystem_avail_bytes{instance=~\"${instance}:9187\",mountpoint=\"/var/lib/postgresql\",fstype!=\"\"} / node_filesystem_size_bytes{instance=~\"${instance}:9187\",mountpoint=\"/var/lib/postgresql\",fstype!=\"\"}) * 100",
                  "interval": "",
                  "legendFormat": "Size",
                  "refId": "A"
                },
                {
                  "expr": "(1.0 - node_filesystem_files_free{instance=~\"${instance}:9187\",mountpoint=\"/var/lib/postgresql\",fstype!=\"\"} / node_filesystem_files{instance=~\"${instance}:9187\",mountpoint=\"/var/lib/postgresql\",fstype!=\"\"}) * 100",
                  "interval": "",
                  "legendFormat": "inodes",
                  "refId": "B"
                }
              ],
              "timeFrom": null,
              "timeShift": null,
              "title": "Database Disk Usage",
              "type": "gauge"
            },
            {
              "columns": [
                {
                  "text": "Current",
                  "value": "current"
                }
              ],
              "datasource": "${DS_PROMETHEUS}",
              "fontSize": "100%",
              "gridPos": {
                "h": 4,
                "w": 4,
                "x": 17,
                "y": 12
              },
              "id": 235,
              "pageSize": 100,
              "showHeader": true,
              "sort": {
                "col": 0,
                "desc": true
              },
              "styles": [
                {
                  "alias": "",
                  "align": "left",
                  "colorMode": null,
                  "colors": [
                    "rgba(245, 54, 54, 0.9)",
                    "rgba(237, 129, 40, 0.89)",
                    "rgba(50, 172, 45, 0.97)"
                  ],
                  "dateFormat": "YYYY-MM-DD HH:mm:ss",
                  "decimals": 2,
                  "mappingType": 1,
                  "pattern": "Current",
                  "thresholds": [],
                  "type": "number",
                  "unit": "short"
                }
              ],
              "targets": [
                {
                  "expr": "node_filesystem_files{instance=~\"${instance}:9187\",mountpoint=\"/var/lib/postgresql\",fstype!=\"\"}",
                  "interval": "",
                  "legendFormat": "Total",
                  "refId": "C"
                },
                {
                  "expr": "node_filesystem_files_free{instance=~\"${instance}:9187\",mountpoint=\"/var/lib/postgresql\",fstype!=\"\"}",
                  "interval": "",
                  "legendFormat": "Free",
                  "refId": "D"
                }
              ],
              "timeFrom": null,
              "timeShift": null,
              "title": "Database Disk inodes",
              "transform": "timeseries_aggregations",
              "type": "table-old"
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 11,
                "w": 24,
                "x": 0,
                "y": 16
              },
              "hiddenSeries": false,
              "id": 195,
              "legend": {
                "alignAsTable": true,
                "avg": false,
                "current": true,
                "hideEmpty": true,
                "hideZero": true,
                "max": false,
                "min": false,
                "rightSide": true,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "sort_desc(topk(10, pg_total_relation_size_bytes{instance=~\"${instance}:9187\"}))",
                  "interval": "",
                  "legendFormat": "Database: {{datname}}, Schema: {{schemaname}}, Table: {{relname}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Top 10 bigger tables",
              "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "format": "bytes",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            }
          ],
          "title": "Database Size",
          "type": "row"
        },
        {
          "collapsed": true,
          "datasource": "${DS_PROMETHEUS}",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 8
          },
          "id": 116,
          "panels": [
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 0,
                "y": 9
              },
              "hiddenSeries": false,
              "id": 122,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideZero": true,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "topk(10, sum by (relname, instance,datname,schemaname) (rate(pg_stat_user_tables_idx_scan{instance=~\"${instance}:9187\"}[5m])) + sum by (relname, instance,datname,schemaname) (rate(pg_stat_user_tables_seq_scan{instance=~\"${instance}:9187\"}[5m])))",
                  "interval": "",
                  "legendFormat": "Database: {{datname}}, Schema: {{schemaname}}, Table: {{relname}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "More Consulted Tables (Top 10)",
              "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 12,
                "y": 9
              },
              "hiddenSeries": false,
              "id": 124,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "hideZero": true,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "topk(10, rate(pg_stat_user_tables_n_tup_ins{instance=~\"${instance}:9187\"}[5m]))",
                  "interval": "",
                  "legendFormat": "Database: {{datname}}, Schema: {{schemaname}}, Table: {{relname}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Table with more inserts (Top 10)",
              "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 0,
                "y": 17
              },
              "hiddenSeries": false,
              "id": 128,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "hideZero": true,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "topk(10, rate(pg_stat_user_tables_n_tup_upd{instance=~\"${instance}:9187\"}[5m]))",
                  "interval": "",
                  "legendFormat": "Database: {{datname}}, Schema: {{schemaname}}, Table: {{relname}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Tables with more UPDATE operations (Top 10)",
              "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": "",
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 12,
                "y": 17
              },
              "hiddenSeries": false,
              "id": 126,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "hideZero": true,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "topk(10, rate(pg_stat_user_tables_n_tup_del{instance=~\"${instance}:9187\"}[5m]))",
                  "interval": "",
                  "legendFormat": "Database: {{datname}}, Schema: {{schemaname}}, Table: {{relname}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Tables with more DELETE operations (Top 10)",
              "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            }
          ],
          "title": "Usage Stats",
          "type": "row"
        },
        {
          "collapsed": true,
          "datasource": "${DS_PROMETHEUS}",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 9
          },
          "id": 130,
          "panels": [
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 0,
                "y": 10
              },
              "hiddenSeries": false,
              "id": 205,
              "legend": {
                "alignAsTable": true,
                "avg": false,
                "current": true,
                "max": false,
                "min": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "topk(20, pg_index_bloat_size{instance=~\"${instance}:9187\"})",
                  "interval": "",
                  "legendFormat": "Database: {{datname}}, Schema: {{schema_name}}, Table: {{tblname}}, Index: {{idxname}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Index bloat Size (Top 20)",
              "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "format": "bytes",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "bytes",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "description": "",
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 12,
                "y": 10
              },
              "hiddenSeries": false,
              "id": 207,
              "legend": {
                "alignAsTable": true,
                "avg": false,
                "current": true,
                "max": false,
                "min": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "topk(20, pg_index_real_size{instance=~\"${instance}:9187\"})",
                  "interval": "",
                  "legendFormat": "Database: {{datname}}, Schema: {{schema_name}}, Table: {{tblname}}, Index: {{idxname}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Index Size (Top 20)",
              "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "format": "bytes",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "bytes",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 2,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 24,
                "x": 0,
                "y": 18
              },
              "hiddenSeries": false,
              "id": 209,
              "legend": {
                "alignAsTable": true,
                "avg": false,
                "current": true,
                "max": false,
                "min": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "topk(10, pg_index_bloat_ratio{instance=~\"${instance}:9187\"})",
                  "interval": "",
                  "legendFormat": "Database: {{datname}}, Schema: {{schema_name}}, Table: {{tblname}}, Index: {{idxname}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Index Bloat Ratio (Top 20)",
              "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": null,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": null,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            }
          ],
          "title": "Index Bloat",
          "type": "row"
        },
        {
          "collapsed": true,
          "datasource": "${DS_PROMETHEUS}",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 10
          },
          "id": 104,
          "panels": [
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 0,
                "y": 11
              },
              "hiddenSeries": false,
              "id": 106,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "hideZero": true,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 2,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "topk(10, rate(pg_stat_user_tables_n_dead_tup{instance=~\"${instance}:9187\"}[5m])*300)",
                  "interval": "",
                  "legendFormat": "Database: {{datname}}, Schema: {{schemaname}}, Table: {{relname}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Dead tuples (top 10)",
              "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 2,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 12,
                "y": 11
              },
              "hiddenSeries": false,
              "id": 199,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "hideZero": true,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 2,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "topk(20, pg_table_bloat_bloat_ratio{instance=~\"${instance}:9187\"})",
                  "interval": "",
                  "legendFormat": "Database: {{datname}}, Schema:{{schemaname}}, Table: {{tablename}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Table Bloat Ratio (top 20)",
              "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": null,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": null,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 2,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 0,
                "y": 19
              },
              "hiddenSeries": false,
              "id": 201,
              "legend": {
                "alignAsTable": true,
                "avg": false,
                "current": true,
                "max": false,
                "min": false,
                "rightSide": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "topk(20, pg_table_bloat_bloat_size{instance=~\"${instance}:9187\"})",
                  "interval": "",
                  "legendFormat": "Database: {{datname}}, Schema: {{schemaname}}, Table: {{tablename}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Table Bloat Size",
              "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 2,
                  "format": "bytes",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 2,
                  "format": "bytes",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 2,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 12,
                "y": 19
              },
              "hiddenSeries": false,
              "id": 203,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "max": false,
                "min": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "topk(20, pg_table_bloat_extra_size{instance=~\"${instance}:9187\"})",
                  "interval": "",
                  "legendFormat": "Database: {{datname}}, Schema: {{schemaname}}, Table: {{tablename}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Table pages Extra size (Top 20)",
              "tooltip": {
                "shared": true,
                "sort": 2,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 2,
                  "format": "bytes",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 2,
                  "format": "bytes",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            }
          ],
          "title": "Table Bloat",
          "type": "row"
        },
        {
          "collapsed": true,
          "datasource": "${DS_PROMETHEUS}",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 11
          },
          "id": 88,
          "panels": [
            {
              "cacheTimeout": null,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "color": {
                    "mode": "thresholds"
                  },
                  "custom": {},
                  "mappings": [
                    {
                      "options": {
                        "match": "null",
                        "result": {
                          "text": "0"
                        }
                      },
                      "type": "special"
                    }
                  ],
                  "thresholds": {
                    "mode": "absolute",
                    "steps": [
                      {
                        "color": "green",
                        "value": null
                      },
                      {
                        "color": "red",
                        "value": 80
                      }
                    ]
                  },
                  "unit": "none"
                },
                "overrides": []
              },
              "gridPos": {
                "h": 3,
                "w": 3,
                "x": 0,
                "y": 12
              },
              "id": 102,
              "interval": null,
              "links": [],
              "maxDataPoints": 100,
              "options": {
                "colorMode": "background",
                "graphMode": "none",
                "justifyMode": "auto",
                "orientation": "horizontal",
                "reduceOptions": {
                  "calcs": [
                    "lastNotNull"
                  ],
                  "fields": "",
                  "values": false
                },
                "text": {},
                "textMode": "auto"
              },
              "pluginVersion": "7.0.6",
              "targets": [
                {
                  "expr": "count(pg_replication_status_lag_size{instance=~\"${instance}:9187\", state=\"streaming\"} and on (instance)(pg_replication_is_replica == 0))",
                  "interval": "",
                  "legendFormat": "",
                  "refId": "A"
                }
              ],
              "timeFrom": null,
              "timeShift": null,
              "title": "Active Replica Nodes",
              "type": "stat"
            },
            {
              "cacheTimeout": null,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "color": {
                    "mode": "thresholds"
                  },
                  "custom": {},
                  "mappings": [
                    {
                      "options": {
                        "match": "null",
                        "result": {
                          "text": "0"
                        }
                      },
                      "type": "special"
                    }
                  ],
                  "thresholds": {
                    "mode": "absolute",
                    "steps": [
                      {
                        "color": "green",
                        "value": null
                      },
                      {
                        "color": "red",
                        "value": 80
                      }
                    ]
                  },
                  "unit": "none"
                },
                "overrides": []
              },
              "gridPos": {
                "h": 3,
                "w": 3,
                "x": 3,
                "y": 12
              },
              "id": 198,
              "interval": null,
              "links": [],
              "maxDataPoints": 100,
              "options": {
                "colorMode": "background",
                "graphMode": "none",
                "justifyMode": "auto",
                "orientation": "horizontal",
                "reduceOptions": {
                  "calcs": [
                    "mean"
                  ],
                  "fields": "",
                  "values": false
                },
                "text": {},
                "textMode": "auto"
              },
              "pluginVersion": "7.0.6",
              "targets": [
                {
                  "expr": "count(pg_replication_slots_active{instance=~\"${instance}:9187\"}==1)",
                  "refId": "A"
                }
              ],
              "timeFrom": null,
              "timeShift": null,
              "title": "Active Replication Slots",
              "type": "stat"
            },
            {
              "cacheTimeout": null,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "color": {
                    "mode": "thresholds"
                  },
                  "custom": {},
                  "mappings": [
                    {
                      "options": {
                        "match": "null",
                        "result": {
                          "text": "N/A"
                        }
                      },
                      "type": "special"
                    }
                  ],
                  "thresholds": {
                    "mode": "absolute",
                    "steps": [
                      {
                        "color": "green",
                        "value": null
                      },
                      {
                        "color": "red",
                        "value": 80
                      }
                    ]
                  },
                  "unit": "none"
                },
                "overrides": []
              },
              "gridPos": {
                "h": 3,
                "w": 6,
                "x": 6,
                "y": 12
              },
              "id": 98,
              "interval": null,
              "links": [],
              "maxDataPoints": 100,
              "options": {
                "colorMode": "none",
                "graphMode": "none",
                "justifyMode": "auto",
                "orientation": "horizontal",
                "reduceOptions": {
                  "calcs": [
                    "mean"
                  ],
                  "fields": "",
                  "values": false
                },
                "text": {},
                "textMode": "auto"
              },
              "pluginVersion": "7.0.6",
              "targets": [
                {
                  "expr": "pg_wal_position_bytes{instance=~\"${instance}:9187\"}",
                  "refId": "A"
                }
              ],
              "timeFrom": null,
              "timeShift": null,
              "title": "Current LSN",
              "type": "stat"
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "custom": {},
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 14,
                "w": 12,
                "x": 12,
                "y": 12
              },
              "hiddenSeries": false,
              "id": 196,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": false,
                "hideZero": false,
                "max": false,
                "min": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true,
                "dataLinks": []
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "pg_replication_status_lag_size{cluster_name=\"$cluster_name\"} and on (instance)(pg_replication_is_replica == 0)",
                  "interval": "",
                  "legendFormat": "Replica: {{application_name}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Replication lag size",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "format": "bytes",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "bytes",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "cacheTimeout": null,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "color": {
                    "mode": "thresholds"
                  },
                  "custom": {},
                  "mappings": [
                    {
                      "options": {
                        "match": "null",
                        "result": {
                          "color": "rgba(237, 129, 40, 0.89)",
                          "text": "0"
                        }
                      },
                      "type": "special"
                    }
                  ],
                  "thresholds": {
                    "mode": "absolute",
                    "steps": [
                      {
                        "color": "#299c46",
                        "value": null
                      },
                      {
                        "color": "rgba(237, 129, 40, 0.89)",
                        "value": 0
                      },
                      {
                        "color": "#C4162A",
                        "value": 1
                      }
                    ]
                  },
                  "unit": "none"
                },
                "overrides": []
              },
              "gridPos": {
                "h": 3,
                "w": 6,
                "x": 0,
                "y": 15
              },
              "id": 197,
              "interval": null,
              "links": [],
              "maxDataPoints": 100,
              "options": {
                "colorMode": "none",
                "graphMode": "none",
                "justifyMode": "auto",
                "orientation": "horizontal",
                "reduceOptions": {
                  "calcs": [
                    "lastNotNull"
                  ],
                  "fields": "",
                  "values": false
                },
                "text": {},
                "textMode": "auto"
              },
              "pluginVersion": "7.0.6",
              "targets": [
                {
                  "expr": "count(pg_replication_status_lag_size{instance=~\"${instance}:9187\", state!=\"streaming\"} and on (instance)(pg_replication_is_replica == 0))",
                  "format": "time_series",
                  "interval": "",
                  "legendFormat": "",
                  "refId": "A"
                }
              ],
              "timeFrom": null,
              "timeShift": null,
              "title": "Replica with no streaming status",
              "type": "stat"
            },
            {
              "cacheTimeout": null,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "color": {
                    "mode": "thresholds"
                  },
                  "custom": {},
                  "mappings": [
                    {
                      "options": {
                        "match": "null",
                        "result": {
                          "color": "rgba(237, 129, 40, 0.89)",
                          "text": "0"
                        }
                      },
                      "type": "special"
                    }
                  ],
                  "thresholds": {
                    "mode": "absolute",
                    "steps": [
                      {
                        "color": "#299c46",
                        "value": null
                      },
                      {
                        "color": "rgba(237, 129, 40, 0.89)",
                        "value": 0
                      },
                      {
                        "color": "#C4162A",
                        "value": 1
                      }
                    ]
                  },
                  "unit": "none"
                },
                "overrides": []
              },
              "gridPos": {
                "h": 3,
                "w": 6,
                "x": 6,
                "y": 15
              },
              "id": 100,
              "interval": null,
              "links": [],
              "maxDataPoints": 100,
              "options": {
                "colorMode": "none",
                "graphMode": "none",
                "justifyMode": "auto",
                "orientation": "horizontal",
                "reduceOptions": {
                  "calcs": [
                    "lastNotNull"
                  ],
                  "fields": "",
                  "values": false
                },
                "text": {},
                "textMode": "auto"
              },
              "pluginVersion": "7.0.6",
              "targets": [
                {
                  "expr": "count(pg_replication_slots_active{instance=~\"${instance}:9187\"}==0)",
                  "format": "time_series",
                  "legendFormat": "",
                  "refId": "A"
                }
              ],
              "timeFrom": null,
              "timeShift": null,
              "title": "Inactive Replication Slots",
              "type": "stat"
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "custom": {},
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 12,
                "x": 0,
                "y": 18
              },
              "hiddenSeries": false,
              "id": 90,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "max": false,
                "min": false,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true,
                "dataLinks": []
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "pg_replication_lag{cluster_name=\"$cluster_name\"} and on (instance)(pg_replication_is_replica == 1)",
                  "interval": "",
                  "legendFormat": "Replication lag in pod {{pod}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Replication lag (seconds)",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "format": "s",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            }
          ],
          "title": "Replication",
          "type": "row"
        },
        {
          "collapsed": true,
          "datasource": "${DS_PROMETHEUS}",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 12
          },
          "id": 80,
          "panels": [
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 11,
                "x": 0,
                "y": 13
              },
              "hiddenSeries": false,
              "id": 82,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "hideZero": true,
                "max": false,
                "min": false,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "rate(pg_stat_archiver_archived_count{instance=~\"${instance}:9187\"}[5m])*300",
                  "interval": "",
                  "legendFormat": "# of WALs archived",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "No. WALs files archived",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 10,
                "x": 11,
                "y": 13
              },
              "hiddenSeries": false,
              "id": 242,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "hideZero": true,
                "max": false,
                "min": false,
                "show": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "rate(pg_stat_archiver_failed_count{instance=~\"${instance}:9187\"}[5m])*300",
                  "interval": "",
                  "legendFormat": "# Archive attemps",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Number of failed attempts for archiving WAL files",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "mappings": [],
                  "thresholds": {
                    "mode": "absolute",
                    "steps": [
                      {
                        "color": "green",
                        "value": null
                      },
                      {
                        "color": "red",
                        "value": 80
                      }
                    ]
                  }
                },
                "overrides": []
              },
              "gridPos": {
                "h": 8,
                "w": 3,
                "x": 21,
                "y": 13
              },
              "id": 241,
              "options": {
                "colorMode": "value",
                "graphMode": "area",
                "justifyMode": "auto",
                "orientation": "auto",
                "reduceOptions": {
                  "calcs": [
                    "mean"
                  ],
                  "fields": "",
                  "values": false
                },
                "text": {},
                "textMode": "value"
              },
              "pluginVersion": "8.1.2",
              "targets": [
                {
                  "expr": "pg_stat_archiver_last_archive_age{instance=~\"${instance}:9187\"}",
                  "instant": false,
                  "interval": "",
                  "legendFormat": "",
                  "refId": "A"
                }
              ],
              "timeFrom": null,
              "timeShift": null,
              "title": "Last archive age (Seconds)",
              "type": "stat"
            }
          ],
          "title": "Archiving",
          "type": "row"
        },
        {
          "collapsed": true,
          "datasource": "${DS_PROMETHEUS}",
          "fieldConfig": {
            "defaults": {},
            "overrides": []
          },
          "gridPos": {
            "h": 1,
            "w": 24,
            "x": 0,
            "y": 13
          },
          "id": 72,
          "panels": [
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 8,
                "x": 0,
                "y": 14
              },
              "hiddenSeries": false,
              "id": 74,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "max": false,
                "min": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "pg_slow_queries{instance=~\"${instance}:9187\"}",
                  "interval": "",
                  "intervalFactor": 1,
                  "legendFormat": "Database: {{datname}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Slow Queries Count",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 16,
                "x": 8,
                "y": 14
              },
              "hiddenSeries": false,
              "id": 86,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "hideEmpty": true,
                "hideZero": true,
                "max": false,
                "min": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "topk(20,rate(pg_stat_user_tables_seq_tup_read{instance=~\"${instance}:9187\"}[5m]))>0",
                  "interval": "",
                  "legendFormat": "Database: {{datname}}, Table: {{relname}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Sequential Scans",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 8,
                "x": 0,
                "y": 22
              },
              "hiddenSeries": false,
              "id": 236,
              "legend": {
                "alignAsTable": true,
                "avg": false,
                "current": true,
                "max": false,
                "min": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "pg_long_running_transactions_age_in_seconds{instance=~\"${instance}:9187\"}",
                  "interval": "",
                  "legendFormat": "Database: {{datname}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Long running transaction age(sec)",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "format": "s",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 8,
                "x": 8,
                "y": 22
              },
              "hiddenSeries": false,
              "id": 76,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "max": false,
                "min": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "pg_blocked_queries{instance=~\"${instance}:9187\"}",
                  "interval": "",
                  "legendFormat": "Database: {{datname}}, Table: {{table}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Blocked Queries Count",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "decimals": 0,
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 8,
                "x": 16,
                "y": 22
              },
              "hiddenSeries": false,
              "id": 84,
              "legend": {
                "alignAsTable": true,
                "avg": true,
                "current": true,
                "max": false,
                "min": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "pg_long_running_transactions_transactions{instance=~\"${instance}:9187\"}",
                  "interval": "",
                  "legendFormat": "Database: {{datname}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Number of long running transactions",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 8,
                "x": 0,
                "y": 30
              },
              "hiddenSeries": false,
              "id": 78,
              "legend": {
                "alignAsTable": true,
                "avg": false,
                "current": true,
                "hideEmpty": true,
                "hideZero": true,
                "max": false,
                "min": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": true
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "pg_oldest_blocked_age_seconds{instance=~\"${instance}:9187\"}",
                  "interval": "",
                  "legendFormat": "Database: {{datname}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Queries largest  time lock",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": null,
                  "format": "s",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            },
            {
              "aliasColors": {},
              "bars": false,
              "dashLength": 10,
              "dashes": false,
              "datasource": "${DS_PROMETHEUS}",
              "fieldConfig": {
                "defaults": {
                  "links": []
                },
                "overrides": []
              },
              "fill": 1,
              "fillGradient": 0,
              "gridPos": {
                "h": 8,
                "w": 8,
                "x": 8,
                "y": 30
              },
              "hiddenSeries": false,
              "id": 114,
              "legend": {
                "avg": false,
                "current": false,
                "max": false,
                "min": false,
                "show": true,
                "sort": "current",
                "sortDesc": true,
                "total": false,
                "values": false
              },
              "lines": true,
              "linewidth": 1,
              "nullPointMode": "null",
              "options": {
                "alertThreshold": true
              },
              "percentage": false,
              "pluginVersion": "8.1.2",
              "pointradius": 2,
              "points": false,
              "renderer": "flot",
              "seriesOverrides": [],
              "spaceLength": 10,
              "stack": false,
              "steppedLine": false,
              "targets": [
                {
                  "expr": "pg_stuck_idle_in_transaction_queries{instance=~\"${instance}:9187\"}",
                  "interval": "",
                  "legendFormat": "Database: {{datname}}",
                  "refId": "A"
                }
              ],
              "thresholds": [],
              "timeFrom": null,
              "timeRegions": [],
              "timeShift": null,
              "title": "Queries that are stuck being idle in transactions",
              "tooltip": {
                "shared": true,
                "sort": 0,
                "value_type": "individual"
              },
              "type": "graph",
              "xaxis": {
                "buckets": null,
                "mode": "time",
                "name": null,
                "show": true,
                "values": []
              },
              "yaxes": [
                {
                  "decimals": 0,
                  "format": "short",
                  "label": "",
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                },
                {
                  "format": "short",
                  "label": null,
                  "logBase": 1,
                  "max": null,
                  "min": null,
                  "show": true
                }
              ],
              "yaxis": {
                "align": false,
                "alignLevel": null
              }
            }
          ],
          "title": "Queries",
          "type": "row"
        }
      ],
      "refresh": false,
      "schemaVersion": 25,
      "style": "dark",
      "tags": [
        "postgres",
        "db",
        "stats"
      ],
      "templating": {
        "list": [
          {
            "allValue": null,
            "current": {},
            "datasource": "${DS_PROMETHEUS}",
            "definition": "label_values(namespace)",
            "description": null,
            "error": null,
            "hide": 0,
            "includeAll": false,
            "label": "Namespace",
            "multi": false,
            "name": "namespace",
            "options": [],
            "query": "label_values(namespace)",
            "refresh": 2,
            "regex": "",
            "skipUrlSync": false,
            "sort": 1,
            "tagValuesQuery": "",
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          },
          {
            "allValue": null,
            "current": {},
            "datasource": "${DS_PROMETHEUS}",
            "definition": "query_result(up{namespace=\"$namespace\"})",
            "description": null,
            "error": null,
            "hide": 0,
            "includeAll": false,
            "label": "Pod",
            "multi": false,
            "name": "pod",
            "options": [],
            "query": "query_result(up{namespace=\"$namespace\"})",
            "refresh": 2,
            "regex": "/.*pod=\"([^\":]+).*/",
            "skipUrlSync": false,
            "sort": 1,
            "tagValuesQuery": "",
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          },
          {
            "allValue": null,
            "current": {},
            "datasource": "${DS_PROMETHEUS}",
            "definition": "query_result(up{namespace=\"$namespace\", pod=\"$pod\"})",
            "description": null,
            "error": null,
            "hide": 2,
            "includeAll": false,
            "label": "Instance",
            "multi": false,
            "name": "instance",
            "options": [],
            "query": "query_result(up{namespace=\"$namespace\", pod=\"$pod\"})",
            "refresh": 1,
            "regex": "/.*instance=\"([^\":]+).*/",
            "skipUrlSync": false,
            "sort": 1,
            "tagValuesQuery": "",
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          },
          {
            "allValue": null,
            "current": {},
            "datasource": "${DS_PROMETHEUS}",
            "definition": "label_values(datname)",
            "description": null,
            "error": null,
            "hide": 0,
            "includeAll": true,
            "label": "Database",
            "multi": true,
            "name": "datname",
            "options": [],
            "query": "label_values(datname)",
            "refresh": 1,
            "regex": "",
            "skipUrlSync": false,
            "sort": 1,
            "tagValuesQuery": "",
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          },
          {
            "allValue": null,
            "current": {},
            "datasource": "${DS_PROMETHEUS}",
            "definition": "query_result(pg_up{pod=\"$pod\"})",
            "description": null,
            "error": null,
            "hide": 2,
            "includeAll": false,
            "label": "Cluster Name",
            "multi": false,
            "name": "cluster_name",
            "options": [],
            "query": "query_result(pg_up{pod=\"$pod\"})",
            "refresh": 1,
            "regex": "/.*cluster_name=\"([^\":]+).*/",
            "skipUrlSync": false,
            "sort": 1,
            "tagValuesQuery": "",
            "tagsQuery": "",
            "type": "query",
            "useTags": false
          },
          {
            "datasource": null,
            "description": null,
            "error": null,
            "filters": [],
            "hide": 0,
            "label": "",
            "name": "Filters",
            "skipUrlSync": false,
            "type": "adhoc"
          }
        ]
      },
      "time": {
        "from": "now-12h",
        "to": "now"
      },
      "timepicker": {
        "refresh_intervals": [
          "5s",
          "10s",
          "30s",
          "1m",
          "5m",
          "15m",
          "30m",
          "1h",
          "2h",
          "1d"
        ],
        "time_options": [
          "5m",
          "15m",
          "1h",
          "6h",
          "12h",
          "24h",
          "2d",
          "7d",
          "30d"
        ]
      },
      "timezone": "utc",
      "title": "StackGres Dashboard",
      "uid": "000000041",
      "version": 6
    }
    

---
# Source: stackgres-operator/templates/webapi-nginx-configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: stackgres-restapi-nginx
  namespace: stackgres
  annotations:
    meta.helm.sh/release-name: stackgres-operator
    meta.helm.sh/release-namespace: stackgres
  labels:
    app.kubernetes.io/managed-by: Helm
data:
  nginx.conf: |
    pid        /tmp/nginx.pid;
    events{
    }
    error_log  /dev/stderr  warn;
    http {
        client_body_temp_path /tmp/client_temp;
        proxy_temp_path       /tmp/proxy_temp_path;
        fastcgi_temp_path     /tmp/fastcgi_temp;
        uwsgi_temp_path       /tmp/uwsgi_temp;
        scgi_temp_path        /tmp/scgi_temp;

        client_max_body_size  20M;

        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                        '$status $body_bytes_sent "$http_referer" '
                        '"$http_user_agent" "$http_x_forwarded_for"';
        access_log  /dev/stdout  main;

        sendfile        on;

        keepalive_timeout  65;

        include /etc/nginx/conf.d/*.conf;
    }
  stackgres-restapi.template: |
    map $http_host $my_forwarded_port {
      default $server_port;
      "~^[^\:]+:(?<p>\d+)$" $p;
    }
    server {
      set $grafana_embedded '${GRAFANA_EMBEDDED}';

      server_name  localhost;

      listen       9080;
      listen       9443 ssl http2;
      ssl_certificate         /etc/operator/certs/tls.crt;
      ssl_certificate_key     /etc/operator/certs/tls.key;
      ssl_protocols           TLSv1.2 TLSv1.3;
      ssl_ciphers             ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-CHACHA20-POLY1305;
      root   /opt/app-root/src;
      index index.html;

      location /admin/ {
        try_files $uri $uri/index.html /admin/index.html;
      }

      location ~ ^(/|/admin|/admin/)$ {
        return 302 "$scheme://$http_host/admin/index.html";
      }

      location /grafana {
        if ($grafana_embedded != true) {
          return 404;
        }
        add_header Content-Type text/plain;
        return 200 "$scheme://$http_host${GRAFANA_URL_PATH}";
      }

      location ~ ^(/|/stackgres|/stackgres/)$ {
        return 302 "$scheme://$http_host/admin/index.html";
      }

      location ~ ^/stackgres {
        proxy_redirect off;
        proxy_http_version                 1.1;
        proxy_set_header Host              $host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host  $host;
        proxy_set_header X-Forwarded-Port  $my_forwarded_port;
        proxy_set_header X-Forwarded-Server $host;
        proxy_buffers                      4 256k;
        proxy_buffer_size                  128k;
        proxy_busy_buffers_size            256k;
        
        proxy_pass http://localhost:8080;
      }

      location / {
        if ($grafana_embedded != true) {
          return 404;
        }
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Server $host;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        index index.html index.htm;
        proxy_set_header Authorization "Bearer ${GRAFANA_TOKEN}";
        proxy_hide_header X-Frame-Options;
        proxy_pass "${GRAFANA_SCHEMA}://${GRAFANA_WEB_HOST}";
      }

      location = /favicon.ico {
        log_not_found off;
      }

      gzip            on;
      gzip_vary       on;
      gzip_proxied    any;
      gzip_comp_level 6;
      gzip_types      text/plain text/css text/xml application/json application/javascript application/rss+xml application/atom+xml image/svg+xml;
    }

---
# Source: stackgres-operator/templates/operator-service-account.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: stackgres-operator
rules:
- apiGroups: ["", "apps", "extensions", "rbac.authorization.k8s.io", "batch"] # "" indicates the core API group
  resources:
  - pods
  - pods/exec
  - pods/log
  - services
  - endpoints
  - endpoints/restricted
  - persistentvolumeclaims
  - configmaps
  - secrets
  - statefulsets
  - serviceaccounts
  - namespaces
  - roles
  - rolebindings
  - events
  - cronjobs
  - persistentvolumeclaims
  - jobs
  verbs:
  - get
  - list
  - watch
  - update
  - create
  - delete
  - patch
- apiGroups: ["storage.k8s.io"]
  resources: ["storageclasses"]
  verbs: ["get", "list"]
- apiGroups: ["apiextensions.k8s.io"]
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups: ["stackgres.io"]
  resources:
  - sgclusters
  - sgpgconfigs
  - sginstanceprofiles
  - sgpoolconfigs
  - sgbackupconfigs
  - sgbackups
  - sgdistributedlogs
  - sgdbops
  - sgobjectstorages
  - sgscripts
  - sgshardedclusters
  verbs:
  - create
  - watch
  - list
  - get
  - update
  - patch
  - delete
- apiGroups: ["stackgres.io"]
  resources:
  - sgclusters/status
  - sgdistributedlogs/status
  verbs:
  - update
- apiGroups: ["monitoring.coreos.com"]
  resources:
  - servicemonitors
  - podmonitors
  verbs:
  - list
  - get
  - create
  - delete
  - update
  - patch
- apiGroups: ["monitoring.coreos.com"]
  resources:
  - prometheus
  - prometheuses
  - podmonitors
  verbs:
  - list
  - get

---
# Source: stackgres-operator/templates/webapi-service-account.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: stackgres-restapi
  annotations:
    meta.helm.sh/release-name: stackgres-operator
    meta.helm.sh/release-namespace: stackgres
  labels:
    app.kubernetes.io/managed-by: Helm
rules:
- apiGroups:
  - ""
  resources:
  - users
  - groups
  - serviceaccount
  verbs:
  - impersonate
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
- apiGroups:
  - ""
  resources:
  - secrets # Secret Verification authentication
  verbs:
  - get
  - list

---
# Source: stackgres-operator/templates/operator-service-account.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: stackgres-operator
subjects:
- kind: ServiceAccount
  name: stackgres-operator
  namespace: stackgres
roleRef:
  kind: ClusterRole
  name: stackgres-operator
  apiGroup: rbac.authorization.k8s.io
